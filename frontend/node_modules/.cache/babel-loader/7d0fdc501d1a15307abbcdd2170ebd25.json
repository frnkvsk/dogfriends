{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadPhoto.js\";\nimport { react, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  dropzone: {\n    height: '8rem',\n    margin: '1rem',\n    padding: '1rem',\n    border: '2px dashed salmon',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    active: {\n      border: '2px solid rebeccapurple'\n    }\n  }\n}));\nexport default function UploadPhoto() {\n  const classes = useStyles();\n  const onDrop = useCallback(acceptedFiles => {\n    const url = `https://api.cloudinary.com/v1_1/dsxlpdoea/${process.env.CLOUDINARY_CLOUD_NAME}/upload`;\n    acceptedFiles.forEach(async acceptedFile => {\n      const formData = new FormData();\n      formData.append('file', acceptedFile);\n      formData.append('upload_preset', process.env.CLOUDINARY_UPLOAD_PRESET);\n      const response = await fetch(url, {\n        method: 'post',\n        body: formData\n      });\n      const data = await response.json();\n      console.log('data', data);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accepts: 'image/*',\n    multiple: false\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classes.dropzone\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), \"Drop Zone\"));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadPhoto.js"],"names":["react","useCallback","useDropzone","makeStyles","useStyles","theme","dropzone","height","margin","padding","border","display","justifyContent","alignItems","fontSize","fontWeight","cursor","active","UploadPhoto","classes","onDrop","acceptedFiles","url","process","env","CLOUDINARY_CLOUD_NAME","forEach","acceptedFile","formData","FormData","append","CLOUDINARY_UPLOAD_PRESET","response","fetch","method","body","data","json","console","log","getRootProps","getInputProps","isDragActive","accepts","multiple"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,MAAM,EAAE,MAFA;AAGRC,IAAAA,OAAO,EAAE,MAHD;AAIRC,IAAAA,MAAM,EAAE,mBAJA;AAKRC,IAAAA,OAAO,EAAE,MALD;AAMRC,IAAAA,cAAc,EAAE,QANR;AAORC,IAAAA,UAAU,EAAE,QAPJ;AAQRC,IAAAA,QAAQ,EAAE,MARF;AASRC,IAAAA,UAAU,EAAE,MATJ;AAURC,IAAAA,MAAM,EAAE,SAVA;AAWRC,IAAAA,MAAM,EAAE;AACNP,MAAAA,MAAM,EAAE;AADF;AAXA;AAD6B,CAAZ,CAAD,CAA5B;AAmBA,eAAe,SAASQ,WAAT,GAAuB;AACpC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAMgB,MAAM,GAAGnB,WAAW,CAAEoB,aAAD,IAAmB;AAC5C,UAAMC,GAAG,GAAI,6CAA4CC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,SAA3F;AAEAJ,IAAAA,aAAa,CAACK,OAAd,CAAsB,MAAOC,YAAP,IAAwB;AAC5C,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,YAAxB;AACAC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCP,OAAO,CAACC,GAAR,CAAYO,wBAA7C;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAD,EAAM;AAChCY,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,IAAI,EAAEP;AAF0B,OAAN,CAA5B;AAIA,YAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,IAAnB;AACD,KAXD;AAaD,GAhByB,EAgBvB,EAhBuB,CAA1B;AAkBA,QAAM;AAACI,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8CxC,WAAW,CAAC;AAC9DkB,IAAAA,MAD8D;AAE9DuB,IAAAA,OAAO,EAAE,SAFqD;AAG9DC,IAAAA,QAAQ,EAAE;AAHoD,GAAD,CAA/D;AAMA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAACb;AAAxB,KAAsCkC,YAAY,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,cADF,CADF;AAQD","sourcesContent":["import { react, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  dropzone: {\n    height: '8rem',\n    margin: '1rem',\n    padding: '1rem',\n    border: '2px dashed salmon',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    active: {\n      border: '2px solid rebeccapurple',\n    },\n  },\n  \n}));\n\nexport default function UploadPhoto() {\n  const classes = useStyles();\n  const onDrop = useCallback((acceptedFiles) => {\n    const url = `https://api.cloudinary.com/v1_1/dsxlpdoea/${process.env.CLOUDINARY_CLOUD_NAME}/upload`;\n\n    acceptedFiles.forEach(async (acceptedFile) => {\n      const formData = new FormData();\n      formData.append('file', acceptedFile);\n      formData.append('upload_preset', process.env.CLOUDINARY_UPLOAD_PRESET);\n\n      const response = await fetch(url, {\n        method: 'post',\n        body: formData,\n      });\n      const data = await response.json();\n      console.log('data',data)\n    });\n    \n  }, []);\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({\n    onDrop, \n    accepts: 'image/*',\n    multiple: false,\n  });\n\n  return (\n    <>\n      <div className={classes.dropzone} {...getRootProps()}>\n        <input {...getInputProps()} />\n        Drop Zone\n      </div>\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}