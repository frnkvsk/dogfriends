{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getPosts, postPostVote } from './api/MicroblogApi';\nexport const getPostsData = createAsyncThunk('getVotes', async () => {\n  const response = await getPosts();\n  return response.data;\n});\nexport const microblogVotesSlice = createSlice({\n  name: 'votesList',\n  initialState: {\n    votesList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  reducers: {\n    vote: (state, action) => {\n      const {\n        id,\n        direction,\n        token\n      } = action.payload;\n      postPostVote(id, direction, token);\n    }\n  },\n  extraReducers: {\n    // // get all posts\n    [getPostsData.pending]: (state, action) => {\n      state.votesList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getPostsData.fulfilled]: (state, action) => {\n      state.votesList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getPostsData.rejected]: (state, action) => {\n      state.votesList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    }\n  }\n});\nexport const {\n  vote\n} = microblogVotesSlice.actions;\nexport const selectVotes = state => state.votesList.votesList;\nexport default microblogVotesSlice.reducer;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/dogfriends-app/src/features/dogfriends/dogfriendsVotesSlice.js"],"names":["createAsyncThunk","createSlice","getPosts","postPostVote","getPostsData","response","data","microblogVotesSlice","name","initialState","votesList","status","error","reducers","vote","state","action","id","direction","token","payload","extraReducers","pending","fulfilled","rejected","actions","selectVotes","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SACEC,QADF,EAEEC,YAFF,QAGO,oBAHP;AAMA,OAAO,MAAMC,YAAY,GAAGJ,gBAAgB,CAC1C,UAD0C,EAE1C,YAAY;AACV,QAAMK,QAAQ,GAAG,MAAMH,QAAQ,EAA/B;AACA,SAAOG,QAAQ,CAACC,IAAhB;AACD,CALyC,CAArC;AAQP,OAAO,MAAMC,mBAAmB,GAAGN,WAAW,CAAC;AAC7CO,EAAAA,IAAI,EAAE,WADuC;AAE7CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE,MADC;AAETL,MAAAA,IAAI,EAAE,EAFG;AAGTM,MAAAA,KAAK,EAAE;AAHE;AADC,GAF+B;AAS7CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvB,YAAM;AAACC,QAAAA,EAAD;AAAKC,QAAAA,SAAL;AAAgBC,QAAAA;AAAhB,UAAyBH,MAAM,CAACI,OAAtC;AACAjB,MAAAA,YAAY,CAACc,EAAD,EAAKC,SAAL,EAAgBC,KAAhB,CAAZ;AACD;AAJO,GATmC;AAe7CE,EAAAA,aAAa,EAAE;AACb;AACA,KAACjB,YAAY,CAACkB,OAAd,GAAwB,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,SADQ;AAEhBL,QAAAA,IAAI,EAAE,EAFU;AAGhBM,QAAAA,KAAK,EAAE;AAHS,OAAlB;AAKD,KARY;AASb,KAACR,YAAY,CAACmB,SAAd,GAA0B,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,WADQ;AAEhBL,QAAAA,IAAI,EAAEU,MAAM,CAACI,OAFG;AAGhBR,QAAAA,KAAK,EAAE;AAHS,OAAlB;AAKD,KAfY;AAgBb,KAACR,YAAY,CAACoB,QAAd,GAAyB,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,UADQ;AAEhBL,QAAAA,IAAI,EAAE,EAFU;AAGhBM,QAAAA,KAAK,EAAEI,MAAM,CAACI;AAHE,OAAlB;AAKD;AAtBY;AAf8B,CAAD,CAAvC;AAyCP,OAAO,MAAM;AACXN,EAAAA;AADW,IAETP,mBAAmB,CAACkB,OAFjB;AAIP,OAAO,MAAMC,WAAW,GAAGX,KAAK,IAAIA,KAAK,CAACL,SAAN,CAAgBA,SAA7C;AAEP,eAAeH,mBAAmB,CAACoB,OAAnC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  getPosts,\n  postPostVote,\n} from './api/MicroblogApi';\n\n\nexport const getPostsData = createAsyncThunk(\n  'getVotes',\n  async () => {\n    const response = await getPosts();\n    return response.data;\n  }\n);\n\nexport const microblogVotesSlice = createSlice({\n  name: 'votesList',\n  initialState: {\n    votesList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  reducers: {\n    vote: (state, action) => {\n      const {id, direction, token} = action.payload;\n      postPostVote(id, direction, token);\n    }\n  },\n  extraReducers: {\n    // // get all posts\n    [getPostsData.pending]: (state, action) => {\n      state.votesList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getPostsData.fulfilled]: (state, action) => {\n      state.votesList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getPostsData.rejected]: (state, action) => {\n      state.votesList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n  }\n});\n\nexport const {\n  vote,\n} = microblogVotesSlice.actions;\n\nexport const selectVotes = state => state.votesList.votesList;\n\nexport default microblogVotesSlice.reducer;"]},"metadata":{},"sourceType":"module"}