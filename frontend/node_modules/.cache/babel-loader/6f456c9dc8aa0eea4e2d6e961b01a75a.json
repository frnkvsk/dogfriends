{"ast":null,"code":"import { useState } from 'react';\nimport { preSignupCheck } from '../api/DogfriendsApi';\n\nfunction useFormInput(initialValue = 'text') {\n  const [value, setValue] = useState(\"\");\n  const [type] = useState(initialValue);\n\n  const handleChange = async e => {\n    const isInUse = await preSignupCheck(e.target.value);\n\n    if (e.target.name === 'usr_name' && isInUse) {\n      console.log('useFormInput username in use', e.target.value);\n    } else {\n      console.log('useFormInput username not in use', e.target.name, e.target.value, isInUse);\n    }\n\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    type,\n    onChange: handleChange\n  };\n}\n\nexport { useFormInput };","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/hooks/useFormInput.js"],"names":["useState","preSignupCheck","useFormInput","initialValue","value","setValue","type","handleChange","e","isInUse","target","name","console","log","onChange"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AACA,SAASC,YAAT,CAAsBC,YAAY,GAAC,MAAnC,EAA2C;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,IAASN,QAAQ,CAACG,YAAD,CAAvB;;AAEA,QAAMI,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC,UAAMC,OAAO,GAAG,MAAMR,cAAc,CAACO,CAAC,CAACE,MAAF,CAASN,KAAV,CAApC;;AACA,QAAGI,CAAC,CAACE,MAAF,CAASC,IAAT,KAAkB,UAAlB,IAAgCF,OAAnC,EAA4C;AAC1CG,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CL,CAAC,CAACE,MAAF,CAASN,KAArD;AACD,KAFD,MAEO;AACLQ,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CL,CAAC,CAACE,MAAF,CAASC,IAAxD,EAA8DH,CAAC,CAACE,MAAF,CAASN,KAAvE,EAA8EK,OAA9E;AACD;;AACDJ,IAAAA,QAAQ,CAACG,CAAC,CAACE,MAAF,CAASN,KAAV,CAAR;AACD,GARD;;AASA,SAAO;AACLA,IAAAA,KADK;AAELE,IAAAA,IAFK;AAGLQ,IAAAA,QAAQ,EAAEP;AAHL,GAAP;AAKD;;AAED,SAAQL,YAAR","sourcesContent":["import {useState} from 'react';\nimport { preSignupCheck } from '../api/DogfriendsApi'\nfunction useFormInput(initialValue='text') {\n  const [value, setValue] = useState(\"\");\n  const [type] = useState(initialValue);\n\n  const handleChange = async (e) => {\n    const isInUse = await preSignupCheck(e.target.value);\n    if(e.target.name === 'usr_name' && isInUse) {\n      console.log('useFormInput username in use', e.target.value)\n    } else {\n      console.log('useFormInput username not in use',e.target.name, e.target.value, isInUse)\n    }\n    setValue(e.target.value);\n  }\n  return {\n    value, \n    type,\n    onChange: handleChange,\n  };\n}\n\nexport {useFormInput};"]},"metadata":{},"sourceType":"module"}