{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js\";\n\n/** Login and Signup */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext'; // import FormInputOutlined from './FormInputOutlined';\n\nimport { loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    // maxHeight: '80vh',\n    maxWidth: '700px'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#ffffff' // padding: '25px',\n    // border: '1px solid red',\n\n  },\n  formElement: {\n    width: '95%',\n    margin: '10px'\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  }\n}));\nexport default function LoginForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(false); // const [usernameValue, setUsernameValue] = useState('username'); \n  // const [formState, setFormState] = useState(\"userInfo\"); \n  // const handleChange = (e, newValue) => {\n  //   setValue(newValue);\n  // }\n\n  useEffect(() => {\n    setErrorMessage(false);\n  }, [username.value, password.value]);\n\n  const handleSubmitLogin = async e => {\n    e.preventDefault();\n    console.log('LoginForm handleSubmitForm');\n    setErrorMessage(false);\n\n    try {\n      // verify username and password are correct\n      // const resp = await login(username.value, password.value);\n      const resp = await dispatch(loginSlice({\n        username: username.value,\n        password: password.value\n      }));\n      console.log('LoginForm handleSubmitForm resp', resp); // if logged in, use resp.token to get user information\n\n      const userInfo = await dispatch(getUserInfoSlice({\n        token: resp.payload.token,\n        username: username.value\n      })); // console.log('LoginForm handleSubmitLogin userInfo',userInfo)\n\n      auth.setAuthState({\n        userInfo: userInfo.payload.user,\n        token: resp.payload.token\n      });\n      history.push(`/`);\n    } catch (error) {\n      setErrorMessage(true);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmitLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.err,\n    component: \"span\",\n    display: errorMessage ? 'block' : 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 8\n    }\n  }, \"Error: Invalid credentials\"), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.formElement,\n    label: \"Username: (required)\",\n    variant: \"outlined\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.formElement,\n    label: \"Password: (required)\",\n    variant: \"outlined\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js"],"names":["React","useContext","useEffect","useState","makeStyles","Box","Button","TextField","useFormInput","AuthContext","loginSlice","getUserInfoSlice","useHistory","useDispatch","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","maxWidth","form","backgroundColor","formElement","margin","button","err","color","fontSize","backButton","marginRight","spacing","completed","LoginForm","classes","history","username","setUsername","password","setPassword","auth","dispatch","errorMessage","setErrorMessage","value","handleSubmitLogin","e","preventDefault","console","log","resp","userInfo","token","payload","setAuthState","user","push","error","target"],"mappings":"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","sourcesContent":["/** Login and Signup */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\nimport { loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    // maxHeight: '80vh',\n    maxWidth: '700px', \n    \n    \n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#ffffff',\n    // padding: '25px',\n    // border: '1px solid red',\n  },\n  formElement: {\n    width: '95%',\n    margin: '10px',\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n\n}));\n\n\nexport default function LoginForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(false);\n  // const [usernameValue, setUsernameValue] = useState('username'); \n  // const [formState, setFormState] = useState(\"userInfo\"); \n\n  // const handleChange = (e, newValue) => {\n  //   setValue(newValue);\n  // }\n  useEffect(() => {\n    setErrorMessage(false);\n  }, [username.value, password.value])\n\n  const handleSubmitLogin = async (e) => {\n    e.preventDefault();\n    console.log('LoginForm handleSubmitForm')\n    setErrorMessage(false);\n    try {\n      // verify username and password are correct\n      // const resp = await login(username.value, password.value);\n      const resp = await dispatch(loginSlice({\n        username: username.value,\n        password: password.value\n      }));\n      console.log('LoginForm handleSubmitForm resp',resp)\n      // if logged in, use resp.token to get user information\n      const userInfo = await dispatch(getUserInfoSlice({\n        token: resp.payload.token, \n        username: username.value\n      }));\n\n      // console.log('LoginForm handleSubmitLogin userInfo',userInfo)\n\n      auth.setAuthState({\n        userInfo: userInfo.payload.user,\n        token: resp.payload.token,\n      });\n      history.push(`/`);\n    } catch (error) {\n      setErrorMessage(true);\n      console.log(error)\n    }     \n  }\n  \n  return (\n    <form className={classes.form} onSubmit={handleSubmitLogin}>\n      {/* {console.log(errorMessage)} */}\n       <Box className={classes.err} \n        component=\"span\" \n        display={errorMessage ? 'block' : 'none'}\n        >\n          Error: Invalid credentials\n      </Box>\n      <TextField \n        className={classes.formElement} \n        label='Username: (required)' \n        variant='outlined' \n        value={username} \n        onChange={e => setUsername(e.target.value)}/>\n      <TextField \n        className={classes.formElement} \n        label='Password: (required)' \n        variant='outlined' \n        value={password} \n        onChange={e => setPassword(e.target.value)}/>\n      <div className={classes.button}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}