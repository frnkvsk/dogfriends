{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/pages/Login.js\",\n    _s = $RefreshSig$();\n\n/** Login and Signup */\nimport React, { useState, useContext } from 'react';\nimport { makeStyles, AppBar, Tabs, Tab // Icon,\n// SvgIcon,\n} from '@material-ui/core'; // import { Container, FormHelperText, Box, Button } from '@material-ui/core';\n// import OutlinedInput from '@material-ui/core/OutlinedInput';\n// import { useHistory } from 'react-router-dom';\n// import { login, signup, getUserInfo } from '../api/DogfriendsApi';\n// import { useFormInput } from '../hooks/useFormInput';\n\nimport { AuthContext } from '../context/AuthContext';\nimport { useDispatch } from 'react-redux';\nimport SignupForm from '../components/SignupForm';\nimport LoginForm from '../components/LoginForm';\nimport { checkUsernameSlice, signUpSlice, loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice'; // function LinkTab(props) {\n//   return (\n//     <Tab\n//       component='a'\n//       onClick={(event) => {\n//         event.preventDefault();\n//       }}\n//       {...props}\n//     />\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    maxWidth: '500px',\n    paddingTop: '30px',\n    overflow: 'hidden'\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff'\n  },\n  label: {\n    fontSize: '18px',\n    fontWeight: 'bold',\n    width: '90%',\n    margin: '10px 20px 0 20px'\n  },\n  input: {\n    width: '90%',\n    margin: '0 20px 0 20px'\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  }\n})); // const TabDivider = () =>\n//   <SvgIcon \n//     component={Icon} \n//     style={{backgroundColor: 'white', width: '1px', height: '50px'}} />\n\nexport default function Login() {\n  _s();\n\n  const classes = useStyles(); // const history = useHistory();\n\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [loginType, setValue] = useState('login');\n\n  const handleChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleLogin = async ({\n    username,\n    password\n  }) => {\n    try {\n      // verify username and password are correct\n      // const resp = await login(username.value, password.value);\n      const resp = await dispatch(loginSlice({\n        username: username,\n        password: password\n      }));\n      console.log('LoginForm handleSubmitForm resp', resp); // if logged in, use resp.token to get user information\n\n      const userInfo = await dispatch(getUserInfoSlice({\n        token: resp.payload.token,\n        username: username\n      })); // console.log('LoginForm handleSubmitLogin userInfo',userInfo)\n\n      auth.setAuthState({\n        userInfo: userInfo.payload.user,\n        token: resp.payload.token\n      }); // history.push(`/`);\n\n      return false;\n    } catch (error) {\n      // setErrorMessage(true);\n      console.log(error);\n      return false;\n    }\n  }; // check if username is available\n\n\n  const handleCheckUsernameAvailability = async ({\n    username\n  }) => {\n    // console.log('Login handlePreSignup username',username)\n    if (username.length) {\n      return await dispatch(checkUsernameSlice({\n        username\n      }));\n    }\n  };\n\n  const handleSignup = async ({\n    username,\n    password,\n    first_name,\n    last_name,\n    email\n  }) => {\n    const userInfo = {\n      username,\n      password,\n      first_name,\n      last_name,\n      email\n    };\n    console.log('SignupForm userInfo', userInfo);\n    const resp = await dispatch(signUpSlice(userInfo));\n    auth.setAuthState({\n      userInfo: userInfo,\n      token: resp.payload.token\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        variant: \"fullWidth\",\n        value: loginType,\n        onChange: handleChange,\n        \"aria-label\": \"nav tabs example\",\n        TabIndicatorProps: {\n          style: {\n            backgroundColor: 'secondary',\n            height: '5px'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Login\",\n          value: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Sign up\",\n          value: \"signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), loginType === 'login' ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SignupForm, {\n      handlePreSignup: handleCheckUsernameAvailability,\n      handleSignup: handleSignup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"OuYF1A17xqQQ3bNRye6SfLyZfKM=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/pages/Login.js"],"names":["React","useState","useContext","makeStyles","AppBar","Tabs","Tab","AuthContext","useDispatch","SignupForm","LoginForm","checkUsernameSlice","signUpSlice","loginSlice","getUserInfoSlice","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","maxWidth","paddingTop","overflow","form","backgroundColor","label","fontSize","fontWeight","margin","input","button","err","color","Login","classes","auth","dispatch","loginType","setValue","handleChange","e","newValue","handleLogin","username","password","resp","console","log","userInfo","token","payload","setAuthState","user","error","handleCheckUsernameAvailability","length","handleSignup","first_name","last_name","email","style","height"],"mappings":"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","sourcesContent":["/** Login and Signup */\nimport React, { useState, useContext } from 'react';\n\nimport {\n  makeStyles,\n  AppBar,\n  Tabs,\n  Tab,\n  // Icon,\n  // SvgIcon,\n} from '@material-ui/core';\n// import { Container, FormHelperText, Box, Button } from '@material-ui/core';\n// import OutlinedInput from '@material-ui/core/OutlinedInput';\n// import { useHistory } from 'react-router-dom';\n// import { login, signup, getUserInfo } from '../api/DogfriendsApi';\n// import { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport { useDispatch } from 'react-redux';\nimport SignupForm from '../components/SignupForm';\nimport LoginForm from '../components/LoginForm';\nimport { \n  checkUsernameSlice,\n  signUpSlice, \n  loginSlice, \n  getUserInfoSlice \n} from '../dogfriendsUserSlice';\n\n// function LinkTab(props) {\n//   return (\n//     <Tab\n//       component='a'\n//       onClick={(event) => {\n//         event.preventDefault();\n//       }}\n//       {...props}\n//     />\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    maxWidth: '500px',\n    paddingTop: '30px',\n    overflow: 'hidden'\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n  },\n  label: {\n    fontSize: '18px',\n    fontWeight: 'bold',\n    width: '90%',\n    margin: '10px 20px 0 20px',\n  },\n  input: {\n    width: '90%',\n    margin: '0 20px 0 20px',\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },\n\n}));\n\n// const TabDivider = () =>\n//   <SvgIcon \n//     component={Icon} \n//     style={{backgroundColor: 'white', width: '1px', height: '50px'}} />\n\nexport default function Login() {\n  const classes = useStyles();\n  // const history = useHistory();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [loginType, setValue] = useState('login');\n\n  const handleChange = (e, newValue) => {\n    setValue(newValue);\n  }\n\n  const handleLogin = async ({\n    username,\n    password\n  }) => {\n    try {\n      // verify username and password are correct\n      // const resp = await login(username.value, password.value);\n      const resp = await dispatch(loginSlice({\n        username: username,\n        password: password\n      }));\n      console.log('LoginForm handleSubmitForm resp',resp)\n      // if logged in, use resp.token to get user information\n      const userInfo = await dispatch(getUserInfoSlice({\n        token: resp.payload.token, \n        username: username\n      }));\n\n      // console.log('LoginForm handleSubmitLogin userInfo',userInfo)\n\n      auth.setAuthState({\n        userInfo: userInfo.payload.user,\n        token: resp.payload.token,\n      });\n      // history.push(`/`);\n      return false;\n    } catch (error) {\n      // setErrorMessage(true);\n      console.log(error)\n      return false;\n    }\n  }\n\n  // check if username is available\n  const handleCheckUsernameAvailability = async ({username}) => {\n    // console.log('Login handlePreSignup username',username)\n    if(username.length) {\n      return await dispatch(checkUsernameSlice({username}));\n    }    \n  }\n\n  \n  const handleSignup = async ({\n    username,\n    password, \n    first_name,\n    last_name,\n    email\n    }) => {\n    const userInfo = {\n      username,\n      password,\n      first_name,\n      last_name, \n      email,\n    }\n    \n    console.log('SignupForm userInfo',userInfo)\n    const resp = await dispatch(signUpSlice(userInfo));\n    auth.setAuthState({\n      userInfo: userInfo,\n      token: resp.payload.token,\n    });\n  }\n  \n\n  return (\n    \n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Tabs\n          variant='fullWidth'\n          value={loginType}\n          onChange={handleChange}\n          aria-label='nav tabs example'\n          TabIndicatorProps={\n            { \n              style: {\n                backgroundColor: 'secondary', \n                height: '5px',\n              },\n            }\n          }   \n        >\n          <Tab label='Login' value='login' />\n          <Tab label='Sign up' value='signup' />\n        </Tabs>\n      </AppBar>\n      \n      { loginType === 'login' ? \n        <LoginForm handleLogin={handleLogin}/> : \n        <SignupForm \n          handlePreSignup={handleCheckUsernameAvailability}\n          handleSignup={handleSignup} \n        /> \n      }\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}