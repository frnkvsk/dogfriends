{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadPhoto.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core'; // import {\n//   postPhotoNew\n// } from '../dogfriendsPhotosSlice';\n\nimport { postNewPhoto // postDestroyPhoto\n} from '../api/DogfriendsPhotosApi';\nconst useStyles = makeStyles(theme => ({\n  dropzone: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '8rem',\n    margin: '1rem',\n    padding: '1rem',\n    border: '2px dashed salmon',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    color: '#424242',\n    active: {\n      border: '2px solid rebeccapurple'\n    }\n  },\n  instruction: {\n    fontSize: '12px',\n    fontStyle: 'italic',\n    color: '#6d6d6d'\n  }\n}));\nexport default function UploadPhoto({\n  token,\n  setPhotoDetails\n}) {\n  _s();\n\n  const classes = useStyles();\n  const onDrop = useCallback(async acceptedFiles => {\n    console.log('UploadPhoto acceptedFiles', acceptedFiles); // const url = process.env.REACT_APP_CLOUDINARY_BASE_URL+'upload';\n\n    const formData = new FormData();\n    formData.append('file', acceptedFiles[0]); // formData.append('upload_preset', process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET);\n\n    try {\n      const response = await postNewPhoto(formData); // const response = await postNewPhoto(acceptedFiles[0]);\n\n      console.log('UploadPhoto response', response); // const response = await postNewPhoto(url, formData, token);\n      // if(response.status === 200) {\n      //   console.log('UploadPhoto onDrop response',response)\n      //   let {id, url} = response.data;\n      //   setPhotoDetails({\n      //     photo_id: id,\n      //     photo_url: url\n      //   });\n      // } \n    } catch (error) {\n      console.error('UploadPhoto err', error);\n    } // console.log('UploadPhoto response',response)   \n    // console.log('UploadPhoto response',response.data)\n    // eslint-disable-next-line\n\n  }, [token]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accepts: 'image/*',\n    multiple: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dropzone,\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \"Photo Drop Zone\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.instruction,\n        children: \"Drag/Drop or Click to open.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(UploadPhoto, \"F+1HZqguBdI2/f1jSMgDvF1mZFE=\", false, function () {\n  return [useStyles, useDropzone];\n});\n\n_c = UploadPhoto;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadPhoto\");","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadPhoto.js"],"names":["React","useCallback","useDropzone","makeStyles","postNewPhoto","useStyles","theme","dropzone","display","flexDirection","height","margin","padding","border","justifyContent","alignItems","fontSize","fontWeight","cursor","color","active","instruction","fontStyle","UploadPhoto","token","setPhotoDetails","classes","onDrop","acceptedFiles","console","log","formData","FormData","append","response","error","getRootProps","getInputProps","accepts","multiple"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAiBC,WAAjB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;AACA;AACA;;AAEA,SACEC,YADF,CAEE;AAFF,OAGO,4BAHP;AAOA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,aAAa,EAAE,QAFP;AAGRC,IAAAA,MAAM,EAAE,MAHA;AAIRC,IAAAA,MAAM,EAAE,MAJA;AAKRC,IAAAA,OAAO,EAAE,MALD;AAMRC,IAAAA,MAAM,EAAE,mBANA;AAORC,IAAAA,cAAc,EAAE,QAPR;AAQRC,IAAAA,UAAU,EAAE,QARJ;AASRC,IAAAA,QAAQ,EAAE,MATF;AAURC,IAAAA,UAAU,EAAE,MAVJ;AAWRC,IAAAA,MAAM,EAAE,SAXA;AAYRC,IAAAA,KAAK,EAAE,SAZC;AAaRC,IAAAA,MAAM,EAAE;AACNP,MAAAA,MAAM,EAAE;AADF;AAbA,GAD6B;AAkBvCQ,EAAAA,WAAW,EAAE;AACXL,IAAAA,QAAQ,EAAE,MADC;AAEXM,IAAAA,SAAS,EAAE,QAFA;AAGXH,IAAAA,KAAK,EAAE;AAHI;AAlB0B,CAAZ,CAAD,CAA5B;AA2BA,eAAe,SAASI,WAAT,CAAqB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAArB,EAA+C;AAAA;;AAC5D,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AAEA,QAAMsB,MAAM,GAAG1B,WAAW,CAAC,MAAO2B,aAAP,IAAyB;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCF,aAAxC,EADkD,CAElD;;AACA,UAAMG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,aAAa,CAAC,CAAD,CAArC,EAJkD,CAKlD;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAM9B,YAAY,CAAC2B,QAAD,CAAnC,CADE,CAEF;;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCI,QAAnC,EAHE,CAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAbD,CAaE,OAAOC,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACM,KAAR,CAAc,iBAAd,EAAgCA,KAAhC;AACD,KArBiD,CAwBlD;AACA;AAEA;;AACD,GA5ByB,EA4BvB,CAACX,KAAD,CA5BuB,CAA1B;AA8BA,QAAM;AAACY,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCnC,WAAW,CAAC;AAChDyB,IAAAA,MADgD;AAEhDW,IAAAA,OAAO,EAAE,SAFuC;AAGhDC,IAAAA,QAAQ,EAAE;AAHsC,GAAD,CAAjD;AAMA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACnB,QAAxB;AAAA,SAAsC6B,YAAY,EAAlD;AAAA,8BACE,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,kCAGE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAACL,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;GAhDuBE,W;UACNlB,S,EAgCsBH,W;;;KAjChBqB,W","sourcesContent":["import React , { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core';\n// import {\n//   postPhotoNew\n// } from '../dogfriendsPhotosSlice';\n\nimport {\n  postNewPhoto,\n  // postDestroyPhoto\n} from '../api/DogfriendsPhotosApi';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  dropzone: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '8rem',\n    margin: '1rem',\n    padding: '1rem',\n    border: '2px dashed salmon',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    color: '#424242',\n    active: {\n      border: '2px solid rebeccapurple',\n    },\n  },\n  instruction: {\n    fontSize: '12px',\n    fontStyle: 'italic',\n    color: '#6d6d6d',\n  }\n  \n}));\n\n\nexport default function UploadPhoto({token, setPhotoDetails}) {\n  const classes = useStyles();\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    console.log('UploadPhoto acceptedFiles',acceptedFiles)\n    // const url = process.env.REACT_APP_CLOUDINARY_BASE_URL+'upload';\n    const formData = new FormData();\n    formData.append('file', acceptedFiles[0]);\n    // formData.append('upload_preset', process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET);\n    try {\n      const response = await postNewPhoto(formData);\n      // const response = await postNewPhoto(acceptedFiles[0]);\n      console.log('UploadPhoto response',response)\n      // const response = await postNewPhoto(url, formData, token);\n      // if(response.status === 200) {\n      //   console.log('UploadPhoto onDrop response',response)\n      //   let {id, url} = response.data;\n      //   setPhotoDetails({\n      //     photo_id: id,\n      //     photo_url: url\n      //   });\n      // } \n    } catch (error) {\n      console.error('UploadPhoto err',error)\n    }\n    \n\n    // console.log('UploadPhoto response',response)   \n    // console.log('UploadPhoto response',response.data)\n      \n    // eslint-disable-next-line\n  }, [token]);\n\n  const {getRootProps, getInputProps} = useDropzone({\n    onDrop, \n    accepts: 'image/*',\n    multiple: false,\n  });\n\n  return (\n    <>\n      <div className={classes.dropzone} {...getRootProps()}>\n        <input {...getInputProps()} />\n        Photo Drop Zone\n        <div className={classes.instruction}>Drag/Drop or Click to open.</div>\n      </div>\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}