{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/SignupForm.js\";\n\n/** Login and Signup */\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\n// import Stepper from '@material-ui/core/Stepper';\n// import Step from '@material-ui/core/Step';\n// import StepLabel from '@material-ui/core/StepLabel';\n// import Typography from '@material-ui/core/Typography';\n\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext'; // import FormInputOutlined from './FormInputOutlined';\n\nimport { signup } from '../api/DogfriendsApi';\nimport { useHistory } from 'react-router-dom';\nimport UserInfoForm from './UserInfoForm';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh'\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff'\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  }\n}));\nexport default function SignupForm() {\n  // const classes = useStyles();\n  // const history = useHistory();\n  // const username = useFormInput('usr');\n  // const password = useFormInput('', '', 'password');\n  // const first_name = useFormInput('first_name');\n  // const last_name = useFormInput('last_name');\n  // const email = useFormInput('email');\n  // const city = useFormInput('city');\n  // const state = useFormInput('state');\n  // const country = useFormInput('country');\n  // const auth = useContext(AuthContext);\n  // const handleSubmitSignup = async () => {\n  //   // setErrorMessage(false);\n  //   try {\n  //     const data = {\n  //       username: username.value, \n  //       password: password.value, \n  //       first_name: first_name.value, \n  //       last_name: last_name.value, \n  //       email: email.value,\n  //       photo_id: null,\n  //       city: city.value, \n  //       state: state.value, \n  //       country: country.value\n  //     }\n  //     const resp = await signup(data);\n  //     delete data.password;\n  //     auth.setAuthState({\n  //       token: resp.data.token,\n  //       userInfo: {\n  //         ...data\n  //       }\n  //     });\n  //     history.push(`/`);\n  //   } catch (error) {\n  //     // setErrorMessage(true);\n  //     console.log(error)\n  //   }    \n  // }\n  // const [activeStep, setActiveStep] = useState(0);\n  // const steps = ['User Info', 'Contact', 'Confirm'];\n  // const handleNext = () => {\n  //   if(activeStep === 0) {\n  //     if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n  //       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //     }\n  //   } else if(activeStep === 1) {\n  //     if(email.value.length && city.value.length && state.value.length && country.value.length) {\n  //       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //     }\n  //   } else {\n  //     console.log('handleSubmitSignup() fired')\n  //     handleSubmitSignup();\n  //   }    \n  // };\n  // const handleBack = () => {\n  //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  // };\n  // const handleReset = () => {\n  //   setActiveStep(0);\n  // };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserInfoForm, {\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/SignupForm.js"],"names":["React","useContext","makeStyles","useFormInput","AuthContext","signup","useHistory","UserInfoForm","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","minHeight","maxWidth","padding","height","form","backgroundColor","button","margin","err","color","fontSize","backButton","marginRight","spacing","completed","SignupForm"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAiBC,UAAjB,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE,YAJZ;AAKJC,IAAAA,KAAK,EAAE,MALH;AAMJC,IAAAA,SAAS,EAAE,OANP;AAOJC,IAAAA,QAAQ,EAAE,OAPN;AAQJC,IAAAA,OAAO,EAAE,KARL;AASJC,IAAAA,MAAM,EAAE;AATJ,GADiC;AAYvCC,EAAAA,IAAI,EAAE;AACJL,IAAAA,KAAK,EAAE,MADH;AAEJM,IAAAA,eAAe,EAAE;AAFb,GAZiC;AAgBvCC,EAAAA,MAAM,EAAE;AACNX,IAAAA,OAAO,EAAE,MADH;AAENG,IAAAA,cAAc,EAAE,UAFV;AAGNS,IAAAA,MAAM,EAAE;AAHF,GAhB+B;AAqBvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GArBkC;AAyBvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEnB,KAAK,CAACoB,OAAN,CAAc,CAAd;AADH,GAzB2B;AA4BvCC,EAAAA,SAAS,EAAE;AACTnB,IAAAA,OAAO,EAAE;AADA;AA5B4B,CAAZ,CAAD,CAA5B;AAmCA,eAAe,SAASoB,UAAT,GAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACE,uDACA,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAgED","sourcesContent":["/** Login and Signup */\nimport React, {  useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\n// import Stepper from '@material-ui/core/Stepper';\n// import Step from '@material-ui/core/Step';\n// import StepLabel from '@material-ui/core/StepLabel';\n// import Typography from '@material-ui/core/Typography';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\nimport { signup } from '../api/DogfriendsApi';\nimport { useHistory } from 'react-router-dom';\nimport UserInfoForm from './UserInfoForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh',\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n\n}));\n\n\nexport default function SignupForm() {\n  // const classes = useStyles();\n  // const history = useHistory();\n  // const username = useFormInput('usr');\n  // const password = useFormInput('', '', 'password');\n  // const first_name = useFormInput('first_name');\n  // const last_name = useFormInput('last_name');\n  // const email = useFormInput('email');\n  // const city = useFormInput('city');\n  // const state = useFormInput('state');\n  // const country = useFormInput('country');\n  // const auth = useContext(AuthContext);\n\n  // const handleSubmitSignup = async () => {\n  //   // setErrorMessage(false);\n  //   try {\n  //     const data = {\n  //       username: username.value, \n  //       password: password.value, \n  //       first_name: first_name.value, \n  //       last_name: last_name.value, \n  //       email: email.value,\n  //       photo_id: null,\n  //       city: city.value, \n  //       state: state.value, \n  //       country: country.value\n  //     }\n\n  //     const resp = await signup(data);\n  //     delete data.password;\n  //     auth.setAuthState({\n  //       token: resp.data.token,\n  //       userInfo: {\n  //         ...data\n  //       }\n  //     });\n  //     history.push(`/`);\n  //   } catch (error) {\n  //     // setErrorMessage(true);\n  //     console.log(error)\n  //   }    \n  // }\n  \n  // const [activeStep, setActiveStep] = useState(0);\n  // const steps = ['User Info', 'Contact', 'Confirm'];\n\n  // const handleNext = () => {\n  //   if(activeStep === 0) {\n  //     if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n  //       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //     }\n  //   } else if(activeStep === 1) {\n  //     if(email.value.length && city.value.length && state.value.length && country.value.length) {\n  //       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //     }\n  //   } else {\n  //     console.log('handleSubmitSignup() fired')\n  //     handleSubmitSignup();\n  //   }    \n  // };\n\n  // const handleBack = () => {\n  //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  // };\n\n  // const handleReset = () => {\n  //   setActiveStep(0);\n  // };\n  \n  return (\n    <>\n    <UserInfoForm title=\"Register\" />\n    {/* <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {activeStep === 0 ?\n        <form className={classes.form}> \n          <FormInputOutlined label='Username' formInput={username}/>\n          <FormInputOutlined label='Password' formInput={password} />\n          <FormInputOutlined label='First Name' formInput={first_name} />\n          <FormInputOutlined label='Last Name' formInput={last_name} />           \n        </form> :\n        activeStep === 1 ?\n        <form className={classes.form}> \n          <FormInputOutlined label={'Email'} formInput={email} />\n          <FormInputOutlined label={'City'} formInput={city} />\n          <FormInputOutlined label={'State'} formInput={state} />\n          <FormInputOutlined label={'Country'} formInput={country} />        \n        </form> :\n        <>\n        <div>{username.value}</div>\n        <div>{first_name.value}</div>\n        <div>{last_name.value}</div>\n        <div>{email.value}</div>\n        <div>{city.value}</div>\n        <div>{state.value}</div>\n        <div>{country.value}</div>\n        </>\n      }      \n\n      <div>\n        {activeStep === steps.length ? \n          <div>\n            <Typography className={classes.instructions}>All steps completed</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n         : \n          <div>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        }\n      </div>\n    </div> */}\n  \n   </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}