{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postNewPhoto, postDestroyPhoto } from './api/DogfriendsPhotosApi';\nexport const postPhotoNew = createAsyncThunk('postPhotoNew', async acceptedFiles => {\n  const response = await postNewPhoto(acceptedFiles);\n  return response.data;\n});\nexport const postPhotoDestroy = createAsyncThunk('postPhotoDestroy', async (public_id, signature) => {\n  const response = await postDestroyPhoto(public_id, signature);\n  return response.data;\n}); // export const getPhotoById = createAsyncThunk(\n//   'getPhotoById',\n//   async (id) => {\n//     const response = await getPhotoById(id);\n//     return response.data;\n//   }\n// );\n\nexport default dogfriendsPhotosSlice = createSlice({\n  name: 'photoList',\n  initialState: {\n    photoList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  // reducers: {\n  //   removePhoto: (state, action) => {\n  //     deletePhoto(action.payload.id, action.payload.username, action.payload.token);\n  //   },\n  // },\n  extraReducers: {\n    // post a new photo\n    [postPhotoNew.pending]: (state, action) => {\n      state.photoList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [postPhotoNew.fulfilled]: (state, action) => {\n      state.photoList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [postPhotoNew.rejected]: (state, action) => {\n      state.photoList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    },\n    // delete a photo\n    [postPhotoDestroy.pending]: (state, action) => {\n      state.photoList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [postPhotoDestroy.fulfilled]: (state, action) => {\n      state.photoList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [postPhotoDestroy.rejected]: (state, action) => {\n      state.photoList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    }\n  }\n}); // export const {\n//   deletePhoto,\n// } = dogfriendsPhotosSlice.actions;\n\nexport const selectPosts = state => state.photoList.photoList; // export default dogfriendsPhotosSlice.reducer;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/dogfriendsPhotosSlice.js"],"names":["createAsyncThunk","createSlice","postNewPhoto","postDestroyPhoto","postPhotoNew","acceptedFiles","response","data","postPhotoDestroy","public_id","signature","dogfriendsPhotosSlice","name","initialState","photoList","status","error","extraReducers","pending","state","action","fulfilled","payload","rejected","selectPosts"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SACEC,YADF,EAEEC,gBAFF,QAGO,2BAHP;AAKA,OAAO,MAAMC,YAAY,GAAGJ,gBAAgB,CAC1C,cAD0C,EAE1C,MAAOK,aAAP,IAAyB;AACvB,QAAMC,QAAQ,GAAG,MAAMJ,YAAY,CAACG,aAAD,CAAnC;AACA,SAAOC,QAAQ,CAACC,IAAhB;AACD,CALyC,CAArC;AAOP,OAAO,MAAMC,gBAAgB,GAAGR,gBAAgB,CAC9C,kBAD8C,EAE9C,OAAOS,SAAP,EAAkBC,SAAlB,KAAgC;AAC9B,QAAMJ,QAAQ,GAAG,MAAMH,gBAAgB,CAACM,SAAD,EAAYC,SAAZ,CAAvC;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAL6C,CAAzC,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeI,qBAAqB,GAAGV,WAAW,CAAC;AACjDW,EAAAA,IAAI,EAAE,WAD2C;AAEjDC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE,MADC;AAETR,MAAAA,IAAI,EAAE,EAFG;AAGTS,MAAAA,KAAK,EAAE;AAHE;AADC,GAFmC;AASjD;AACA;AACA;AACA;AACA;AACAC,EAAAA,aAAa,EAAE;AACb;AACA,KAACb,YAAY,CAACc,OAAd,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,SADQ;AAEhBR,QAAAA,IAAI,EAAE,EAFU;AAGhBS,QAAAA,KAAK,EAAE;AAHS,OAAlB;AAKD,KARY;AASb,KAACZ,YAAY,CAACiB,SAAd,GAA0B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,WADQ;AAEhBR,QAAAA,IAAI,EAAEa,MAAM,CAACE,OAFG;AAGhBN,QAAAA,KAAK,EAAE;AAHS,OAAlB;AAKD,KAfY;AAgBb,KAACZ,YAAY,CAACmB,QAAd,GAAyB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,UADQ;AAEhBR,QAAAA,IAAI,EAAE,EAFU;AAGhBS,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHE,OAAlB;AAKD,KAtBY;AAuBb;AACA,KAACd,gBAAgB,CAACU,OAAlB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,SADQ;AAEhBR,QAAAA,IAAI,EAAE,EAFU;AAGhBS,QAAAA,KAAK,EAAE;AAHS,OAAlB;AAKD,KA9BY;AA+Bb,KAACR,gBAAgB,CAACa,SAAlB,GAA8B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC/CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,WADQ;AAEhBR,QAAAA,IAAI,EAAEa,MAAM,CAACE,OAFG;AAGhBN,QAAAA,KAAK,EAAE;AAHS,OAAlB;AAKD,KArCY;AAsCb,KAACR,gBAAgB,CAACe,QAAlB,GAA6B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC9CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,UADQ;AAEhBR,QAAAA,IAAI,EAAE,EAFU;AAGhBS,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHE,OAAlB;AAKD;AA5CY;AAdkC,CAAD,CAAlD,C,CA8DA;AACA;AACA;;AAEA,OAAO,MAAME,WAAW,GAAGL,KAAK,IAAIA,KAAK,CAACL,SAAN,CAAgBA,SAA7C,C,CAEP","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  postNewPhoto,\n  postDestroyPhoto\n} from './api/DogfriendsPhotosApi';\n\nexport const postPhotoNew = createAsyncThunk(\n  'postPhotoNew',\n  async (acceptedFiles) => {\n    const response = await postNewPhoto(acceptedFiles);\n    return response.data;\n  }\n);\nexport const postPhotoDestroy = createAsyncThunk(\n  'postPhotoDestroy',\n  async (public_id, signature) => {\n    const response = await postDestroyPhoto(public_id, signature);\n    return response.data;\n  }\n);\n\n// export const getPhotoById = createAsyncThunk(\n//   'getPhotoById',\n//   async (id) => {\n//     const response = await getPhotoById(id);\n//     return response.data;\n//   }\n// );\n\nexport default dogfriendsPhotosSlice = createSlice({\n  name: 'photoList',\n  initialState: {\n    photoList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  // reducers: {\n  //   removePhoto: (state, action) => {\n  //     deletePhoto(action.payload.id, action.payload.username, action.payload.token);\n  //   },\n  // },\n  extraReducers: {\n    // post a new photo\n    [postPhotoNew.pending]: (state, action) => {\n      state.photoList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [postPhotoNew.fulfilled]: (state, action) => {\n      state.photoList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [postPhotoNew.rejected]: (state, action) => {\n      state.photoList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    },    \n    // delete a photo\n    [postPhotoDestroy.pending]: (state, action) => {\n      state.photoList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [postPhotoDestroy.fulfilled]: (state, action) => {\n      state.photoList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [postPhotoDestroy.rejected]: (state, action) => {\n      state.photoList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    },    \n  }\n});\n\n// export const {\n//   deletePhoto,\n// } = dogfriendsPhotosSlice.actions;\n\nexport const selectPosts = state => state.photoList.photoList;\n\n// export default dogfriendsPhotosSlice.reducer;"]},"metadata":{},"sourceType":"module"}