{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/SignupForm.js\";\n\n/** Login and Signup */\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\n// import Stepper from '@material-ui/core/Stepper';\n// import Step from '@material-ui/core/Step';\n// import StepLabel from '@material-ui/core/StepLabel';\n// import Typography from '@material-ui/core/Typography';\n\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext'; // import FormInputOutlined from './FormInputOutlined';\n\nimport { signup } from '../api/DogfriendsApi';\nimport UserInfoForm from './UserInfoForm';\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh'\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff'\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  }\n}));\nexport default function SignupForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const username = useFormInput();\n  const password = useFormInput('password');\n  const first_name = useFormInput();\n  const last_name = useFormInput();\n  const photo_url = useFormInput();\n  const email = useFormInput();\n  const city = useFormInput();\n  const state = useFormInput();\n  const country = useFormInput();\n  const auth = useContext(AuthContext);\n\n  const handleSubmitSignup = async () => {\n    // setErrorMessage(false);\n    try {\n      const data = {\n        username: username.value,\n        password: password.value,\n        first_name: first_name.value,\n        last_name: last_name.value,\n        email: email.value,\n        photo_url: photo_url.value,\n        city: city.value,\n        state: state.value,\n        country: country.value\n      };\n      const resp = await signup(data);\n      auth.setAuthState({\n        token: resp.data.token,\n        userInfo: {\n          username: username.value,\n          first_name: first_name.value,\n          last_name: last_name.value,\n          photo_url: photo_url.value,\n          email: email.value\n        }\n      });\n      history.push(`/`);\n    } catch (error) {\n      // setErrorMessage(true);\n      console.log(error);\n    }\n  };\n\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['User Info', 'Contact', 'Confirm'];\n\n  const handleNext = () => {\n    if (activeStep === 0) {\n      if (username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n      }\n    } else if (activeStep === 1) {\n      if (email.value.length && city.value.length && state.value.length && country.value.length) {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n      }\n    } else {\n      console.log('handleSubmitSignup() fired');\n      handleSubmitSignup();\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(UserInfoForm, {\n    handleSubmit: handleSubmitSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }) // <>\n\n  /* <div className={classes.root}>\n    <Stepper activeStep={activeStep}>\n      {steps.map((label) => (\n        <Step key={label}>\n          <StepLabel>{label}</StepLabel>\n        </Step>\n      ))}\n    </Stepper>\n     {activeStep === 0 ?\n      <form className={classes.form}> \n        <FormInputOutlined name='usr_name' label='username' formInput={username}/>\n        <FormInputOutlined label='Password' formInput={password} />\n        <FormInputOutlined label='First Name' formInput={first_name} />\n        <FormInputOutlined label='Last Name' formInput={last_name} />\n        <FormInputOutlined label='Photo URL' formInput={photo_url} />              \n      </form> :\n      activeStep === 1 ?\n      <form className={classes.form}> \n        <FormInputOutlined label={'Email'} formInput={email} />\n        <FormInputOutlined label={'City'} formInput={city} />\n        <FormInputOutlined label={'State'} formInput={state} />\n        <FormInputOutlined label={'Country'} formInput={country} />        \n      </form> :\n      <>\n      <div>{username.value}</div>\n      <div>{first_name.value}</div>\n      <div>{last_name.value}</div>\n      <div>{email.value}</div>\n      <div>{city.value}</div>\n      <div>{state.value}</div>\n      <div>{country.value}</div>\n      </>\n    }      \n     <div>\n      {activeStep === steps.length ? \n        <div>\n          <Typography className={classes.instructions}>All steps completed</Typography>\n          <Button onClick={handleReset}>Reset</Button>\n        </div>\n       : \n        <div>\n          <div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}\n            >\n              Back\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n            </Button>\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n    </> */\n  ;\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/SignupForm.js"],"names":["React","useState","useContext","makeStyles","useFormInput","AuthContext","signup","UserInfoForm","useHistory","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","minHeight","maxWidth","padding","height","form","backgroundColor","button","margin","err","color","fontSize","backButton","marginRight","spacing","completed","SignupForm","classes","history","username","password","first_name","last_name","photo_url","email","city","state","country","auth","handleSubmitSignup","data","value","resp","setAuthState","token","userInfo","push","error","console","log","activeStep","setActiveStep","steps","handleNext","length","prevActiveStep","handleBack","handleReset"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE,YAJZ;AAKJC,IAAAA,KAAK,EAAE,MALH;AAMJC,IAAAA,SAAS,EAAE,OANP;AAOJC,IAAAA,QAAQ,EAAE,OAPN;AAQJC,IAAAA,OAAO,EAAE,KARL;AASJC,IAAAA,MAAM,EAAE;AATJ,GADiC;AAYvCC,EAAAA,IAAI,EAAE;AACJL,IAAAA,KAAK,EAAE,MADH;AAEJM,IAAAA,eAAe,EAAE;AAFb,GAZiC;AAgBvCC,EAAAA,MAAM,EAAE;AACNX,IAAAA,OAAO,EAAE,MADH;AAENG,IAAAA,cAAc,EAAE,UAFV;AAGNS,IAAAA,MAAM,EAAE;AAHF,GAhB+B;AAqBvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GArBkC;AAyBvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEnB,KAAK,CAACoB,OAAN,CAAc,CAAd;AADH,GAzB2B;AA4BvCC,EAAAA,SAAS,EAAE;AACTnB,IAAAA,OAAO,EAAE;AADA;AA5B4B,CAAZ,CAAD,CAA5B;AAmCA,eAAe,SAASoB,UAAT,GAAsB;AACnC,QAAMC,OAAO,GAAGxB,SAAS,EAAzB;AACA,QAAMyB,OAAO,GAAG1B,UAAU,EAA1B;AACA,QAAM2B,QAAQ,GAAG/B,YAAY,EAA7B;AACA,QAAMgC,QAAQ,GAAGhC,YAAY,CAAC,UAAD,CAA7B;AACA,QAAMiC,UAAU,GAAGjC,YAAY,EAA/B;AACA,QAAMkC,SAAS,GAAGlC,YAAY,EAA9B;AACA,QAAMmC,SAAS,GAAGnC,YAAY,EAA9B;AACA,QAAMoC,KAAK,GAAGpC,YAAY,EAA1B;AACA,QAAMqC,IAAI,GAAGrC,YAAY,EAAzB;AACA,QAAMsC,KAAK,GAAGtC,YAAY,EAA1B;AACA,QAAMuC,OAAO,GAAGvC,YAAY,EAA5B;AACA,QAAMwC,IAAI,GAAG1C,UAAU,CAACG,WAAD,CAAvB;;AAEA,QAAMwC,kBAAkB,GAAG,YAAY;AACrC;AACA,QAAI;AACF,YAAMC,IAAI,GAAG;AACXX,QAAAA,QAAQ,EAAEA,QAAQ,CAACY,KADR;AAEXX,QAAAA,QAAQ,EAAEA,QAAQ,CAACW,KAFR;AAGXV,QAAAA,UAAU,EAAEA,UAAU,CAACU,KAHZ;AAIXT,QAAAA,SAAS,EAAEA,SAAS,CAACS,KAJV;AAKXP,QAAAA,KAAK,EAAEA,KAAK,CAACO,KALF;AAMXR,QAAAA,SAAS,EAAEA,SAAS,CAACQ,KANV;AAOXN,QAAAA,IAAI,EAAEA,IAAI,CAACM,KAPA;AAQXL,QAAAA,KAAK,EAAEA,KAAK,CAACK,KARF;AASXJ,QAAAA,OAAO,EAAEA,OAAO,CAACI;AATN,OAAb;AAWA,YAAMC,IAAI,GAAG,MAAM1C,MAAM,CAACwC,IAAD,CAAzB;AACAF,MAAAA,IAAI,CAACK,YAAL,CAAkB;AAChBC,QAAAA,KAAK,EAAEF,IAAI,CAACF,IAAL,CAAUI,KADD;AAEhBC,QAAAA,QAAQ,EAAE;AACRhB,UAAAA,QAAQ,EAAEA,QAAQ,CAACY,KADX;AAERV,UAAAA,UAAU,EAAEA,UAAU,CAACU,KAFf;AAGRT,UAAAA,SAAS,EAAEA,SAAS,CAACS,KAHb;AAIRR,UAAAA,SAAS,EAAEA,SAAS,CAACQ,KAJb;AAKRP,UAAAA,KAAK,EAAEA,KAAK,CAACO;AALL;AAFM,OAAlB;AAUAb,MAAAA,OAAO,CAACkB,IAAR,CAAc,GAAd;AACD,KAxBD,CAwBE,OAAOC,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GA9BD;;AAgCA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BxD,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMyD,KAAK,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,SAAzB,CAAd;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAGH,UAAU,KAAK,CAAlB,EAAqB;AACnB,UAAGrB,QAAQ,CAACY,KAAT,CAAea,MAAf,IAAyBxB,QAAQ,CAACW,KAAT,CAAea,MAAxC,IAAkDvB,UAAU,CAACU,KAAX,CAAiBa,MAAnE,IAA6EtB,SAAS,CAACS,KAAV,CAAgBa,MAAhG,EAAwG;AACtGH,QAAAA,aAAa,CAAEI,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD;AACF,KAJD,MAIO,IAAGL,UAAU,KAAK,CAAlB,EAAqB;AAC1B,UAAGhB,KAAK,CAACO,KAAN,CAAYa,MAAZ,IAAsBnB,IAAI,CAACM,KAAL,CAAWa,MAAjC,IAA2ClB,KAAK,CAACK,KAAN,CAAYa,MAAvD,IAAiEjB,OAAO,CAACI,KAAR,CAAca,MAAlF,EAA0F;AACxFH,QAAAA,aAAa,CAAEI,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD;AACF,KAJM,MAIA;AACLP,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAV,MAAAA,kBAAkB;AACnB;AACF,GAbD;;AAeA,QAAMiB,UAAU,GAAG,MAAM;AACvBL,IAAAA,aAAa,CAAEI,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBN,IAAAA,aAAa,CAAC,CAAD,CAAb;AACD,GAFD;;AAIA,sBACE,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEZ,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAEE;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DE;AAiED","sourcesContent":["/** Login and Signup */\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\n// import Stepper from '@material-ui/core/Stepper';\n// import Step from '@material-ui/core/Step';\n// import StepLabel from '@material-ui/core/StepLabel';\n// import Typography from '@material-ui/core/Typography';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\nimport { signup } from '../api/DogfriendsApi';\nimport UserInfoForm from './UserInfoForm';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh',\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n\n}));\n\n\nexport default function SignupForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const username = useFormInput();\n  const password = useFormInput('password');\n  const first_name = useFormInput();\n  const last_name = useFormInput();  \n  const photo_url = useFormInput();\n  const email = useFormInput();\n  const city = useFormInput();\n  const state = useFormInput();\n  const country = useFormInput();\n  const auth = useContext(AuthContext);\n\n  const handleSubmitSignup = async () => {\n    // setErrorMessage(false);\n    try {\n      const data = {\n        username: username.value, \n        password: password.value, \n        first_name: first_name.value, \n        last_name: last_name.value, \n        email: email.value,\n        photo_url: photo_url.value,\n        city: city.value, \n        state: state.value, \n        country: country.value\n      }\n      const resp = await signup(data);\n      auth.setAuthState({\n        token: resp.data.token,\n        userInfo: {\n          username: username.value,\n          first_name: first_name.value,\n          last_name: last_name.value,\n          photo_url: photo_url.value,\n          email: email.value,\n        }\n      });\n      history.push(`/`);\n    } catch (error) {\n      // setErrorMessage(true);\n      console.log(error)\n    }    \n  }\n  \n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['User Info', 'Contact', 'Confirm'];\n\n  const handleNext = () => {\n    if(activeStep === 0) {\n      if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      }\n    } else if(activeStep === 1) {\n      if(email.value.length && city.value.length && state.value.length && country.value.length) {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      }\n    } else {\n      console.log('handleSubmitSignup() fired')\n      handleSubmitSignup();\n    }    \n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  \n  return (\n    <UserInfoForm handleSubmit={handleSubmitSignup} />\n    // <>\n    /* <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {activeStep === 0 ?\n        <form className={classes.form}> \n          <FormInputOutlined name='usr_name' label='username' formInput={username}/>\n          <FormInputOutlined label='Password' formInput={password} />\n          <FormInputOutlined label='First Name' formInput={first_name} />\n          <FormInputOutlined label='Last Name' formInput={last_name} />\n          <FormInputOutlined label='Photo URL' formInput={photo_url} />              \n        </form> :\n        activeStep === 1 ?\n        <form className={classes.form}> \n          <FormInputOutlined label={'Email'} formInput={email} />\n          <FormInputOutlined label={'City'} formInput={city} />\n          <FormInputOutlined label={'State'} formInput={state} />\n          <FormInputOutlined label={'Country'} formInput={country} />        \n        </form> :\n        <>\n        <div>{username.value}</div>\n        <div>{first_name.value}</div>\n        <div>{last_name.value}</div>\n        <div>{email.value}</div>\n        <div>{city.value}</div>\n        <div>{state.value}</div>\n        <div>{country.value}</div>\n        </>\n      }      \n\n      <div>\n        {activeStep === steps.length ? \n          <div>\n            <Typography className={classes.instructions}>All steps completed</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n         : \n          <div>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  \n   </> */\n  );\n}\n"]},"metadata":{},"sourceType":"module"}