{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js\";\n\n/** Login and Signup */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, TextField } from '@material-ui/core'; // import { useFormInput } from '../hooks/useFormInput';\n\nimport { AuthContext } from '../context/AuthContext'; // import FormInputOutlined from './FormInputOutlined';\n\nimport { loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    maxWidth: '700px',\n    paddingTop: '20px'\n  },\n  formElement: {\n    width: '95%',\n    marginTop: '20px',\n    marginBottom: '20px'\n  },\n  button: {\n    display: 'flex',\n    width: '100%',\n    margin: '10px',\n    marginLeft: '40px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  },\n  completed: {\n    display: 'inline-block'\n  }\n}));\nexport default function LoginForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(false);\n  useEffect(() => {\n    setErrorMessage(false);\n  }, [username.value, password.value]);\n\n  const handleSubmitLogin = async e => {\n    e.preventDefault();\n    console.log('LoginForm handleSubmitForm');\n    setErrorMessage(false);\n\n    try {\n      // verify username and password are correct\n      // const resp = await login(username.value, password.value);\n      const resp = await dispatch(loginSlice({\n        username: username.value,\n        password: password.value\n      }));\n      console.log('LoginForm handleSubmitForm resp', resp); // if logged in, use resp.token to get user information\n\n      const userInfo = await dispatch(getUserInfoSlice({\n        token: resp.payload.token,\n        username: username.value\n      })); // console.log('LoginForm handleSubmitLogin userInfo',userInfo)\n\n      auth.setAuthState({\n        userInfo: userInfo.payload.user,\n        token: resp.payload.token\n      });\n      history.push(`/`);\n    } catch (error) {\n      setErrorMessage(true);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmitLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.err,\n    component: \"span\",\n    display: errorMessage ? 'block' : 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }\n  }, \"Error: Invalid credentials\"), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.formElement,\n    label: \"Username: (required)\",\n    variant: \"outlined\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.formElement,\n    type: \"password\",\n    label: \"Password: (required)\",\n    variant: \"outlined\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js"],"names":["React","useContext","useEffect","useState","useHistory","useDispatch","makeStyles","Box","Button","TextField","AuthContext","loginSlice","getUserInfoSlice","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","maxWidth","paddingTop","formElement","marginTop","marginBottom","button","margin","marginLeft","err","color","fontSize","completed","LoginForm","classes","history","username","setUsername","password","setPassword","auth","dispatch","errorMessage","setErrorMessage","value","handleSubmitLogin","e","preventDefault","console","log","resp","userInfo","token","payload","setAuthState","user","push","error","target"],"mappings":"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","sourcesContent":["/** Login and Signup */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Box, \n  Button, \n  TextField, \n   } from '@material-ui/core';\n\n// import { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\nimport { loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    maxWidth: '700px', \n    paddingTop: '20px',\n    \n  },\n  formElement: {\n    width: '95%',\n    marginTop: '20px',\n    marginBottom: '20px',\n  },\n  button: {\n    display: 'flex',\n    width: '100%',\n    margin: '10px',\n    marginLeft: '40px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },  \n  completed: {\n    display: 'inline-block',\n  },\n\n}));\n\n\nexport default function LoginForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(false);\n  \n  useEffect(() => {\n    setErrorMessage(false);\n  }, [username.value, password.value])\n\n  const handleSubmitLogin = async (e) => {\n    e.preventDefault();\n    console.log('LoginForm handleSubmitForm')\n    setErrorMessage(false);\n    try {\n      // verify username and password are correct\n      // const resp = await login(username.value, password.value);\n      const resp = await dispatch(loginSlice({\n        username: username.value,\n        password: password.value\n      }));\n      console.log('LoginForm handleSubmitForm resp',resp)\n      // if logged in, use resp.token to get user information\n      const userInfo = await dispatch(getUserInfoSlice({\n        token: resp.payload.token, \n        username: username.value\n      }));\n\n      // console.log('LoginForm handleSubmitLogin userInfo',userInfo)\n\n      auth.setAuthState({\n        userInfo: userInfo.payload.user,\n        token: resp.payload.token,\n      });\n      history.push(`/`);\n    } catch (error) {\n      setErrorMessage(true);\n      console.log(error)\n    }     \n  }\n  \n  return (\n    <form className={classes.root} onSubmit={handleSubmitLogin}>\n      {/* {console.log(errorMessage)} */}\n       <Box className={classes.err} \n        component=\"span\" \n        display={errorMessage ? 'block' : 'none'}\n        >\n          Error: Invalid credentials\n      </Box>\n      <TextField \n        className={classes.formElement} \n        label='Username: (required)' \n        variant='outlined' \n        value={username} \n        onChange={e => setUsername(e.target.value)}/>\n      <TextField \n        className={classes.formElement} \n        type='password'\n        label='Password: (required)' \n        variant='outlined' \n        value={password} \n        onChange={e => setPassword(e.target.value)}/>\n      <div className={classes.button}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}