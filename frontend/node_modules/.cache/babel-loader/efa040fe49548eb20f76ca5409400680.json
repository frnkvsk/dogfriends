{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import ImageUploading from 'react-images-uploading';\n\nimport photo_drop_zone from '../assets/photo_drop_zone.jpg'; // import Container from '@material-ui/core/Container';\n\nimport { makeStyles } from '@material-ui/core/styles'; // import ResizeImage from './ResizeImage';\n\nconst useStyles = makeStyles(theme => ({\n  photoDrop: {\n    backgroundImage: `url(${photo_drop_zone})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    width: '400px',\n    height: '370px',\n    border: '2px dotted salmon',\n    margin: '100px',\n    cursor: 'pointer'\n  }\n}));\nconst fileReader = new FileReader();\nexport function UploadImage({\n  handleUploadImage\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [origImage, setOrigImage] = useState('');\n  const [newImage, setNewImage] = useState('');\n\n  fileReader.onload = function (event) {\n    console.log('fileReader.onload');\n    var image = new Image();\n\n    image.onload = async function () {\n      let width = 400,\n          height = 400;\n\n      if (image.width > image.height) {\n        if (width < image.width) {\n          height = Math.floor(image.height * (width / image.width));\n        } else {\n          width = image.width;\n          height = image.height;\n        }\n      } else {\n        if (imageHeight < image.height) {\n          width = Math.floor(image.width * (width / image.height));\n        } else {\n          width = image.width;\n          height = image.height;\n        }\n      }\n\n      console.log('image.onload', image.width, image.height, width, height);\n      var canvas = document.createElement(\"canvas\");\n      var context = canvas.getContext(\"2d\");\n      canvas.width = width;\n      canvas.height = height;\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height); // console.log('image.onload canvas.toDataURL()',canvas.toDataURL())\n\n      setNewImage(canvas.toDataURL());\n    };\n\n    image.src = event.target.result;\n  };\n\n  useEffect(() => {\n    // console.log('useEffect',origImage)\n    const filterType = new RegExp('^(?:image//bmp|image//cis-cod|image/gif|image/ief|image/jpeg|image/jpeg|image/jpeg|image/pipeg|image/png|image/svg+xml|image/tiff|image/x-cmu-raster|image/x-cmx|image/x-icon|image/x-portable-anymap|image/x-portable-bitmap|image/x-portable-graymap|image/x-portable-pixmap|image/x-rgb|image/x-xbitmap|image/x-xpixmap|image/x-xwindowdump)$', 'i');\n    const uploadImage = document.getElementById(\"upload-Image\"); //check and retuns the length of uploded file.\n\n    if (uploadImage.files.length === 0) {\n      return;\n    } //Is Used for validate a valid file.\n\n\n    const uploadFile = document.getElementById(\"upload-Image\").files[0];\n\n    if (!filterType.test(uploadFile.type)) {\n      alert(\"Please select a valid image.\");\n      return;\n    }\n\n    fileReader.readAsDataURL(uploadFile); // eslint-disable-next-line\n  }, [fileReader, origImage]); // var loadImageFile = function () {\n  //   var uploadImage = document.getElementById(\"upload-Image\");\n  //   //check and retuns the length of uploded file.\n  //   if (uploadImage.files.length === 0) { \n  //     return; \n  //   }\n  //   //Is Used for validate a valid file.\n  //   var uploadFile = document.getElementById(\"upload-Image\").files[0];\n  //   if (!filterType.test(uploadFile.type)) {\n  //     alert(\"Please select a valid image.\"); \n  //     return;\n  //   }\n  //   fileReader.readAsDataURL(uploadFile);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"upload-Image\",\n              type: \"file\",\n              onChange: e => setOrigImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), newImage.length ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"upload-Preview\",\n              src: newImage,\n              alt: \"resized limage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n} // export function UploadImage({handleUploadImage}) {\n//   const classes = useStyles();\n//   // const [images, setImages] = React.useState([]);\n//   const [origImage, setOrigImage] = useState('');\n//   const [newImage, setNewImage] = useState('');\n//   const maxNumber = 1;\n//   const onChange = async (imageList, addUpdateIndex) => {\n//     // data for submit\n//     console.log(imageList, addUpdateIndex);\n//     const img = await ResizeImage(imageList, 200, 200);\n//     imageList[0].data_url = img;\n//     // console.log('UploadImage img',img)\n//     await setImages(imageList);\n//     console.log('img',img)\n//     console.log('imageList',imageList)\n//     // handleUploadImage(img)\n//   };\n//   return (\n//     <div className=\"App\">\n//       <ImageUploading\n//         multiple\n//         value={images}\n//         onChange={onChange}\n//         maxNumber={maxNumber}\n//         dataURLKey=\"data_url\"\n//       >\n//         {({\n//           imageList,\n//           onImageUpload,\n//           onImageRemoveAll,\n//           onImageUpdate,\n//           onImageRemove,\n//           isDragging,\n//           dragProps,\n//         }) => (\n//           // write your building UI\n//           <div className=\"upload__image-wrapper\">\n//             {!images.length &&\n//               <Container \n//                 className={classes.photoDrop}\n//                 onClick={onImageUpload}\n//                 {...dragProps}>\n//                   <p>Drag and drop photo or click to open.</p>\n//               </Container>\n//             }\n//             {/* <Container \n//               className={classes.photoDrop}\n//               onClick={onImageUpload}\n//               {...dragProps}>\n//                 <p>Drag and drop photo or click to open.</p>\n//             </Container> */}\n//             {/* <button\n//               style={isDragging ? { color: 'red' } : undefined}\n//               onClick={onImageUpload}\n//               {...dragProps}\n//             >\n//               Click or Drop here\n//             </button> */}\n//             &nbsp;\n//             {/* <button onClick={onImageRemoveAll}>Remove all images</button> */}\n//             {imageList.map((image, index) => (\n//               <div key={index} className=\"image-item\">\n//                 <img src={image['data_url']} alt=\"\" />\n//                 {/* {width = image['data_url'].width} */}\n//                 <div className=\"image-item__btn-wrapper\">\n//                   {/* <button onClick={() => onImageUpdate(index)}>Update</button> */}\n//                   <button onClick={() => onImageRemove(index)}>Remove</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </ImageUploading>\n//     </div>\n//   );\n// }\n\n_s(UploadImage, \"rzzhmMH8kJhQ2CSATvUiBcbSQkQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadImage.js"],"names":["React","useEffect","useState","photo_drop_zone","makeStyles","useStyles","theme","photoDrop","backgroundImage","backgroundSize","backgroundPosition","width","height","border","margin","cursor","fileReader","FileReader","UploadImage","handleUploadImage","classes","origImage","setOrigImage","newImage","setNewImage","onload","event","console","log","image","Image","Math","floor","imageHeight","canvas","document","createElement","context","getContext","drawImage","toDataURL","src","target","result","filterType","RegExp","uploadImage","getElementById","files","length","uploadFile","test","type","alert","readAsDataURL","e","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import ImageUploading from 'react-images-uploading';\nimport photo_drop_zone from '../assets/photo_drop_zone.jpg';\n// import Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import ResizeImage from './ResizeImage';\n\nconst useStyles = makeStyles((theme) => ({\n  photoDrop: {\n    backgroundImage: `url(${photo_drop_zone})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    width: '400px',\n    height: '370px',\n    border: '2px dotted salmon',\n    margin: '100px',\n    cursor: 'pointer',\n  }\n  \n}));\nconst fileReader = new FileReader();\nexport function UploadImage({handleUploadImage}) {\n  const classes = useStyles();\n  const [origImage, setOrigImage] = useState('');\n  const [newImage, setNewImage] = useState('');\n\n  \n\n  fileReader.onload = function (event) {\n    console.log('fileReader.onload')\n    \n    var image = new Image();\n    image.onload = async function(){\n        let width = 400, height = 400;\n        if(image.width > image.height) {      \n          if(width < image.width) {\n            height = Math.floor(image.height*(width/image.width));\n          } else {\n            width = image.width;\n            height = image.height;\n          }      \n        } else {\n          if(imageHeight < image.height) {\n            width = Math.floor(image.width*(width/image.height))       \n          } else {\n            width = image.width;\n            height = image.height;\n          } \n        }\n        console.log('image.onload',image.width, image.height, width, height)\n        var canvas=document.createElement(\"canvas\");\n        var context=canvas.getContext(\"2d\");\n        canvas.width=width;\n        canvas.height=height;\n        context.drawImage(image,\n            0,\n            0,\n            image.width,\n            image.height,\n            0,\n            0,\n            canvas.width,\n            canvas.height\n        );\n        // console.log('image.onload canvas.toDataURL()',canvas.toDataURL())\n        setNewImage(canvas.toDataURL());\n    }\n    image.src=event.target.result;\n  };\n\n  useEffect(() => {\n    // console.log('useEffect',origImage)\n    const filterType = new RegExp('^(?:image//bmp|image//cis-cod|image/gif|image/ief|image/jpeg|image/jpeg|image/jpeg|image/pipeg|image/png|image/svg+xml|image/tiff|image/x-cmu-raster|image/x-cmx|image/x-icon|image/x-portable-anymap|image/x-portable-bitmap|image/x-portable-graymap|image/x-portable-pixmap|image/x-rgb|image/x-xbitmap|image/x-xpixmap|image/x-xwindowdump)$','i');\n    const uploadImage = document.getElementById(\"upload-Image\");\n    \n    //check and retuns the length of uploded file.\n    if (uploadImage.files.length === 0) { \n      return; \n    }\n    \n    //Is Used for validate a valid file.\n    const uploadFile = document.getElementById(\"upload-Image\").files[0];\n    if (!filterType.test(uploadFile.type)) {\n      alert(\"Please select a valid image.\"); \n      return;\n    }\n    \n    fileReader.readAsDataURL(uploadFile);\n    // eslint-disable-next-line\n  }, [fileReader, origImage])\n  // var loadImageFile = function () {\n  //   var uploadImage = document.getElementById(\"upload-Image\");\n    \n  //   //check and retuns the length of uploded file.\n  //   if (uploadImage.files.length === 0) { \n  //     return; \n  //   }\n    \n  //   //Is Used for validate a valid file.\n  //   var uploadFile = document.getElementById(\"upload-Image\").files[0];\n  //   if (!filterType.test(uploadFile.type)) {\n  //     alert(\"Please select a valid image.\"); \n  //     return;\n  //   }\n    \n  //   fileReader.readAsDataURL(uploadFile);\n  // }\n  return (\n    <>\n    {/* <body className={classes.photoDrop}> */}\n      {/* <form name=\"uploadForm\"> */}\n        <table>\n          <tbody>\n            <tr>\n              <td><input id=\"upload-Image\" type=\"file\" onChange={(e) => setOrigImage(e.target.value)}/></td>\n            </tr>\n            {/* <tr>\n              <td>Origal Img - <img id=\"original-Img\" src={origImage} alt='original limage'/></td>\n            </tr> */}\n            {newImage.length ?\n              <tr>\n                <td><img id=\"upload-Preview\" src={newImage} alt='resized limage'/></td>\n              </tr>\n              :\n              <tr></tr>\n            }\n            \n            \n          </tbody>\n        </table>\n      {/* </form> */}\n    {/* </body> */}\n    </>\n  )\n}\n// export function UploadImage({handleUploadImage}) {\n//   const classes = useStyles();\n//   // const [images, setImages] = React.useState([]);\n//   const [origImage, setOrigImage] = useState('');\n//   const [newImage, setNewImage] = useState('');\n//   const maxNumber = 1;\n \n//   const onChange = async (imageList, addUpdateIndex) => {\n//     // data for submit\n    \n//     console.log(imageList, addUpdateIndex);\n    \n//     const img = await ResizeImage(imageList, 200, 200);\n//     imageList[0].data_url = img;\n//     // console.log('UploadImage img',img)\n//     await setImages(imageList);\n//     console.log('img',img)\n//     console.log('imageList',imageList)\n//     // handleUploadImage(img)\n//   };\n \n//   return (\n//     <div className=\"App\">\n//       <ImageUploading\n//         multiple\n//         value={images}\n//         onChange={onChange}\n//         maxNumber={maxNumber}\n//         dataURLKey=\"data_url\"\n//       >\n//         {({\n//           imageList,\n//           onImageUpload,\n//           onImageRemoveAll,\n//           onImageUpdate,\n//           onImageRemove,\n//           isDragging,\n//           dragProps,\n//         }) => (\n//           // write your building UI\n//           <div className=\"upload__image-wrapper\">\n//             {!images.length &&\n//               <Container \n//                 className={classes.photoDrop}\n//                 onClick={onImageUpload}\n//                 {...dragProps}>\n//                   <p>Drag and drop photo or click to open.</p>\n//               </Container>\n//             }\n//             {/* <Container \n//               className={classes.photoDrop}\n//               onClick={onImageUpload}\n//               {...dragProps}>\n//                 <p>Drag and drop photo or click to open.</p>\n//             </Container> */}\n//             {/* <button\n//               style={isDragging ? { color: 'red' } : undefined}\n//               onClick={onImageUpload}\n//               {...dragProps}\n//             >\n//               Click or Drop here\n//             </button> */}\n//             &nbsp;\n//             {/* <button onClick={onImageRemoveAll}>Remove all images</button> */}\n//             {imageList.map((image, index) => (\n//               <div key={index} className=\"image-item\">\n//                 <img src={image['data_url']} alt=\"\" />\n//                 {/* {width = image['data_url'].width} */}\n//                 <div className=\"image-item__btn-wrapper\">\n//                   {/* <button onClick={() => onImageUpdate(index)}>Update</button> */}\n//                   <button onClick={() => onImageRemove(index)}>Remove</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </ImageUploading>\n//     </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}