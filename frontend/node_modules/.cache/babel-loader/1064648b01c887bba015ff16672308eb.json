{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { login, getUserInfo, patchUserInfo } from './api/DogfriendsApi';\nexport const loginSlice = createAsyncThunk('login', async payload => {\n  // console.log('dogfriendsUserSlice payload',payload)\n  const response = await login({\n    username: payload.username,\n    password: payload.password\n  });\n  return response.data;\n});\nexport const getUserInfoSlice = createAsyncThunk('getUserInfo', async payload => {\n  console.log('dogfriendsUserSlice getUserInfoSlice payload', payload);\n  const response = await getUserInfo(payload);\n  console.log('dogfriendsUserSlice getUserInfoSlice response', response);\n  return response.data;\n});\nexport const updateUserInfoSlice = createAsyncThunk('patchUserInfo', async payload => {\n  console.log('updateUserInfoSlice payload', payload);\n  const response = await patchUserInfo(payload);\n  return response.data;\n});\nexport const dogfriendsUserSlice = createSlice({\n  name: 'userList',\n  initialState: {\n    userList: {\n      status: 'idle',\n      data: {},\n      error: {}\n    }\n  },\n  reducers: {\n    logout: (state, action) => {\n      state.userList = action.payload;\n    },\n    setUserList: (state, action) => {\n      state.userList = action.payload;\n    }\n  },\n  extraReducers: {\n    // login\n    [login.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [login.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [login.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    },\n    // get user info\n    [getUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    },\n    // patch/update user info\n    [updateUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [updateUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [updateUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    }\n  }\n});\nexport const {\n  logout,\n  setUserList\n} = dogfriendsUserSlice.actions;\nexport const selectUser = state => state.userList.userList;\nexport default dogfriendsUserSlice.reducer;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/dogfriendsUserSlice.js"],"names":["createAsyncThunk","createSlice","login","getUserInfo","patchUserInfo","loginSlice","payload","response","username","password","data","getUserInfoSlice","console","log","updateUserInfoSlice","dogfriendsUserSlice","name","initialState","userList","status","error","reducers","logout","state","action","setUserList","extraReducers","pending","fulfilled","rejected","actions","selectUser","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  login,\n  getUserInfo,\n  patchUserInfo,\n} from './api/DogfriendsApi';\n\n\nexport const loginSlice = createAsyncThunk(\n  'login',\n  async (payload) => {\n    // console.log('dogfriendsUserSlice payload',payload)\n    const response = await login({\n      username: payload.username,\n      password: payload.password\n    });\n    return response.data;\n  }\n);\n\nexport const getUserInfoSlice = createAsyncThunk(\n  'getUserInfo',\n  async (payload) => {\n    console.log('dogfriendsUserSlice getUserInfoSlice payload',payload)\n    const response = await getUserInfo(payload);\n    console.log('dogfriendsUserSlice getUserInfoSlice response',response)\n    return response.data;\n  }\n);\n\nexport const updateUserInfoSlice = createAsyncThunk(\n  'patchUserInfo',\n  async (payload) => {\n    console.log('updateUserInfoSlice payload',payload)\n    const response = await patchUserInfo(payload);\n    return response.data;\n  }\n);\n\nexport const dogfriendsUserSlice = createSlice({\n  name: 'userList',\n  initialState: {\n    userList: {\n      status: 'idle',\n      data: {},\n      error: {}\n    }\n  },\n  reducers: {\n    logout: (state, action) => {\n      state.userList = action.payload;\n    },\n    setUserList: (state, action) => {\n      state.userList = action.payload;\n    },\n  },\n  extraReducers: {\n    // login\n    [login.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [login.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [login.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n    // get user info\n    [getUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n    // patch/update user info\n    [updateUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [updateUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [updateUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n  }\n});\n\nexport const {\n  logout,\n  setUserList\n} = dogfriendsUserSlice.actions;\n\nexport const selectUser = state => state.userList.userList;\n\nexport default dogfriendsUserSlice.reducer;"]},"metadata":{},"sourceType":"module"}