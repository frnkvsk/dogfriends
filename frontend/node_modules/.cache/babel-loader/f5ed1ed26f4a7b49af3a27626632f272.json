{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UserAvatar.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar'; // import { AuthContext } from '../context/AuthContext';\n\nimport { deepOrange } from '@material-ui/core/colors';\nimport { selectUser } from '../dogfriendsUserSlice';\nimport { useSelector } from 'react-redux'; // import { getUserInfoData, selectUser } from '../dogfriendsUserSlice';\n// import { useSelector, useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    orange: {\n      color: theme.palette.getContrastText(deepOrange[500]),\n      backgroundColor: deepOrange[500]\n    },\n    marginRight: '40px'\n  }\n}));\nexport default function UserAvatar() {\n  const classes = useStyles();\n  const userList = useSelector(selectUser);\n  const [photo_url, setPhotoUrl] = useState(null); // const auth = useContext(AuthContext);\n  // console.log('UserAvatar auth',auth)\n\n  useEffect(() => {\n    if (userList.status === 'fulfilled') {\n      setPhotoUrl(userList.data.user.photo_url);\n    }\n  }, [userList.status, photo_url, userList]);\n  const initials = userList.status === 'fulfilled' ? userList.data.user.first_name[0].toUpperCase() + userList.data.user.last_name[0].toUpperCase() : '';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, console.log('UserAvatar return ', photo_url), /*#__PURE__*/React.createElement(Avatar, {\n    alt: initials,\n    src: photo_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UserAvatar.js"],"names":["React","useEffect","useState","makeStyles","Avatar","deepOrange","selectUser","useSelector","useStyles","theme","root","display","margin","spacing","orange","color","palette","getContrastText","backgroundColor","marginRight","UserAvatar","classes","userList","photo_url","setPhotoUrl","status","data","user","initials","first_name","toUpperCase","last_name","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;AACA;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJ,aAAS;AACPC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD,KAFL;AAKJC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,eAAd,CAA8BZ,UAAU,CAAC,GAAD,CAAxC,CADD;AAENa,MAAAA,eAAe,EAAEb,UAAU,CAAC,GAAD;AAFrB,KALJ;AASJc,IAAAA,WAAW,EAAE;AATT;AADiC,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,QAAQ,GAAGf,WAAW,CAACD,UAAD,CAA5B;AACA,QAAM,CAACiB,SAAD,EAAYC,WAAZ,IAA2BtB,QAAQ,CAAC,IAAD,CAAzC,CAHmC,CAKnC;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGqB,QAAQ,CAACG,MAAT,KAAoB,WAAvB,EAAoC;AAClCD,MAAAA,WAAW,CAACF,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBJ,SAApB,CAAX;AACD;AACF,GAJQ,EAIN,CAACD,QAAQ,CAACG,MAAV,EAAkBF,SAAlB,EAA6BD,QAA7B,CAJM,CAAT;AAMA,QAAMM,QAAQ,GAAGN,QAAQ,CAACG,MAAT,KAAkB,WAAlB,GAAgCH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBE,UAAnB,CAA8B,CAA9B,EAAiCC,WAAjC,KAAiDR,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBI,SAAnB,CAA6B,CAA7B,EAAgCD,WAAhC,EAAjF,GAAiI,EAAlJ;AACA,sBAEE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGsB,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCV,SAAjC,CADH,eAEE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEK,QAAb;AAAuB,IAAA,GAAG,EAAEL,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF;AAQD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n// import { AuthContext } from '../context/AuthContext';\nimport { deepOrange } from '@material-ui/core/colors';\nimport { selectUser } from '../dogfriendsUserSlice';\nimport { useSelector } from 'react-redux';\n\n// import { getUserInfoData, selectUser } from '../dogfriendsUserSlice';\n// import { useSelector, useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    orange: {\n      color: theme.palette.getContrastText(deepOrange[500]),\n      backgroundColor: deepOrange[500],\n    },\n    marginRight: '40px',\n  },\n}));\n\nexport default function UserAvatar() {\n  const classes = useStyles();\n  const userList = useSelector(selectUser);\n  const [photo_url, setPhotoUrl] = useState(null);\n\n  // const auth = useContext(AuthContext);\n  // console.log('UserAvatar auth',auth)\n  \n  useEffect(() => {\n    if(userList.status === 'fulfilled') {\n      setPhotoUrl(userList.data.user.photo_url);\n    }\n  }, [userList.status, photo_url, userList]);\n  \n  const initials = userList.status==='fulfilled' ? userList.data.user.first_name[0].toUpperCase() + userList.data.user.last_name[0].toUpperCase() : '';\n  return (\n    \n    <div className={classes.root}>\n      {console.log('UserAvatar return ',photo_url)}\n      <Avatar alt={initials} src={photo_url} />\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}