{"ast":null,"code":"// import React, { useContext, useEffect, useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { useHistory } from \"react-router-dom\";\n// import { makeStyles } from '@material-ui/core/styles';\n// import { \n//   Button, \n//   TextField,\n//   Checkbox,\n//   FormControlLabel,\n//   Box,\n// } from '@material-ui/core';\n// import { \n//   addNewPost,\n//  } from '../dogfriendsPostsSlice';\n// // import { useFormInput } from '../hooks/useFormInput';\n// import { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\n// import PostPhoto from './PostPhoto';\n// // import NewPhotoForm from './NewPhotoForm';\n// import UploadPhoto from './UploadPhoto';\n// import { v4 as uuid } from 'uuid';\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//     width: '100%',\n//     border: '1px solid red',\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     width: '100%',\n//     margin: '30px 0 20px 0',\n//   },\n//   buttons: {\n//   },\n//   input: {\n//     width: '100%',\n//     backgroundColor: '#ffffff',\n//     marginRight: '5px',\n//   },\n//   memeInput: {\n//     // display: formInputState,\n//   },\n//   imagePreview: {\n//     width: 'auto',\n//     alignItems: 'flex-start',\n//     justifyContent: 'center',\n//   },\n//   image: {\n//     width: '400px',\n//     height: '400px',\n//     borderRadius: '10px',\n//     padding: '10px',\n//   }\n// }));\n// const NewPostForm = ({data}) => {\n//   const classes = useStyles();\n//   const auth = useContext(AuthContext);\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   // console.log('NewPostForm auth',auth)\n//   const handleSubmit = e => {   \n//     e.preventDefault();\n//     // if(title.length && description.length && body.length) {\n//     //   const payload = {\n//     //     id: 'id',\n//     //     title: title, \n//     //     description: 'description', \n//     //     body: body,\n//     //     username: auth.authState.userInfo.username,\n//     //     token: auth.authState.token\n//     //   }\n//     //   dispatch(addNewPost(payload));    \n//     //   history.push('/');\n//     // } \n//     const payload = {\n//       parent_id: uuid(),\n//       photo_id: uuid(),\n//       title: title, \n//       // description: 'description', \n//       body: uuid(),\n//       // username: auth.authState.userInfo.username,\n//       token: auth.authState.token\n//     }\n//     dispatch(addNewPost(payload));    \n//   }\n//   const title = useFormInput('');\n//   const top = useFormInput('');\n//   const bottom = useFormInput('');\n//   const body = useFormInput('');\n//   const [url, setUrl] = useState('');\n//   const [formInputState, setFormInputState] = useState('none');\n//   const [photoShowState, setPhotoShowState] = useState('none');\n//   const [photo, setPhoto] = useState({\n//     url: '',\n//     top: '',\n//     bottom: '',\n//     textColor: '#000000'\n//   });\n//   const [textColor, setTextColor] = useState('#000000');  \n//   const handleTextColor = (e) => {\n//     e.preventDefault();\n//     setTextColor(e.target.value);\n//   }\n//   useEffect(() => {\n//     // console.log('useEffect photoShowState',photoShowState)\n//     // console.log('useEffect url', url)\n//     if(url !== '') {\n//       setPhotoShowState('flex');\n//       setPhoto({\n//         url: url,\n//         top: top.value,\n//         bottom: bottom.value,\n//         textcolor: textColor\n//       });\n//     } else {\n//       setPhotoShowState('none');\n//       setPhoto({\n//         url: '',\n//         top: '',\n//         bottom: '',\n//         textcolor: textColor\n//       });\n//     }\n//     // eslint-disable-next-line\n//   }, [url, top.value, bottom.value, textColor]);\n//   const handleCheckBox = () => {\n//     if(formInputState === 'none') setFormInputState('inline')\n//     else setFormInputState('none')\n//   }\n//   return (\n//     <div className={classes.root}>    \n//       <Box className={classes.imagePreview} style={{display: photoShowState}}>\n//         <PostPhoto photo={photo}/>\n//       </Box>\n//       <form className={classes.form} noValidate autoComplete=\"off\">   \n//         <FormInputOutlined label=\"Title\" formInput={title} />\n//         <FormControlLabel\n//           control={<Checkbox onChange={handleCheckBox} />}\n//           label=\"Add text to photo.\"/>\n//         <div style={{display: formInputState}}>\n//           {/* <NewPhotoForm url={url} handleSetUrl={handleSetUrl} /> */}\n//           <UploadPhoto token={auth.authState.token} setUrl={setUrl}/>\n//           Text Color&nbsp;  \n//           <input           \n//             type=\"color\" \n//             onChange={handleTextColor}\n//             defaultValue={textColor} />\n//           <FormInputOutlined label=\"Top Text\" formInput={top} />\n//           <FormInputOutlined label=\"Bottom Text\" formInput={bottom} />\n//         </div>\n//         <TextField \n//           multiline\n//           rows={4} \n//           label=\"Body\" \n//           variant=\"outlined\" \n//           {...body} />\n//         <div className={classes.buttons}>\n//           <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\n//             Save\n//           </Button>\n//           <Button onClick={() => history.push('/')} variant=\"contained\" color=\"default\" >\n//             Cancel\n//           </Button>\n//         </div>      \n//       </form>\n//     </div>\n//   );\n// }\n// const useFormInput = () => {\n//   const [value, setValue] = useState('');\n//   const handleChange = e => setValue(e.target.value);\n//   return {\n//     value,\n//     onChange: handleChange,\n//   }\n// }\n// export default NewPostForm;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js"],"names":[],"mappingssourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { useHistory } from \"react-router-dom\";\n// import { makeStyles } from '@material-ui/core/styles';\n// import { \n//   Button, \n//   TextField,\n//   Checkbox,\n//   FormControlLabel,\n//   Box,\n// } from '@material-ui/core';\n// import { \n//   addNewPost,\n//  } from '../dogfriendsPostsSlice';\n// // import { useFormInput } from '../hooks/useFormInput';\n// import { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\n// import PostPhoto from './PostPhoto';\n// // import NewPhotoForm from './NewPhotoForm';\n// import UploadPhoto from './UploadPhoto';\n\n// import { v4 as uuid } from 'uuid';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//     width: '100%',\n//     border: '1px solid red',\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     width: '100%',\n//     margin: '30px 0 20px 0',\n//   },\n//   buttons: {\n\n//   },\n//   input: {\n//     width: '100%',\n//     backgroundColor: '#ffffff',\n//     marginRight: '5px',\n//   },\n//   memeInput: {\n//     // display: formInputState,\n//   },\n//   imagePreview: {\n//     width: 'auto',\n//     alignItems: 'flex-start',\n//     justifyContent: 'center',\n//   },\n//   image: {\n//     width: '400px',\n//     height: '400px',\n//     borderRadius: '10px',\n//     padding: '10px',\n//   }\n// }));\n\n// const NewPostForm = ({data}) => {\n//   const classes = useStyles();\n//   const auth = useContext(AuthContext);\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   // console.log('NewPostForm auth',auth)\n\n//   const handleSubmit = e => {   \n//     e.preventDefault();\n//     // if(title.length && description.length && body.length) {\n//     //   const payload = {\n//     //     id: 'id',\n//     //     title: title, \n//     //     description: 'description', \n//     //     body: body,\n//     //     username: auth.authState.userInfo.username,\n//     //     token: auth.authState.token\n//     //   }\n//     //   dispatch(addNewPost(payload));    \n//     //   history.push('/');\n//     // } \n//     const payload = {\n//       parent_id: uuid(),\n//       photo_id: uuid(),\n//       title: title, \n//       // description: 'description', \n//       body: uuid(),\n//       // username: auth.authState.userInfo.username,\n//       token: auth.authState.token\n//     }\n//     dispatch(addNewPost(payload));    \n//   }\n  \n//   const title = useFormInput('');\n  \n//   const top = useFormInput('');\n//   const bottom = useFormInput('');\n//   const body = useFormInput('');\n//   const [url, setUrl] = useState('');\n//   const [formInputState, setFormInputState] = useState('none');\n//   const [photoShowState, setPhotoShowState] = useState('none');\n//   const [photo, setPhoto] = useState({\n//     url: '',\n//     top: '',\n//     bottom: '',\n//     textColor: '#000000'\n//   });\n//   const [textColor, setTextColor] = useState('#000000');  \n//   const handleTextColor = (e) => {\n//     e.preventDefault();\n//     setTextColor(e.target.value);\n//   }\n//   useEffect(() => {\n//     // console.log('useEffect photoShowState',photoShowState)\n//     // console.log('useEffect url', url)\n//     if(url !== '') {\n//       setPhotoShowState('flex');\n//       setPhoto({\n//         url: url,\n//         top: top.value,\n//         bottom: bottom.value,\n//         textcolor: textColor\n//       });\n//     } else {\n//       setPhotoShowState('none');\n//       setPhoto({\n//         url: '',\n//         top: '',\n//         bottom: '',\n//         textcolor: textColor\n//       });\n//     }\n//     // eslint-disable-next-line\n//   }, [url, top.value, bottom.value, textColor]);\n\n//   const handleCheckBox = () => {\n//     if(formInputState === 'none') setFormInputState('inline')\n//     else setFormInputState('none')\n//   }\n  \n//   return (\n//     <div className={classes.root}>    \n//       <Box className={classes.imagePreview} style={{display: photoShowState}}>\n//         <PostPhoto photo={photo}/>\n        \n//       </Box>\n//       <form className={classes.form} noValidate autoComplete=\"off\">   \n\n//         <FormInputOutlined label=\"Title\" formInput={title} />\n//         <FormControlLabel\n//           control={<Checkbox onChange={handleCheckBox} />}\n//           label=\"Add text to photo.\"/>\n//         <div style={{display: formInputState}}>\n//           {/* <NewPhotoForm url={url} handleSetUrl={handleSetUrl} /> */}\n//           <UploadPhoto token={auth.authState.token} setUrl={setUrl}/>\n//           Text Color&nbsp;  \n//           <input           \n//             type=\"color\" \n//             onChange={handleTextColor}\n//             defaultValue={textColor} />\n//           <FormInputOutlined label=\"Top Text\" formInput={top} />\n//           <FormInputOutlined label=\"Bottom Text\" formInput={bottom} />\n//         </div>\n        \n//         <TextField \n//           multiline\n//           rows={4} \n//           label=\"Body\" \n//           variant=\"outlined\" \n//           {...body} />\n        \n//         <div className={classes.buttons}>\n//           <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\n//             Save\n//           </Button>\n//           <Button onClick={() => history.push('/')} variant=\"contained\" color=\"default\" >\n//             Cancel\n//           </Button>\n//         </div>      \n//       </form>\n//     </div>\n//   );\n// }\n// const useFormInput = () => {\n//   const [value, setValue] = useState('');\n//   const handleChange = e => setValue(e.target.value);\n//   return {\n//     value,\n//     onChange: handleChange,\n//   }\n// }\n// export default NewPostForm;"]},"metadata":{},"sourceType":"module"}