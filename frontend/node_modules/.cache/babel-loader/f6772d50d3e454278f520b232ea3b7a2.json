{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postNewPhoto // postDestroyPhoto\n} from './api/DogfriendsPhotosApi';\nexport const postPhotoNew = createAsyncThunk('postPhotoNew', async acceptedFiles => {\n  const response = await postNewPhoto(acceptedFiles);\n  return response.data;\n}); // export const postPhotoDestroy = createAsyncThunk(\n//   'postPhotoDestroy',\n//   async (public_id, signature) => {\n//     const response = await postDestroyPhoto(public_id, signature);\n//     return response.data;\n//   }\n// );\n// export const getPhotoById = createAsyncThunk(\n//   'getPhotoById',\n//   async (id) => {\n//     const response = await getPhotoById(id);\n//     return response.data;\n//   }\n// );\n\nexport const dogfriendsPhotosSlice = createSlice({\n  name: 'photoList',\n  initialState: {\n    photoList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  // reducers: {\n  //   removePhoto: (state, action) => {\n  //     deletePhoto(action.payload.id, action.payload.username, action.payload.token);\n  //   },\n  // },\n  extraReducers: {\n    // post a new photo\n    [postPhotoNew.pending]: (state, action) => {\n      state.photoList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [postPhotoNew.fulfilled]: (state, action) => {\n      state.photoList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [postPhotoNew.rejected]: (state, action) => {\n      state.photoList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    } // delete a photo\n    // [postPhotoDestroy.pending]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'pending',\n    //     data: {},\n    //     error: {}\n    //   };\n    // },\n    // [postPhotoDestroy.fulfilled]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'fulfilled',\n    //     data: action.payload,\n    //     error: {}\n    //   };\n    // },\n    // [postPhotoDestroy.rejected]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'rejected',\n    //     data: {},\n    //     error: action.payload,\n    //   };\n    // },    \n\n  }\n}); // export const {\n//   deletePhoto,\n// } = dogfriendsPhotosSlice.actions;\n\nexport const selectPosts = state => state.photoList.photoList;\nexport default dogfriendsPhotosSlice.reducer;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/dogfriendsPhotosSlice.js"],"names":["createAsyncThunk","createSlice","postNewPhoto","postPhotoNew","acceptedFiles","response","data","dogfriendsPhotosSlice","name","initialState","photoList","status","error","extraReducers","pending","state","action","fulfilled","payload","rejected","selectPosts","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SACEC,YADF,CAEE;AAFF,OAGO,2BAHP;AAKA,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CAC1C,cAD0C,EAE1C,MAAOI,aAAP,IAAyB;AACvB,QAAMC,QAAQ,GAAG,MAAMH,YAAY,CAACE,aAAD,CAAnC;AACA,SAAOC,QAAQ,CAACC,IAAhB;AACD,CALyC,CAArC,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAGN,WAAW,CAAC;AAC/CO,EAAAA,IAAI,EAAE,WADyC;AAE/CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE,MADC;AAETL,MAAAA,IAAI,EAAE,EAFG;AAGTM,MAAAA,KAAK,EAAE;AAHE;AADC,GAFiC;AAS/C;AACA;AACA;AACA;AACA;AACAC,EAAAA,aAAa,EAAE;AACb;AACA,KAACV,YAAY,CAACW,OAAd,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,SADQ;AAEhBL,QAAAA,IAAI,EAAE,EAFU;AAGhBM,QAAAA,KAAK,EAAE;AAHS,OAAlB;AAKD,KARY;AASb,KAACT,YAAY,CAACc,SAAd,GAA0B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,WADQ;AAEhBL,QAAAA,IAAI,EAAEU,MAAM,CAACE,OAFG;AAGhBN,QAAAA,KAAK,EAAE;AAHS,OAAlB;AAKD,KAfY;AAgBb,KAACT,YAAY,CAACgB,QAAd,GAAyB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACL,SAAN,GAAkB;AAChBC,QAAAA,MAAM,EAAE,UADQ;AAEhBL,QAAAA,IAAI,EAAE,EAFU;AAGhBM,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHE,OAAlB;AAKD,KAtBY,CAuBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5Ca;AAdgC,CAAD,CAAzC,C,CA8DP;AACA;AACA;;AAEA,OAAO,MAAME,WAAW,GAAGL,KAAK,IAAIA,KAAK,CAACL,SAAN,CAAgBA,SAA7C;AAEP,eAAeH,qBAAqB,CAACc,OAArC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  postNewPhoto,\n  // postDestroyPhoto\n} from './api/DogfriendsPhotosApi';\n\nexport const postPhotoNew = createAsyncThunk(\n  'postPhotoNew',\n  async (acceptedFiles) => {\n    const response = await postNewPhoto(acceptedFiles);\n    return response.data;\n  }\n);\n// export const postPhotoDestroy = createAsyncThunk(\n//   'postPhotoDestroy',\n//   async (public_id, signature) => {\n//     const response = await postDestroyPhoto(public_id, signature);\n//     return response.data;\n//   }\n// );\n\n// export const getPhotoById = createAsyncThunk(\n//   'getPhotoById',\n//   async (id) => {\n//     const response = await getPhotoById(id);\n//     return response.data;\n//   }\n// );\n\nexport const dogfriendsPhotosSlice = createSlice({\n  name: 'photoList',\n  initialState: {\n    photoList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  // reducers: {\n  //   removePhoto: (state, action) => {\n  //     deletePhoto(action.payload.id, action.payload.username, action.payload.token);\n  //   },\n  // },\n  extraReducers: {\n    // post a new photo\n    [postPhotoNew.pending]: (state, action) => {\n      state.photoList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [postPhotoNew.fulfilled]: (state, action) => {\n      state.photoList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [postPhotoNew.rejected]: (state, action) => {\n      state.photoList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    },    \n    // delete a photo\n    // [postPhotoDestroy.pending]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'pending',\n    //     data: {},\n    //     error: {}\n    //   };\n    // },\n    // [postPhotoDestroy.fulfilled]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'fulfilled',\n    //     data: action.payload,\n    //     error: {}\n    //   };\n    // },\n    // [postPhotoDestroy.rejected]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'rejected',\n    //     data: {},\n    //     error: action.payload,\n    //   };\n    // },    \n  }\n});\n\n// export const {\n//   deletePhoto,\n// } = dogfriendsPhotosSlice.actions;\n\nexport const selectPosts = state => state.photoList.photoList;\n\nexport default dogfriendsPhotosSlice.reducer;"]},"metadata":{},"sourceType":"module"}