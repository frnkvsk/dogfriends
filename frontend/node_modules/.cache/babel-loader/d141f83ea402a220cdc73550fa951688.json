{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { selectUser } from '../dogfriendsUserSlice';\nimport { useSelector } from 'react-redux';\n\nfunction useFormInput(inititalValue = '', _type = 'text') {\n  const userList = useSelector(selectUser);\n  const [value, setValue] = useState('');\n  const [type] = useState(_type);\n  console.log('useFormInput value=', value, '  initialValue', inititalValue);\n  useEffect(() => {\n    if (inititalValue === 'first_name') {\n      setValue(userList.data.user.first_name);\n    }\n  }, [userList]);\n\n  const handleChange = async e => {\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    type,\n    onChange: handleChange\n  };\n}\n\nexport { useFormInput };","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/hooks/useFormInput.js"],"names":["useEffect","useState","selectUser","useSelector","useFormInput","inititalValue","_type","userList","value","setValue","type","console","log","data","user","first_name","handleChange","e","target","onChange"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,SAASC,YAAT,CAAsBC,aAAa,GAAC,EAApC,EAAwCC,KAAK,GAAC,MAA9C,EAAsD;AACpD,QAAMC,QAAQ,GAAGJ,WAAW,CAACD,UAAD,CAA5B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,IAAST,QAAQ,CAACK,KAAD,CAAvB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCJ,KAAlC,EAAwC,gBAAxC,EAAyDH,aAAzD;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGK,aAAa,KAAK,YAArB,EAAmC;AACjCI,MAAAA,QAAQ,CAACF,QAAQ,CAACM,IAAT,CAAcC,IAAd,CAAmBC,UAApB,CAAR;AACD;AACF,GAJQ,EAIN,CAACR,QAAD,CAJM,CAAT;;AAKA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;AACD,GAFD;;AAGA,SAAO;AACLA,IAAAA,KADK;AAELE,IAAAA,IAFK;AAGLS,IAAAA,QAAQ,EAAEH;AAHL,GAAP;AAKD;;AAED,SAAQZ,YAAR","sourcesContent":["import {useEffect, useState} from 'react';\nimport { selectUser } from '../dogfriendsUserSlice';\nimport { useSelector } from 'react-redux';\n\n\nfunction useFormInput(inititalValue='', _type='text') {\n  const userList = useSelector(selectUser);\n  const [value, setValue] = useState('');\n  const [type] = useState(_type);\n  console.log('useFormInput value=',value,'  initialValue',inititalValue)\n  useEffect(() => {\n    if(inititalValue === 'first_name') {\n      setValue(userList.data.user.first_name);\n    }\n  }, [userList])\n  const handleChange = async (e) => {\n    setValue(e.target.value);\n  }\n  return {\n    value, \n    type,\n    onChange: handleChange,\n  };\n}\n\nexport {useFormInput};"]},"metadata":{},"sourceType":"module"}