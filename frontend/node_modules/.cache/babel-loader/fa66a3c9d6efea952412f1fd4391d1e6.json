{"ast":null,"code":"const Compress = require('compress.js');\n\nconst compress = new Compress();\n\nconst resizeImage = async (imageList, width, height) => {\n  console.log('ResizeImage image', imageList);\n  return await compress.compress(imageList, {\n    size: 4,\n    // the max size in MB, defaults to 2MB\n    quality: .75,\n    // the quality of the image, max is 1,\n    maxWidth: width,\n    // the max width of the output image, defaults to 1920px\n    maxHeight: height,\n    // the max height of the output image, defaults to 1920px\n    resize: true // defaults to true, set false if you do not want to resize the image width and height\n\n  }).then(data => {\n    // returns an array of compressed images\n    console.log('ResizeImage data', data);\n    return [data];\n  });\n};\n\nexport default resizeImage;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/ResizeImage.js"],"names":["Compress","require","compress","resizeImage","imageList","width","height","console","log","size","quality","maxWidth","maxHeight","resize","then","data"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,EAAjB;;AAEA,MAAMG,WAAW,GAAG,OAAOC,SAAP,EAAkBC,KAAlB,EAAyBC,MAAzB,KAAoC;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCJ,SAAhC;AACA,SAAO,MAAMF,QAAQ,CAACA,QAAT,CAAkBE,SAAlB,EAA6B;AACxCK,IAAAA,IAAI,EAAE,CADkC;AAC/B;AACTC,IAAAA,OAAO,EAAE,GAF+B;AAE1B;AACdC,IAAAA,QAAQ,EAAEN,KAH8B;AAGvB;AACjBO,IAAAA,SAAS,EAAEN,MAJ6B;AAIrB;AACnBO,IAAAA,MAAM,EAAE,IALgC,CAK1B;;AAL0B,GAA7B,EAMVC,IANU,CAMJC,IAAD,IAAU;AAChB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BO,IAA/B;AACA,WAAO,CAACA,IAAD,CAAP;AACD,GAVY,CAAb;AAWD,CAbD;;AAeA,eAAeZ,WAAf","sourcesContent":["const Compress = require('compress.js')\nconst compress = new Compress()\n\nconst resizeImage = async (imageList, width, height) => {\n  console.log('ResizeImage image',imageList)\n  return await compress.compress(imageList, {\n    size: 4, // the max size in MB, defaults to 2MB\n    quality: .75, // the quality of the image, max is 1,\n    maxWidth: width, // the max width of the output image, defaults to 1920px\n    maxHeight: height, // the max height of the output image, defaults to 1920px\n    resize: true, // defaults to true, set false if you do not want to resize the image width and height\n  }).then((data) => {\n    // returns an array of compressed images\n    console.log('ResizeImage data',data)\n    return [data]\n  })\n}\n\nexport default resizeImage;"]},"metadata":{},"sourceType":"module"}