{"ast":null,"code":"import * as AWS from 'aws-sdk';\nimport { v4 as uuid } from 'uuid';\nconst BUCKET_NAME = process.env.BUCKET_NAME;\nconst s3 = new AWS.S3({\n  region: process.env.AWS_DEFAULT_REGION,\n  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n  accessKeyId: process.env.AWS_ACCESS_KEY_ID\n});\n\nconst uploadToS3 = async data => {\n  let mime = data.name.slice(data.name.lastIndexOf('.'), data.name.length);\n  const name = uuid() + '.' + mime;\n  await s3.putObject({\n    Key: name,\n    Bucket: BUCKET_NAME,\n    ContentType: `image/${mime}`,\n    Body: data,\n    ACL: 'public-read'\n  }).promise();\n  return name;\n};\n\nconst postNewPhoto = async data => {\n  try {\n    const url = await uploadToS3(data);\n    console.log('url', url);\n    return url;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { postNewPhoto };","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/api/DogfriendsPhotosApi.js"],"names":["AWS","v4","uuid","BUCKET_NAME","process","env","s3","S3","region","AWS_DEFAULT_REGION","secretAccessKey","AWS_SECRET_ACCESS_KEY","accessKeyId","AWS_ACCESS_KEY_ID","uploadToS3","data","mime","name","slice","lastIndexOf","length","putObject","Key","Bucket","ContentType","Body","ACL","promise","postNewPhoto","url","console","log","error"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,SAArB;AAEA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYF,WAAhC;AAEA,MAAMG,EAAE,GAAG,IAAIN,GAAG,CAACO,EAAR,CAAW;AACpBC,EAAAA,MAAM,EAAEJ,OAAO,CAACC,GAAR,CAAYI,kBADA;AAEpBC,EAAAA,eAAe,EAAEN,OAAO,CAACC,GAAR,CAAYM,qBAFT;AAGpBC,EAAAA,WAAW,EAAER,OAAO,CAACC,GAAR,CAAYQ;AAHL,CAAX,CAAX;;AAMA,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC,MAAIC,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgBH,IAAI,CAACE,IAAL,CAAUE,WAAV,CAAsB,GAAtB,CAAhB,EAA4CJ,IAAI,CAACE,IAAL,CAAUG,MAAtD,CAAX;AACA,QAAMH,IAAI,GAAGf,IAAI,KAAK,GAAT,GAAec,IAA5B;AACA,QAAMV,EAAE,CAACe,SAAH,CAAa;AACjBC,IAAAA,GAAG,EAAEL,IADY;AAEjBM,IAAAA,MAAM,EAAEpB,WAFS;AAGjBqB,IAAAA,WAAW,EAAG,SAAQR,IAAK,EAHV;AAIjBS,IAAAA,IAAI,EAAEV,IAJW;AAKjBW,IAAAA,GAAG,EAAE;AALY,GAAb,EAMHC,OANG,EAAN;AAOA,SAAOV,IAAP;AACD,CAXD;;AAaA,MAAMW,YAAY,GAAG,MAAOb,IAAP,IAAgB;AACnC,MAAI;AACF,UAAMc,GAAG,GAAG,MAAMf,UAAU,CAACC,IAAD,CAA5B;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,GAAlB;AACA,WAAOA,GAAP;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CARD;;AAWA,SACEJ,YADF","sourcesContent":["import * as AWS from 'aws-sdk';\n\nimport { v4 as uuid } from 'uuid';\n\nconst BUCKET_NAME = process.env.BUCKET_NAME;\n\nconst s3 = new AWS.S3({\n  region: process.env.AWS_DEFAULT_REGION,\n  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n  accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n});\n\nconst uploadToS3 = async (data) => {\n  let mime = data.name.slice(data.name.lastIndexOf('.'), data.name.length);\n  const name = uuid() + '.' + mime;\n  await s3.putObject({\n    Key: name,\n    Bucket: BUCKET_NAME,\n    ContentType: `image/${mime}`,\n    Body: data,\n    ACL: 'public-read',\n  }).promise(); \n  return name;\n}\n\nconst postNewPhoto = async (data) => {\n  try {\n    const url = await uploadToS3(data);\n    console.log('url',url)\n    return url;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport {\n  postNewPhoto,\n}"]},"metadata":{},"sourceType":"module"}