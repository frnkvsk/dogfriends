{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { login, getUserInfo } from './api/DogfriendsApi';\nexport const loginSlice = createAsyncThunk('login', async payload => {\n  console.log('dogfriendsUserSlice payload', payload);\n  const response = await login({\n    username: payload.username,\n    password: payload.password\n  });\n  return response.data;\n});\nexport const getUserInfoSlice = createAsyncThunk('getUserInfo', async payload => {\n  console.log('dogfriendsUserSlice payload', payload);\n  const response = await getUserInfo(payload);\n  return response.data;\n});\nexport const dogfriendsUserSlice = createSlice({\n  name: 'userList',\n  initialState: {\n    userList: {\n      status: 'idle',\n      data: {},\n      error: {}\n    }\n  },\n  reducers: {\n    logout: (state, action) => {\n      state.userList = action.payload;\n    },\n    setUserList: (state, action) => {\n      state.userList = action.payload;\n    }\n  },\n  extraReducers: {\n    // login\n    [login.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [login.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [login.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    },\n    // get user info\n    [getUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    }\n  }\n});\nexport const {\n  logout,\n  setUserList\n} = dogfriendsUserSlice.actions;\nexport const selectUser = state => state.userList.userList;\nexport default dogfriendsUserSlice.reducer;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/dogfriendsUserSlice.js"],"names":["createAsyncThunk","createSlice","login","getUserInfo","loginSlice","payload","console","log","response","username","password","data","getUserInfoSlice","dogfriendsUserSlice","name","initialState","userList","status","error","reducers","logout","state","action","setUserList","extraReducers","pending","fulfilled","rejected","actions","selectUser","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  login,\n  getUserInfo,\n} from './api/DogfriendsApi';\n\n\nexport const loginSlice = createAsyncThunk(\n  'login',\n  async (payload) => {\n    console.log('dogfriendsUserSlice payload',payload)\n    const response = await login({\n      username: payload.username,\n      password: payload.password\n    });\n    return response.data;\n  }\n);\n\nexport const getUserInfoSlice = createAsyncThunk(\n  'getUserInfo',\n  async (payload) => {\n    console.log('dogfriendsUserSlice payload',payload)\n    const response = await getUserInfo(payload);\n    return response.data;\n  }\n);\n\nexport const dogfriendsUserSlice = createSlice({\n  name: 'userList',\n  initialState: {\n    userList: {\n      status: 'idle',\n      data: {},\n      error: {}\n    }\n  },\n  reducers: {\n    logout: (state, action) => {\n      state.userList = action.payload;\n    },\n    setUserList: (state, action) => {\n      state.userList = action.payload;\n    },\n  },\n  extraReducers: {\n    // login\n    [login.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [login.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [login.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n    // get user info\n    [getUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n  }\n});\n\nexport const {\n  logout,\n  setUserList\n} = dogfriendsUserSlice.actions;\n\nexport const selectUser = state => state.userList.userList;\n\nexport default dogfriendsUserSlice.reducer;"]},"metadata":{},"sourceType":"module"}