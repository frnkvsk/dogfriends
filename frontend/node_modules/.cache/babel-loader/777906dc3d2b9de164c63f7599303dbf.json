{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/SignupForm.js\";\n\n/** Login and Signup */\nimport React, { useContext } from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n// import { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\n// import Stepper from '@material-ui/core/Stepper';\n// import Step from '@material-ui/core/Step';\n// import StepLabel from '@material-ui/core/StepLabel';\n// import Typography from '@material-ui/core/Typography';\n// import { useFormInput } from '../hooks/useFormInput';\n\nimport { AuthContext } from '../context/AuthContext'; // import FormInputOutlined from './FormInputOutlined';\n\nimport { signup } from '../api/DogfriendsApi';\nimport UserInfoForm from './UserInfoForm';\nimport { useHistory } from 'react-router-dom'; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'flex-start',\n//     width: '100%',\n//     minHeight: '100vh',\n//     maxWidth: '700px',\n//     padding: '2px',\n//     height: '100vh',\n//   },\n//   form: {\n//     width: '100%',\n//     backgroundColor: '#ffffff',\n//   },\n//   button: {\n//     display: 'flex',\n//     justifyContent: 'flex-end',\n//     margin: '10px 20px 15px',\n//   },\n//   err: {\n//     color: '#ff1744',\n//     fontSize: '24px',\n//   },\n//   backButton: {\n//     marginRight: theme.spacing(1),\n//   },\n//   completed: {\n//     display: 'inline-block',\n//   },\n// }));\n\nexport default function SignupForm() {\n  // const classes = useStyles();\n  const history = useHistory(); // const username = useFormInput();\n  // const password = useFormInput('password');\n  // const first_name = useFormInput();\n  // const last_name = useFormInput();  \n  // const photo_url = useFormInput();\n  // const email = useFormInput();\n  // const city = useFormInput();\n  // const state = useFormInput();\n  // const country = useFormInput();\n\n  const auth = useContext(AuthContext);\n\n  const handleSubmitSignup = async data => {\n    // setErrorMessage(false);\n    try {\n      // const data = {\n      //   username: username.value, \n      //   password: password.value, \n      //   first_name: first_name.value, \n      //   last_name: last_name.value, \n      //   email: email.value,\n      //   photo_url: photo_url.value,\n      //   city: city.value, \n      //   state: state.value, \n      //   country: country.value\n      // }\n      const resp = await signup(data);\n      auth.setAuthState({\n        token: resp.data.token,\n        userInfo: data // {\n        //   username: dusername.value,\n        //   first_name: first_name.value,\n        //   last_name: last_name.value,\n        //   photo_url: photo_url.value,\n        //   email: email.value,\n        // }\n\n      });\n      history.push(`/`);\n    } catch (error) {\n      // setErrorMessage(true);\n      console.log(error);\n    }\n  }; // const [activeStep, setActiveStep] = useState(0);\n  // const steps = ['User Info', 'Contact', 'Confirm'];\n  // const handleNext = () => {\n  //   if(activeStep === 0) {\n  //     if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n  //       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //     }\n  //   } else if(activeStep === 1) {\n  //     if(email.value.length && city.value.length && state.value.length && country.value.length) {\n  //       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //     }\n  //   } else {\n  //     console.log('handleSubmitSignup() fired')\n  //     handleSubmitSignup();\n  //   }    \n  // };\n  // const handleBack = () => {\n  //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  // };\n  // const handleReset = () => {\n  //   setActiveStep(0);\n  // };\n\n\n  return /*#__PURE__*/React.createElement(UserInfoForm, {\n    handleSubmit: handleSubmitSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }) // <>\n\n  /* <div className={classes.root}>\n    <Stepper activeStep={activeStep}>\n      {steps.map((label) => (\n        <Step key={label}>\n          <StepLabel>{label}</StepLabel>\n        </Step>\n      ))}\n    </Stepper>\n     {activeStep === 0 ?\n      <form className={classes.form}> \n        <FormInputOutlined name='usr_name' label='username' formInput={username}/>\n        <FormInputOutlined label='Password' formInput={password} />\n        <FormInputOutlined label='First Name' formInput={first_name} />\n        <FormInputOutlined label='Last Name' formInput={last_name} />\n        <FormInputOutlined label='Photo URL' formInput={photo_url} />              \n      </form> :\n      activeStep === 1 ?\n      <form className={classes.form}> \n        <FormInputOutlined label={'Email'} formInput={email} />\n        <FormInputOutlined label={'City'} formInput={city} />\n        <FormInputOutlined label={'State'} formInput={state} />\n        <FormInputOutlined label={'Country'} formInput={country} />        \n      </form> :\n      <>\n      <div>{username.value}</div>\n      <div>{first_name.value}</div>\n      <div>{last_name.value}</div>\n      <div>{email.value}</div>\n      <div>{city.value}</div>\n      <div>{state.value}</div>\n      <div>{country.value}</div>\n      </>\n    }      \n     <div>\n      {activeStep === steps.length ? \n        <div>\n          <Typography className={classes.instructions}>All steps completed</Typography>\n          <Button onClick={handleReset}>Reset</Button>\n        </div>\n       : \n        <div>\n          <div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}\n            >\n              Back\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n            </Button>\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n    </> */\n  ;\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/SignupForm.js"],"names":["React","useContext","AuthContext","signup","UserInfoForm","useHistory","SignupForm","history","auth","handleSubmitSignup","data","resp","setAuthState","token","userInfo","push","error","console","log"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,eAAe,SAASC,UAAT,GAAsB;AACnC;AACA,QAAMC,OAAO,GAAGF,UAAU,EAA1B,CAFmC,CAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMG,IAAI,GAAGP,UAAU,CAACC,WAAD,CAAvB;;AAEA,QAAMO,kBAAkB,GAAG,MAAOC,IAAP,IAAgB;AACzC;AACA,QAAI;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,IAAI,GAAG,MAAMR,MAAM,CAACO,IAAD,CAAzB;AACAF,MAAAA,IAAI,CAACI,YAAL,CAAkB;AAChBC,QAAAA,KAAK,EAAEF,IAAI,CAACD,IAAL,CAAUG,KADD;AAEhBC,QAAAA,QAAQ,EAAEJ,IAFM,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;;AATgB,OAAlB;AAWAH,MAAAA,OAAO,CAACQ,IAAR,CAAc,GAAd;AACD,KAzBD,CAyBE,OAAOC,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GA/BD,CAdmC,CA+CnC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEP,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAEE;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DE;AAiED","sourcesContent":["/** Login and Signup */\nimport React, { useContext } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\n// import Stepper from '@material-ui/core/Stepper';\n// import Step from '@material-ui/core/Step';\n// import StepLabel from '@material-ui/core/StepLabel';\n// import Typography from '@material-ui/core/Typography';\n// import { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\nimport { signup } from '../api/DogfriendsApi';\nimport UserInfoForm from './UserInfoForm';\nimport { useHistory } from 'react-router-dom';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'flex-start',\n//     width: '100%',\n//     minHeight: '100vh',\n//     maxWidth: '700px',\n//     padding: '2px',\n//     height: '100vh',\n//   },\n//   form: {\n//     width: '100%',\n//     backgroundColor: '#ffffff',\n//   },\n//   button: {\n//     display: 'flex',\n//     justifyContent: 'flex-end',\n//     margin: '10px 20px 15px',\n//   },\n//   err: {\n//     color: '#ff1744',\n//     fontSize: '24px',\n//   },\n//   backButton: {\n//     marginRight: theme.spacing(1),\n//   },\n//   completed: {\n//     display: 'inline-block',\n//   },\n\n// }));\n\n\nexport default function SignupForm() {\n  // const classes = useStyles();\n  const history = useHistory();\n  // const username = useFormInput();\n  // const password = useFormInput('password');\n  // const first_name = useFormInput();\n  // const last_name = useFormInput();  \n  // const photo_url = useFormInput();\n  // const email = useFormInput();\n  // const city = useFormInput();\n  // const state = useFormInput();\n  // const country = useFormInput();\n  const auth = useContext(AuthContext);\n\n  const handleSubmitSignup = async (data) => {\n    // setErrorMessage(false);\n    try {\n      // const data = {\n      //   username: username.value, \n      //   password: password.value, \n      //   first_name: first_name.value, \n      //   last_name: last_name.value, \n      //   email: email.value,\n      //   photo_url: photo_url.value,\n      //   city: city.value, \n      //   state: state.value, \n      //   country: country.value\n      // }\n      const resp = await signup(data);\n      auth.setAuthState({\n        token: resp.data.token,\n        userInfo: data\n        // {\n        //   username: dusername.value,\n        //   first_name: first_name.value,\n        //   last_name: last_name.value,\n        //   photo_url: photo_url.value,\n        //   email: email.value,\n        // }\n      });\n      history.push(`/`);\n    } catch (error) {\n      // setErrorMessage(true);\n      console.log(error)\n    }    \n  }\n  \n  // const [activeStep, setActiveStep] = useState(0);\n  // const steps = ['User Info', 'Contact', 'Confirm'];\n\n  // const handleNext = () => {\n  //   if(activeStep === 0) {\n  //     if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n  //       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //     }\n  //   } else if(activeStep === 1) {\n  //     if(email.value.length && city.value.length && state.value.length && country.value.length) {\n  //       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //     }\n  //   } else {\n  //     console.log('handleSubmitSignup() fired')\n  //     handleSubmitSignup();\n  //   }    \n  // };\n\n  // const handleBack = () => {\n  //   setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  // };\n\n  // const handleReset = () => {\n  //   setActiveStep(0);\n  // };\n  \n  return (\n    <UserInfoForm handleSubmit={handleSubmitSignup} />\n    // <>\n    /* <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {activeStep === 0 ?\n        <form className={classes.form}> \n          <FormInputOutlined name='usr_name' label='username' formInput={username}/>\n          <FormInputOutlined label='Password' formInput={password} />\n          <FormInputOutlined label='First Name' formInput={first_name} />\n          <FormInputOutlined label='Last Name' formInput={last_name} />\n          <FormInputOutlined label='Photo URL' formInput={photo_url} />              \n        </form> :\n        activeStep === 1 ?\n        <form className={classes.form}> \n          <FormInputOutlined label={'Email'} formInput={email} />\n          <FormInputOutlined label={'City'} formInput={city} />\n          <FormInputOutlined label={'State'} formInput={state} />\n          <FormInputOutlined label={'Country'} formInput={country} />        \n        </form> :\n        <>\n        <div>{username.value}</div>\n        <div>{first_name.value}</div>\n        <div>{last_name.value}</div>\n        <div>{email.value}</div>\n        <div>{city.value}</div>\n        <div>{state.value}</div>\n        <div>{country.value}</div>\n        </>\n      }      \n\n      <div>\n        {activeStep === steps.length ? \n          <div>\n            <Typography className={classes.instructions}>All steps completed</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n         : \n          <div>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  \n   </> */\n  );\n}\n"]},"metadata":{},"sourceType":"module"}