{"ast":null,"code":"const Compress = require('compress.js');\n\nconst compress = new Compress();\n\nconst ResizeImage = async ({\n  image,\n  width,\n  height\n}) => {\n  compress.compress([image], {\n    size: 4,\n    // the max size in MB, defaults to 2MB\n    quality: .75,\n    // the quality of the image, max is 1,\n    maxWidth: width,\n    // the max width of the output image, defaults to 1920px\n    maxHeight: height,\n    // the max height of the output image, defaults to 1920px\n    resize: true // defaults to true, set false if you do not want to resize the image width and height\n\n  }).then(data => {\n    // returns an array of compressed images\n    return data;\n  });\n};\n\n_c = ResizeImage;\nexport default ResizeImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResizeImage\");","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/ResizeImage.js"],"names":["Compress","require","compress","ResizeImage","image","width","height","size","quality","maxWidth","maxHeight","resize","then","data"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,EAAjB;;AAEA,MAAMG,WAAW,GAAG,OAAO;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAP,KAAkC;AACpDJ,EAAAA,QAAQ,CAACA,QAAT,CAAkB,CAACE,KAAD,CAAlB,EAA2B;AACzBG,IAAAA,IAAI,EAAE,CADmB;AAChB;AACTC,IAAAA,OAAO,EAAE,GAFgB;AAEX;AACdC,IAAAA,QAAQ,EAAEJ,KAHe;AAGR;AACjBK,IAAAA,SAAS,EAAEJ,MAJc;AAIN;AACnBK,IAAAA,MAAM,EAAE,IALiB,CAKX;;AALW,GAA3B,EAMGC,IANH,CAMSC,IAAD,IAAU;AAChB;AACA,WAAOA,IAAP;AACD,GATD;AAUD,CAXD;;KAAMV,W;AAaN,eAAeA,WAAf","sourcesContent":["const Compress = require('compress.js')\nconst compress = new Compress()\n\nconst ResizeImage = async ({image, width, height}) => {\n  compress.compress([image], {\n    size: 4, // the max size in MB, defaults to 2MB\n    quality: .75, // the quality of the image, max is 1,\n    maxWidth: width, // the max width of the output image, defaults to 1920px\n    maxHeight: height, // the max height of the output image, defaults to 1920px\n    resize: true, // defaults to true, set false if you do not want to resize the image width and height\n  }).then((data) => {\n    // returns an array of compressed images\n    return data\n  })\n}\n\nexport default ResizeImage;"]},"metadata":{},"sourceType":"module"}