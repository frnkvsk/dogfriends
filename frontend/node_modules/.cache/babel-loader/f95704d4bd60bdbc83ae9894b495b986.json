{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UserInfoForm.js\";\n\n/** Used in Profile and Signup */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\nimport { useFormInput } from '../hooks/useFormInput'; // import { AuthContext } from '../context/AuthContext';\n\nimport FormInputOutlined from './FormInputOutlined';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh'\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff'\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  }\n}));\nexport default function UserInfoForm({\n  handleSubmit,\n  formInfo\n}) {\n  const classes = useStyles(); // const history = useHistory();\n  // const username = useFormInput();\n  // const password = useFormInput('password');\n  // const first_name = useFormInput();\n  // const last_name = useFormInput();  \n  // const photo_url = useFormInput();\n  // const email = useFormInput();\n  // const city = useFormInput();\n  // const state = useFormInput();\n  // const country = useFormInput();\n  // const auth = useContext(AuthContext);\n\n  const handleSubmitLocal = () => {\n    // const data = {\n    //   username: username.value, \n    //   password: password.value, \n    //   first_name: first_name.value, \n    //   last_name: last_name.value, \n    //   email: email.value,\n    //   photo_url: photo_url.value,\n    //   city: city.value, \n    //   state: state.value, \n    //   country: country.value\n    // }\n    // handleSubmit(data);\n    handleSubmit();\n  };\n\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['User Info', 'Contact', 'Confirm'];\n\n  const handleNext = () => {\n    if (activeStep === 0) {\n      let e = formInfo[0];\n      console.log('e', e); // if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n\n      setActiveStep(prevActiveStep => prevActiveStep + 1); // }\n    } else if (activeStep === 1) {\n      // if(email.value.length && city.value.length && state.value.length && country.value.length) {\n      setActiveStep(prevActiveStep => prevActiveStep + 1); // }\n    } else {\n      console.log('handleSubmit() fired');\n      handleSubmitLocal();\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, label)))), activeStep === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(React.Fragment, null, formInfo[activeStep].map(e => /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: e.key,\n    formInput: e.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }))) // <form className={classes.form}> \n  //   <FormInputOutlined name='usr_name' label='username' formInput={username}/>\n  //   <FormInputOutlined label='Password' formInput={password} />\n  //   <FormInputOutlined label='First Name' formInput={first_name} />\n  //   <FormInputOutlined label='Last Name' formInput={last_name} />\n  //   <FormInputOutlined label='Photo URL' formInput={photo_url} />              \n  // </form> :\n  // activeStep === 1 ?\n  // <form className={classes.form}> \n  //   <FormInputOutlined label='Email' formInput={email} />\n  //   <FormInputOutlined label='City' formInput={city} />\n  //   <FormInputOutlined label='State' formInput={state} />\n  //   <FormInputOutlined label='Country' formInput={country} />        \n  // </form> :\n  , /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"All steps completed\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.backButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? 'Submit' : 'Next'))))));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UserInfoForm.js"],"names":["React","useState","makeStyles","Button","Stepper","Step","StepLabel","Typography","useFormInput","FormInputOutlined","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","minHeight","maxWidth","padding","height","form","backgroundColor","button","margin","err","color","fontSize","backButton","marginRight","spacing","completed","UserInfoForm","handleSubmit","formInfo","classes","handleSubmitLocal","activeStep","setActiveStep","steps","handleNext","e","console","log","prevActiveStep","handleBack","handleReset","map","label","key","value","length","instructions"],"mappings":"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","sourcesContent":["/** Used in Profile and Signup */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\nimport { useFormInput } from '../hooks/useFormInput';\n// import { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh',\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n\n}));\n\n\nexport default function UserInfoForm({handleSubmit, formInfo}) {\n  const classes = useStyles();\n  // const history = useHistory();\n  // const username = useFormInput();\n  // const password = useFormInput('password');\n  // const first_name = useFormInput();\n  // const last_name = useFormInput();  \n  // const photo_url = useFormInput();\n  // const email = useFormInput();\n  // const city = useFormInput();\n  // const state = useFormInput();\n  // const country = useFormInput();\n  // const auth = useContext(AuthContext);\n\n  const handleSubmitLocal = () => {\n    // const data = {\n    //   username: username.value, \n    //   password: password.value, \n    //   first_name: first_name.value, \n    //   last_name: last_name.value, \n    //   email: email.value,\n    //   photo_url: photo_url.value,\n    //   city: city.value, \n    //   state: state.value, \n    //   country: country.value\n    // }\n    // handleSubmit(data);\n    handleSubmit();\n  }\n    \n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['User Info', 'Contact', 'Confirm'];\n\n  const handleNext = () => {\n    if(activeStep === 0) {\n      let e = formInfo[0]\n      console.log('e',e)\n      // if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      // }\n    } else if(activeStep === 1) {\n      // if(email.value.length && city.value.length && state.value.length && country.value.length) {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      // }\n    } else {\n      console.log('handleSubmit() fired')\n      handleSubmitLocal();\n    }    \n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  \n  return (\n    <>\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {activeStep === 2 ?\n      <>\n      {/* <div>{username.value}</div>\n      <div>{first_name.value}</div>\n      <div>{last_name.value}</div>\n      <div>{email.value}</div>\n      <div>{city.value}</div>\n      <div>{state.value}</div>\n      <div>{country.value}</div> */}\n      </> \n      :\n      <>\n        {formInfo[activeStep].map(e => (\n          <FormInputOutlined label={e.key} formInput={e.value} />\n        ))}\n      </>\n        // <form className={classes.form}> \n        \n        //   <FormInputOutlined name='usr_name' label='username' formInput={username}/>\n        //   <FormInputOutlined label='Password' formInput={password} />\n        //   <FormInputOutlined label='First Name' formInput={first_name} />\n        //   <FormInputOutlined label='Last Name' formInput={last_name} />\n        //   <FormInputOutlined label='Photo URL' formInput={photo_url} />              \n        // </form> :\n        // activeStep === 1 ?\n        // <form className={classes.form}> \n        //   <FormInputOutlined label='Email' formInput={email} />\n        //   <FormInputOutlined label='City' formInput={city} />\n        //   <FormInputOutlined label='State' formInput={state} />\n        //   <FormInputOutlined label='Country' formInput={country} />        \n        // </form> :\n        \n      }      \n\n      <div>\n        {activeStep === steps.length ? \n          <div>\n            <Typography className={classes.instructions}>All steps completed</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n         : \n          <div>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  \n   </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}