{"ast":null,"code":"// /** Used in Profile and Signup */\n// import React, { useState } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\n// import { useFormInput } from '../hooks/useFormInput';\n// // import { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'flex-start',\n//     width: '100%',\n//     minHeight: '100vh',\n//     maxWidth: '700px',\n//     padding: '2px',\n//     height: '100vh',\n//   },\n//   form: {\n//     width: '100%',\n//     backgroundColor: '#ffffff',\n//   },\n//   button: {\n//     display: 'flex',\n//     justifyContent: 'flex-end',\n//     margin: '10px 20px 15px',\n//   },\n//   err: {\n//     color: '#ff1744',\n//     fontSize: '24px',\n//   },\n//   backButton: {\n//     marginRight: theme.spacing(1),\n//   },\n//   completed: {\n//     display: 'inline-block',\n//   },\n// }));\n// export default function UserInfoForm({handleSubmit, formInfo}) {\n//   const classes = useStyles();\n//   // const history = useHistory();\n//   // const username = useFormInput();\n//   // const password = useFormInput('password');\n//   // const first_name = useFormInput();\n//   // const last_name = useFormInput();  \n//   // const photo_url = useFormInput();\n//   // const email = useFormInput();\n//   // const city = useFormInput();\n//   // const state = useFormInput();\n//   // const country = useFormInput();\n//   // const auth = useContext(AuthContext);\n//   const handleSubmitLocal = () => {\n//     // const data = {\n//     //   username: username.value, \n//     //   password: password.value, \n//     //   first_name: first_name.value, \n//     //   last_name: last_name.value, \n//     //   email: email.value,\n//     //   photo_url: photo_url.value,\n//     //   city: city.value, \n//     //   state: state.value, \n//     //   country: country.value\n//     // }\n//     // handleSubmit(data);\n//     handleSubmit();\n//   }\n//   const [activeStep, setActiveStep] = useState(0);\n//   const steps = ['User Info', 'Contact', 'Confirm'];\n//   const handleNext = () => {\n//     if(activeStep === 0) {\n//       let e = formInfo[0]\n//       // if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n//         setActiveStep((prevActiveStep) => prevActiveStep + 1);\n//       // }\n//     } else if(activeStep === 1) {\n//       // if(email.value.length && city.value.length && state.value.length && country.value.length) {\n//         setActiveStep((prevActiveStep) => prevActiveStep + 1);\n//       // }\n//     } else {\n//       handleSubmitLocal();\n//     }    \n//   };\n//   const handleBack = () => {\n//     setActiveStep((prevActiveStep) => prevActiveStep - 1);\n//   };\n//   const handleReset = () => {\n//     setActiveStep(0);\n//   };\n//   return (\n//     <>\n//     <div className={classes.root}>\n//       <Stepper activeStep={activeStep}>\n//         {steps.map((label) => (\n//           <Step key={label}>\n//             <StepLabel>{label}</StepLabel>\n//           </Step>\n//         ))}\n//       </Stepper>\n//       {activeStep === 2 ?\n//       <>\n//       {/* <div>{username.value}</div>\n//       <div>{first_name.value}</div>\n//       <div>{last_name.value}</div>\n//       <div>{email.value}</div>\n//       <div>{city.value}</div>\n//       <div>{state.value}</div>\n//       <div>{country.value}</div> */}\n//       </> \n//       :\n//       <>\n//         {formInfo[activeStep].map(e => (\n//           <FormInputOutlined label={e.key} formInput={e.value} />\n//         ))}\n//       </>\n//         // <form className={classes.form}> \n//         //   <FormInputOutlined name='usr_name' label='username' formInput={username}/>\n//         //   <FormInputOutlined label='Password' formInput={password} />\n//         //   <FormInputOutlined label='First Name' formInput={first_name} />\n//         //   <FormInputOutlined label='Last Name' formInput={last_name} />\n//         //   <FormInputOutlined label='Photo URL' formInput={photo_url} />              \n//         // </form> :\n//         // activeStep === 1 ?\n//         // <form className={classes.form}> \n//         //   <FormInputOutlined label='Email' formInput={email} />\n//         //   <FormInputOutlined label='City' formInput={city} />\n//         //   <FormInputOutlined label='State' formInput={state} />\n//         //   <FormInputOutlined label='Country' formInput={country} />        \n//         // </form> :\n//       }      \n//       <div>\n//         {activeStep === steps.length ? \n//           <div>\n//             <Typography className={classes.instructions}>All steps completed</Typography>\n//             <Button onClick={handleReset}>Reset</Button>\n//           </div>\n//          : \n//           <div>\n//             <div>\n//               <Button\n//                 disabled={activeStep === 0}\n//                 onClick={handleBack}\n//                 className={classes.backButton}\n//               >\n//                 Back\n//               </Button>\n//               <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n//                 {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n//               </Button>\n//             </div>\n//           </div>\n//         }\n//       </div>\n//     </div>\n//    </>\n//   );\n// }","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UserInfoForm.js"],"names":[],"mappingssourcesContent":["// /** Used in Profile and Signup */\n// import React, { useState } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { Button, Stepper, Step, StepLabel, Typography } from '@material-ui/core';\n// import { useFormInput } from '../hooks/useFormInput';\n// // import { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'flex-start',\n//     width: '100%',\n//     minHeight: '100vh',\n//     maxWidth: '700px',\n//     padding: '2px',\n//     height: '100vh',\n//   },\n//   form: {\n//     width: '100%',\n//     backgroundColor: '#ffffff',\n//   },\n//   button: {\n//     display: 'flex',\n//     justifyContent: 'flex-end',\n//     margin: '10px 20px 15px',\n//   },\n//   err: {\n//     color: '#ff1744',\n//     fontSize: '24px',\n//   },\n//   backButton: {\n//     marginRight: theme.spacing(1),\n//   },\n//   completed: {\n//     display: 'inline-block',\n//   },\n\n// }));\n\n\n// export default function UserInfoForm({handleSubmit, formInfo}) {\n//   const classes = useStyles();\n//   // const history = useHistory();\n//   // const username = useFormInput();\n//   // const password = useFormInput('password');\n//   // const first_name = useFormInput();\n//   // const last_name = useFormInput();  \n//   // const photo_url = useFormInput();\n//   // const email = useFormInput();\n//   // const city = useFormInput();\n//   // const state = useFormInput();\n//   // const country = useFormInput();\n//   // const auth = useContext(AuthContext);\n\n//   const handleSubmitLocal = () => {\n//     // const data = {\n//     //   username: username.value, \n//     //   password: password.value, \n//     //   first_name: first_name.value, \n//     //   last_name: last_name.value, \n//     //   email: email.value,\n//     //   photo_url: photo_url.value,\n//     //   city: city.value, \n//     //   state: state.value, \n//     //   country: country.value\n//     // }\n//     // handleSubmit(data);\n//     handleSubmit();\n//   }\n    \n//   const [activeStep, setActiveStep] = useState(0);\n//   const steps = ['User Info', 'Contact', 'Confirm'];\n\n//   const handleNext = () => {\n//     if(activeStep === 0) {\n//       let e = formInfo[0]\n//       // if(username.value.length && password.value.length && first_name.value.length && last_name.value.length) {\n//         setActiveStep((prevActiveStep) => prevActiveStep + 1);\n//       // }\n//     } else if(activeStep === 1) {\n//       // if(email.value.length && city.value.length && state.value.length && country.value.length) {\n//         setActiveStep((prevActiveStep) => prevActiveStep + 1);\n//       // }\n//     } else {\n//       handleSubmitLocal();\n//     }    \n//   };\n\n//   const handleBack = () => {\n//     setActiveStep((prevActiveStep) => prevActiveStep - 1);\n//   };\n\n//   const handleReset = () => {\n//     setActiveStep(0);\n//   };\n  \n//   return (\n//     <>\n//     <div className={classes.root}>\n//       <Stepper activeStep={activeStep}>\n//         {steps.map((label) => (\n//           <Step key={label}>\n//             <StepLabel>{label}</StepLabel>\n//           </Step>\n//         ))}\n//       </Stepper>\n\n//       {activeStep === 2 ?\n//       <>\n//       {/* <div>{username.value}</div>\n//       <div>{first_name.value}</div>\n//       <div>{last_name.value}</div>\n//       <div>{email.value}</div>\n//       <div>{city.value}</div>\n//       <div>{state.value}</div>\n//       <div>{country.value}</div> */}\n//       </> \n//       :\n//       <>\n//         {formInfo[activeStep].map(e => (\n//           <FormInputOutlined label={e.key} formInput={e.value} />\n//         ))}\n//       </>\n//         // <form className={classes.form}> \n        \n//         //   <FormInputOutlined name='usr_name' label='username' formInput={username}/>\n//         //   <FormInputOutlined label='Password' formInput={password} />\n//         //   <FormInputOutlined label='First Name' formInput={first_name} />\n//         //   <FormInputOutlined label='Last Name' formInput={last_name} />\n//         //   <FormInputOutlined label='Photo URL' formInput={photo_url} />              \n//         // </form> :\n//         // activeStep === 1 ?\n//         // <form className={classes.form}> \n//         //   <FormInputOutlined label='Email' formInput={email} />\n//         //   <FormInputOutlined label='City' formInput={city} />\n//         //   <FormInputOutlined label='State' formInput={state} />\n//         //   <FormInputOutlined label='Country' formInput={country} />        \n//         // </form> :\n        \n//       }      \n\n//       <div>\n//         {activeStep === steps.length ? \n//           <div>\n//             <Typography className={classes.instructions}>All steps completed</Typography>\n//             <Button onClick={handleReset}>Reset</Button>\n//           </div>\n//          : \n//           <div>\n//             <div>\n//               <Button\n//                 disabled={activeStep === 0}\n//                 onClick={handleBack}\n//                 className={classes.backButton}\n//               >\n//                 Back\n//               </Button>\n//               <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n//                 {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n//               </Button>\n//             </div>\n//           </div>\n//         }\n//       </div>\n//     </div>\n  \n//    </>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}