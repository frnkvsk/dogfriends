{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js\";\nimport React, { useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, FormHelperText, TextField, Checkbox } from '@material-ui/core';\nimport { addNewPost, editPost } from '../dogfriendsPostsSlice';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nlet visibleFormInput = 'none';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0'\n  },\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px'\n  },\n  memeInput: {\n    display: visibleFormInput\n  } // paper: {\n  //   width: 400,\n  //   backgroundColor: theme.palette.background.paper,\n  //   border: '2px solid #000',\n  //   boxShadow: theme.shadows[5],\n  //   padding: theme.spacing(2, 4, 3),\n  // },\n\n}));\n\nconst NewPostForm = ({\n  data\n}) => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = e => {// e.preventDefault();\n    // if(title.length && description.length && body.length) {\n    //   const payload = {\n    //     id: id,\n    //     title: title, \n    //     description: description, \n    //     body: body,\n    //     username: auth.authState.userInfo.username,\n    //     token: token\n    //   }\n    //   dispatch(addNewPost(payload));    \n    //   history.push('/');\n    // } \n  };\n\n  const title = useFormInput('');\n  const photo_url = useFormInput('');\n  const top = useFormInput('');\n  const bottom = useFormInput('');\n  const body = useFormInput('');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Title\",\n    formInput: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Photo URL\",\n    formInput: photo_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    \"aria-label\": \"Add text to photo.\",\n    defaultChecked: true,\n    color: \"default\",\n    inputProps: {\n      'aria-label': 'checkbox with default color',\n      'aria-label': 'label'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.memeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Top Text\",\n    formInput: top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Bottom Text\",\n    formInput: bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Body:\"), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    className: classes.input,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 3\n  }, body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push('/'),\n    variant: \"contained\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default NewPostForm;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js"],"names":["React","useContext","useState","useDispatch","useHistory","makeStyles","Button","FormHelperText","TextField","Checkbox","addNewPost","editPost","useFormInput","AuthContext","FormInputOutlined","visibleFormInput","useStyles","theme","root","margin","spacing","form","display","flexDirection","width","input","backgroundColor","marginRight","memeInput","NewPostForm","data","classes","auth","dispatch","history","handleSubmit","e","title","photo_url","top","bottom","body","label","push"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Button, \n  FormHelperText, \n  TextField,\n  Checkbox,\n} from '@material-ui/core';\nimport { \n  addNewPost,\n  editPost,\n } from '../dogfriendsPostsSlice';\n import { useFormInput } from '../hooks/useFormInput';\n import { AuthContext } from '../context/AuthContext';\n import FormInputOutlined from './FormInputOutlined';\n\nlet visibleFormInput = 'none';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0',\n  },\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px',\n  },\n  memeInput: {\n    display: visibleFormInput,\n  },\n  // paper: {\n  //   width: 400,\n  //   backgroundColor: theme.palette.background.paper,\n  //   border: '2px solid #000',\n  //   boxShadow: theme.shadows[5],\n  //   padding: theme.spacing(2, 4, 3),\n  // },\n}));\n\nconst NewPostForm = ({data}) => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  \n\n  const handleSubmit = e => {   \n    // e.preventDefault();\n    // if(title.length && description.length && body.length) {\n    //   const payload = {\n    //     id: id,\n    //     title: title, \n    //     description: description, \n    //     body: body,\n    //     username: auth.authState.userInfo.username,\n    //     token: token\n    //   }\n    //   dispatch(addNewPost(payload));    \n    //   history.push('/');\n    // } \n  }\n  \n  const title = useFormInput('');\n  const photo_url = useFormInput('');\n  const top = useFormInput('');\n  const bottom = useFormInput('');\n  const body = useFormInput('');\n  return (\n    <>    \n      \n      <form className={classes.form} noValidate autoComplete=\"off\">   \n\n        <FormInputOutlined label=\"Title\" formInput={title} />\n        <FormInputOutlined label=\"Photo URL\" formInput={photo_url} />\n        <Checkbox\n          aria-label=\"Add text to photo.\"\n          defaultChecked\n          color=\"default\"\n          inputProps={{ 'aria-label': 'checkbox with default color', 'aria-label': 'label' }}\n        />\n        <div className={classes.memeInput}>\n          <FormInputOutlined label=\"Top Text\" formInput={top} />\n          <FormInputOutlined label=\"Bottom Text\" formInput={bottom} />\n        </div>\n        \n\n        <FormHelperText className={classes.label}>Body:</FormHelperText>\n        <TextField\n          className={classes.input} \n          variant=\"outlined\" \n          multiline\n          rows={3}\n          {...body}\n        />\n        <div className={classes.root}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\n            Save\n          </Button>\n          <Button onClick={() => history.push('/')} variant=\"contained\" color=\"default\" >\n            Cancel\n          </Button>\n        </div>      \n      </form>\n    </>\n  );\n}\n\nexport default NewPostForm;"]},"metadata":{},"sourceType":"module"}