{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/BlogComments.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCommentsDataById, addNewComment, removeComment, selectComments } from '../dogfriendsCommentsSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, OutlinedInput } from '@material-ui/core';\nimport { AuthContext } from '../context/AuthContext';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '0px' // border: '1px solid pink',\n\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0',\n    border: '1px solid red'\n  },\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px'\n  },\n  delete: {\n    color: 'red',\n    fontSize: '22px',\n    fontWeight: '700',\n    padding: '0 10px 0 5px',\n    cursor: 'pointer'\n  },\n  deleteWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '5px'\n  },\n  button: {\n    width: '60px',\n    marginTop: '10px'\n  }\n}));\n\nconst BlogComments = ({\n  id\n}) => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const commentList = useSelector(selectComments);\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    dispatch(getCommentsDataById(id));\n  }, [dispatch, id]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (comment.length) {\n      const payload = {\n        id: id,\n        comment: comment,\n        token: auth.authState.token\n      };\n      await dispatch(addNewComment(payload));\n      dispatch(getCommentsDataById(id));\n      setComment('');\n    }\n  };\n\n  const handleDelete = deleteId => {\n    dispatch(removeComment({\n      id: deleteId,\n      username: auth.authState.userInfo.username,\n      token: auth.authState.token\n    }));\n    setTimeout(() => {\n      dispatch(getCommentsDataById(id));\n    }, 100);\n  };\n\n  const handleChange = e => {\n    setComment(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, commentList.data.length ? commentList.data.map(e => /*#__PURE__*/React.createElement(\"div\", {\n    key: e.id,\n    className: classes.deleteWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.delete,\n    onClick: () => handleDelete(e.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"x\"), e.text)) : ''), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OutlinedInput, {\n    name: \"title\",\n    className: classes.input,\n    placeholder: \"New Comment\",\n    variant: \"outlined\",\n    autoFocus: true,\n    value: comment,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\n\nexport default BlogComments;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/BlogComments.js"],"names":["React","useContext","useEffect","useState","useSelector","useDispatch","getCommentsDataById","addNewComment","removeComment","selectComments","makeStyles","Button","OutlinedInput","AuthContext","useStyles","theme","root","margin","form","display","flexDirection","width","border","input","backgroundColor","marginRight","delete","color","fontSize","fontWeight","padding","cursor","deleteWrapper","alignItems","marginTop","button","BlogComments","id","classes","auth","dispatch","commentList","comment","setComment","handleSubmit","e","preventDefault","length","payload","token","authState","handleDelete","deleteId","username","userInfo","setTimeout","handleChange","target","value","data","map","text"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  getCommentsDataById,\n  addNewComment,\n  removeComment,\n  selectComments,\n } from '../dogfriendsCommentsSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, OutlinedInput } from '@material-ui/core';\nimport { AuthContext } from '../context/AuthContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '0px',\n    // border: '1px solid pink',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0',\n    border: '1px solid red',\n  },\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px',\n  },\n  delete: {\n    color: 'red',\n    fontSize: '22px',\n    fontWeight: '700',\n    padding: '0 10px 0 5px',\n    cursor: 'pointer',\n  },\n  deleteWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '5px',\n  },\n  button: {\n    width: '60px',\n    marginTop: '10px',\n  }\n}));\n\nconst BlogComments = ({id}) => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const commentList = useSelector(selectComments);\n  const [comment, setComment] = useState('');\n\n  useEffect(() => {    \n    dispatch(getCommentsDataById(id)); \n  }, [dispatch, id]);  \n\n  const handleSubmit = async e => {   \n    e.preventDefault();\n    if(comment.length) {\n      const payload = {\n        id: id,\n        comment: comment, \n        token: auth.authState.token\n      }\n      await dispatch(addNewComment(payload));\n      dispatch(getCommentsDataById(id)); \n      setComment('');      \n    } \n  }\n  \n  const handleDelete = deleteId => {\n    dispatch(removeComment({\n      id: deleteId, \n      username: auth.authState.userInfo.username,\n      token: auth.authState.token\n    }));\n    setTimeout(() => {\n      dispatch(getCommentsDataById(id)); \n    }, 100);\n  }\n\n  const handleChange = e => {\n    setComment(e.target.value);\n  }\n\n  return (\n    <>\n      <div className={classes.root}>\n        {commentList.data.length ? commentList.data.map(e => (\n          <div key={e.id} className={classes.deleteWrapper}>\n            <div className={classes.delete} onClick={() => handleDelete(e.id)}>x</div>{e.text}</div>\n        )) : ''}\n      </div>\n      <form className={classes.form} noValidate autoComplete=\"off\">              \n        <OutlinedInput \n          name=\"title\"\n          className={classes.input} \n          placeholder=\"New Comment\"\n          variant=\"outlined\" \n          autoFocus\n          value={comment}          \n          onChange={handleChange}\n        />        \n        <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\n            Add\n        </Button>      \n      </form>\n    </>    \n  );\n}\n\nexport default BlogComments;"]},"metadata":{},"sourceType":"module"}