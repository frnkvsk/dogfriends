{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { login, getUserInfo, patchUserInfo, signup } from './api/DogfriendsApi';\nexport const loginSlice = createAsyncThunk('login', async payload => {\n  // console.log('dogfriendsUserSlice payload',payload)\n  const response = await login({\n    username: payload.username,\n    password: payload.password\n  });\n  return response.data;\n});\nexport const signUpSlice = createAsyncThunk('signup', async payload => {\n  // console.log('dogfriendsUserSlice payload',payload)\n  const response = await signup({\n    username: payload.username,\n    password: payload.password,\n    first_name: payload.first_name,\n    last_name: payload.last_name,\n    email: payload.email,\n    photo_id: payload.photo_id,\n    city: payload.city,\n    state: payload.state,\n    country: payload.country\n  });\n  return response.data;\n});\nexport const getUserInfoSlice = createAsyncThunk('getUserInfo', async payload => {\n  console.log('dogfriendsUserSlice getUserInfoSlice payload', payload);\n  const response = await getUserInfo(payload);\n  console.log('dogfriendsUserSlice getUserInfoSlice response', response);\n  return response.data;\n});\nexport const updateUserInfoSlice = createAsyncThunk('patchUserInfo', async payload => {\n  console.log('updateUserInfoSlice payload', payload);\n  const response = await patchUserInfo(payload);\n  return response.data;\n});\nexport const dogfriendsUserSlice = createSlice({\n  name: 'userList',\n  initialState: {\n    userList: {\n      status: 'idle',\n      data: {},\n      error: {}\n    }\n  },\n  reducers: {\n    logout: (state, action) => {\n      state.userList = action.payload;\n    },\n    setUserList: (state, action) => {\n      state.userList = action.payload;\n    }\n  },\n  extraReducers: {\n    // login\n    [login.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [login.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [login.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    },\n    // signup\n    [signup.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [signup.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [signup.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    },\n    // get user info\n    [getUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    },\n    // patch/update user info\n    [updateUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [updateUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [updateUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    }\n  }\n});\nexport const {\n  logout,\n  setUserList\n} = dogfriendsUserSlice.actions;\nexport const selectUser = state => state.userList.userList;\nexport default dogfriendsUserSlice.reducer;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/dogfriendsUserSlice.js"],"names":["createAsyncThunk","createSlice","login","getUserInfo","patchUserInfo","signup","loginSlice","payload","response","username","password","data","signUpSlice","first_name","last_name","email","photo_id","city","state","country","getUserInfoSlice","console","log","updateUserInfoSlice","dogfriendsUserSlice","name","initialState","userList","status","error","reducers","logout","action","setUserList","extraReducers","pending","fulfilled","rejected","actions","selectUser","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,MAJF,QAKO,qBALP;AAQA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,OADwC,EAExC,MAAOO,OAAP,IAAmB;AACjB;AACA,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAC;AAC3BO,IAAAA,QAAQ,EAAEF,OAAO,CAACE,QADS;AAE3BC,IAAAA,QAAQ,EAAEH,OAAO,CAACG;AAFS,GAAD,CAA5B;AAIA,SAAOF,QAAQ,CAACG,IAAhB;AACD,CATuC,CAAnC;AAYP,OAAO,MAAMC,WAAW,GAAGZ,gBAAgB,CACzC,QADyC,EAEzC,MAAOO,OAAP,IAAmB;AACjB;AACA,QAAMC,QAAQ,GAAG,MAAMH,MAAM,CAAC;AAC5BI,IAAAA,QAAQ,EAAEF,OAAO,CAACE,QADU;AAE5BC,IAAAA,QAAQ,EAAEH,OAAO,CAACG,QAFU;AAG5BG,IAAAA,UAAU,EAAEN,OAAO,CAACM,UAHQ;AAI5BC,IAAAA,SAAS,EAAEP,OAAO,CAACO,SAJS;AAK5BC,IAAAA,KAAK,EAAER,OAAO,CAACQ,KALa;AAM5BC,IAAAA,QAAQ,EAAET,OAAO,CAACS,QANU;AAO5BC,IAAAA,IAAI,EAAEV,OAAO,CAACU,IAPc;AAQ5BC,IAAAA,KAAK,EAAEX,OAAO,CAACW,KARa;AAS5BC,IAAAA,OAAO,EAAEZ,OAAO,CAACY;AATW,GAAD,CAA7B;AAWA,SAAOX,QAAQ,CAACG,IAAhB;AACD,CAhBwC,CAApC;AAmBP,OAAO,MAAMS,gBAAgB,GAAGpB,gBAAgB,CAC9C,aAD8C,EAE9C,MAAOO,OAAP,IAAmB;AACjBc,EAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAA2Df,OAA3D;AACA,QAAMC,QAAQ,GAAG,MAAML,WAAW,CAACI,OAAD,CAAlC;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA4Dd,QAA5D;AACA,SAAOA,QAAQ,CAACG,IAAhB;AACD,CAP6C,CAAzC;AAUP,OAAO,MAAMY,mBAAmB,GAAGvB,gBAAgB,CACjD,eADiD,EAEjD,MAAOO,OAAP,IAAmB;AACjBc,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0Cf,OAA1C;AACA,QAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACG,OAAD,CAApC;AACA,SAAOC,QAAQ,CAACG,IAAhB;AACD,CANgD,CAA5C;AASP,OAAO,MAAMa,mBAAmB,GAAGvB,WAAW,CAAC;AAC7CwB,EAAAA,IAAI,EAAE,UADuC;AAE7CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,MADA;AAERjB,MAAAA,IAAI,EAAE,EAFE;AAGRkB,MAAAA,KAAK,EAAE;AAHC;AADE,GAF+B;AAS7CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACb,KAAD,EAAQc,MAAR,KAAmB;AACzBd,MAAAA,KAAK,CAACS,QAAN,GAAiBK,MAAM,CAACzB,OAAxB;AACD,KAHO;AAIR0B,IAAAA,WAAW,EAAE,CAACf,KAAD,EAAQc,MAAR,KAAmB;AAC9Bd,MAAAA,KAAK,CAACS,QAAN,GAAiBK,MAAM,CAACzB,OAAxB;AACD;AANO,GATmC;AAiB7C2B,EAAAA,aAAa,EAAE;AACb;AACA,KAAChC,KAAK,CAACiC,OAAP,GAAiB,CAACjB,KAAD,EAAQc,MAAR,KAAmB;AAClCd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,SADO;AAEfjB,QAAAA,IAAI,EAAE,EAFS;AAGfkB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KARY;AASb,KAAC3B,KAAK,CAACkC,SAAP,GAAmB,CAAClB,KAAD,EAAQc,MAAR,KAAmB;AACpCd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,WADO;AAEfjB,QAAAA,IAAI,EAAEqB,MAAM,CAACzB,OAFE;AAGfsB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KAfY;AAgBb,KAAC3B,KAAK,CAACmC,QAAP,GAAkB,CAACnB,KAAD,EAAQc,MAAR,KAAmB;AACnCd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,UADO;AAEfjB,QAAAA,IAAI,EAAE,EAFS;AAGfkB,QAAAA,KAAK,EAAEG,MAAM,CAACzB;AAHC,OAAjB;AAKD,KAtBY;AAuBb;AACA,KAACF,MAAM,CAAC8B,OAAR,GAAkB,CAACjB,KAAD,EAAQc,MAAR,KAAmB;AACnCd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,SADO;AAEfjB,QAAAA,IAAI,EAAE,EAFS;AAGfkB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KA9BY;AA+Bb,KAACxB,MAAM,CAAC+B,SAAR,GAAoB,CAAClB,KAAD,EAAQc,MAAR,KAAmB;AACrCd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,WADO;AAEfjB,QAAAA,IAAI,EAAEqB,MAAM,CAACzB,OAFE;AAGfsB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KArCY;AAsCb,KAACxB,MAAM,CAACgC,QAAR,GAAmB,CAACnB,KAAD,EAAQc,MAAR,KAAmB;AACpCd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,UADO;AAEfjB,QAAAA,IAAI,EAAE,EAFS;AAGfkB,QAAAA,KAAK,EAAEG,MAAM,CAACzB;AAHC,OAAjB;AAKD,KA5CY;AA6Cb;AACA,KAACa,gBAAgB,CAACe,OAAlB,GAA4B,CAACjB,KAAD,EAAQc,MAAR,KAAmB;AAC7Cd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,SADO;AAEfjB,QAAAA,IAAI,EAAE,EAFS;AAGfkB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KApDY;AAqDb,KAACT,gBAAgB,CAACgB,SAAlB,GAA8B,CAAClB,KAAD,EAAQc,MAAR,KAAmB;AAC/Cd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,WADO;AAEfjB,QAAAA,IAAI,EAAEqB,MAAM,CAACzB,OAFE;AAGfsB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KA3DY;AA4Db,KAACT,gBAAgB,CAACiB,QAAlB,GAA6B,CAACnB,KAAD,EAAQc,MAAR,KAAmB;AAC9Cd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,UADO;AAEfjB,QAAAA,IAAI,EAAE,EAFS;AAGfkB,QAAAA,KAAK,EAAEG,MAAM,CAACzB;AAHC,OAAjB;AAKD,KAlEY;AAmEb;AACA,KAACgB,mBAAmB,CAACY,OAArB,GAA+B,CAACjB,KAAD,EAAQc,MAAR,KAAmB;AAChDd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,SADO;AAEfjB,QAAAA,IAAI,EAAE,EAFS;AAGfkB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KA1EY;AA2Eb,KAACN,mBAAmB,CAACa,SAArB,GAAiC,CAAClB,KAAD,EAAQc,MAAR,KAAmB;AAClDd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,WADO;AAEfjB,QAAAA,IAAI,EAAEqB,MAAM,CAACzB,OAFE;AAGfsB,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KAjFY;AAkFb,KAACN,mBAAmB,CAACc,QAArB,GAAgC,CAACnB,KAAD,EAAQc,MAAR,KAAmB;AACjDd,MAAAA,KAAK,CAACS,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,UADO;AAEfjB,QAAAA,IAAI,EAAE,EAFS;AAGfkB,QAAAA,KAAK,EAAEG,MAAM,CAACzB;AAHC,OAAjB;AAKD;AAxFY;AAjB8B,CAAD,CAAvC;AA6GP,OAAO,MAAM;AACXwB,EAAAA,MADW;AAEXE,EAAAA;AAFW,IAGTT,mBAAmB,CAACc,OAHjB;AAKP,OAAO,MAAMC,UAAU,GAAGrB,KAAK,IAAIA,KAAK,CAACS,QAAN,CAAeA,QAA3C;AAEP,eAAeH,mBAAmB,CAACgB,OAAnC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  login,\n  getUserInfo,\n  patchUserInfo,\n  signup,\n} from './api/DogfriendsApi';\n\n\nexport const loginSlice = createAsyncThunk(\n  'login',\n  async (payload) => {\n    // console.log('dogfriendsUserSlice payload',payload)\n    const response = await login({\n      username: payload.username,\n      password: payload.password\n    });\n    return response.data;\n  }\n);\n\nexport const signUpSlice = createAsyncThunk(\n  'signup',\n  async (payload) => {\n    // console.log('dogfriendsUserSlice payload',payload)\n    const response = await signup({\n      username: payload.username, \n      password: payload.password, \n      first_name: payload.first_name, \n      last_name: payload.last_name, \n      email: payload.email, \n      photo_id: payload.photo_id, \n      city: payload.city, \n      state: payload.state, \n      country: payload.country\n    });\n    return response.data;\n  }\n);\n\nexport const getUserInfoSlice = createAsyncThunk(\n  'getUserInfo',\n  async (payload) => {\n    console.log('dogfriendsUserSlice getUserInfoSlice payload',payload)\n    const response = await getUserInfo(payload);\n    console.log('dogfriendsUserSlice getUserInfoSlice response',response)\n    return response.data;\n  }\n);\n\nexport const updateUserInfoSlice = createAsyncThunk(\n  'patchUserInfo',\n  async (payload) => {\n    console.log('updateUserInfoSlice payload',payload)\n    const response = await patchUserInfo(payload);\n    return response.data;\n  }\n);\n\nexport const dogfriendsUserSlice = createSlice({\n  name: 'userList',\n  initialState: {\n    userList: {\n      status: 'idle',\n      data: {},\n      error: {}\n    }\n  },\n  reducers: {\n    logout: (state, action) => {\n      state.userList = action.payload;\n    },\n    setUserList: (state, action) => {\n      state.userList = action.payload;\n    },\n  },\n  extraReducers: {\n    // login\n    [login.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [login.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [login.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n    // signup\n    [signup.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [signup.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [signup.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n    // get user info\n    [getUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n    // patch/update user info\n    [updateUserInfoSlice.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [updateUserInfoSlice.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [updateUserInfoSlice.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n  }\n});\n\nexport const {\n  logout,\n  setUserList\n} = dogfriendsUserSlice.actions;\n\nexport const selectUser = state => state.userList.userList;\n\nexport default dogfriendsUserSlice.reducer;"]},"metadata":{},"sourceType":"module"}