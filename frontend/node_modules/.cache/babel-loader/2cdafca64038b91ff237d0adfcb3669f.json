{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js\";\n\n/** Login and Signup */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button } from '@material-ui/core';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nimport { loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh'\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff'\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  }\n}));\nexport default function LoginForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const username = useFormInput('usr');\n  const password = useFormInput('pw', '', 'password');\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(false); // const [usernameValue, setUsernameValue] = useState('username'); \n  // const [formState, setFormState] = useState(\"userInfo\"); \n  // const handleChange = (e, newValue) => {\n  //   setValue(newValue);\n  // }\n\n  useEffect(() => {\n    setErrorMessage(false);\n  }, [username.value, password.value]);\n\n  const handleSubmitLogin = async () => {\n    setErrorMessage(false);\n\n    try {\n      // verify username and password are correct\n      // const resp = await login(username.value, password.value);\n      const resp = await dispatch(loginSlice({\n        username: username.value,\n        password: password.value\n      })); // if logged in, use resp.token to get user information\n\n      const userInfo = await dispatch(getUserInfoSlice({\n        token: resp.data.token,\n        username: username.value\n      }));\n      console.log('LoginForm handleSubmitLogin userInfo', userInfo.data.user);\n      auth.setAuthState({\n        userInfo: userInfo.data.user,\n        token: resp.data.token\n      });\n      history.push(`/`);\n    } catch (error) {\n      setErrorMessage(true);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, console.log(errorMessage), /*#__PURE__*/React.createElement(Box, {\n    className: classes.err,\n    component: \"span\",\n    display: errorMessage ? 'block' : 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }\n  }, \"Error: Invalid credentials\"), /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Username\",\n    formInput: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Password\",\n    formInput: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmitLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js"],"names":["React","useContext","useEffect","useState","makeStyles","Box","Button","useFormInput","AuthContext","FormInputOutlined","loginSlice","getUserInfoSlice","useHistory","useDispatch","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","minHeight","maxWidth","padding","height","form","backgroundColor","button","margin","err","color","fontSize","backButton","marginRight","spacing","completed","LoginForm","classes","history","username","password","auth","dispatch","errorMessage","setErrorMessage","value","handleSubmitLogin","resp","userInfo","token","data","console","log","user","setAuthState","push","error"],"mappings":"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","sourcesContent":["/** Login and Signup */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button } from '@material-ui/core';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nimport { loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh',\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n\n}));\n\n\nexport default function LoginForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const username = useFormInput('usr');\n  const password = useFormInput('pw', '', 'password');\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(false);\n  // const [usernameValue, setUsernameValue] = useState('username'); \n  // const [formState, setFormState] = useState(\"userInfo\"); \n\n  // const handleChange = (e, newValue) => {\n  //   setValue(newValue);\n  // }\n  useEffect(() => {\n    setErrorMessage(false);\n  }, [username.value, password.value])\n\n  const handleSubmitLogin = async () => {\n    setErrorMessage(false);\n    try {\n      // verify username and password are correct\n      // const resp = await login(username.value, password.value);\n      const resp = await dispatch(loginSlice({\n        username: username.value,\n        password: password.value\n      }))\n      // if logged in, use resp.token to get user information\n      const userInfo = await dispatch(getUserInfoSlice({token: resp.data.token, username: username.value}));\n\n      console.log('LoginForm handleSubmitLogin userInfo',userInfo.data.user)\n\n      auth.setAuthState({\n        userInfo: userInfo.data.user,\n        token: resp.data.token,\n      });\n      history.push(`/`);\n    } catch (error) {\n      setErrorMessage(true);\n      console.log(error)\n    }     \n  }\n  \n  return (\n    <form className={classes.form}>\n      {console.log(errorMessage)}\n       <Box className={classes.err} \n        component=\"span\" \n        display={errorMessage ? 'block' : 'none'}\n        >\n          Error: Invalid credentials\n      </Box>\n      <FormInputOutlined label='Username' formInput={username}/>\n      <FormInputOutlined label='Password' formInput={password} />\n      <div className={classes.button}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmitLogin}>Submit</Button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}