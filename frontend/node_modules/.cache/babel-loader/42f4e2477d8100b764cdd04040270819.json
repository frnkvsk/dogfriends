{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, FormHelperText, TextField, Checkbox, FormControlLabel, Box } from '@material-ui/core';\nimport { addNewPost, editPost } from '../dogfriendsPostsSlice';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nimport PostPhoto from './PostPhoto';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    border: '1px solid red'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0'\n  },\n  buttons: {},\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px'\n  },\n  memeInput: {// display: formInputState,\n  },\n  imagePreview: {\n    width: 'auto',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  image: {\n    width: '400px',\n    height: '400px',\n    borderRadius: '10px',\n    padding: '10px'\n  }\n}));\n\nconst NewPostForm = ({\n  data\n}) => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = e => {// e.preventDefault();\n    // if(title.length && description.length && body.length) {\n    //   const payload = {\n    //     id: id,\n    //     title: title, \n    //     description: description, \n    //     body: body,\n    //     username: auth.authState.userInfo.username,\n    //     token: token\n    //   }\n    //   dispatch(addNewPost(payload));    \n    //   history.push('/');\n    // } \n  };\n\n  const title = useFormInput('');\n  const photo_url = useFormInput('');\n  const top = useFormInput('');\n  const bottom = useFormInput('');\n  const body = useFormInput('');\n  const [formInputState, setFormInputState] = useState('none');\n  const [photoShowState, setPhotoShowState] = useState('none');\n  const photo = {\n    url: '',\n    top: '',\n    bottom: ''\n  };\n  useEffect(() => {\n    console.log('useEffect photoShowState', photoShowState);\n\n    if (photo_url.value !== '') {\n      setPhotoShowState('flex');\n      photo = {\n        url: photo_url.value,\n        top: top.value,\n        bottom: bottom.value\n      };\n    } else {\n      setPhotoShowState('none');\n      photo = {\n        url: '',\n        top: '',\n        bottom: ''\n      };\n    }\n  }, [photo_url.value]);\n\n  const handleCheckBox = () => {\n    if (formInputState === 'none') setFormInputState('inline');else setFormInputState('none');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.imagePreview,\n    style: {\n      display: photoShowState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PostPhoto, {\n    photo: photo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Title\",\n    formInput: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Photo URL\",\n    formInput: photo_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      onChange: handleCheckBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 20\n      }\n    }),\n    label: \"Add text to photo.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: formInputState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Top Text\",\n    formInput: top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Bottom Text\",\n    formInput: bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    rows: 4,\n    label: \"Body\",\n    variant: \"outlined\",\n    formInput: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push('/'),\n    variant: \"contained\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default NewPostForm;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js"],"names":["React","useContext","useEffect","useState","useDispatch","useHistory","makeStyles","Button","FormHelperText","TextField","Checkbox","FormControlLabel","Box","addNewPost","editPost","useFormInput","AuthContext","FormInputOutlined","PostPhoto","useStyles","theme","root","display","width","border","form","flexDirection","margin","buttons","input","backgroundColor","marginRight","memeInput","imagePreview","alignItems","justifyContent","image","height","borderRadius","padding","NewPostForm","data","classes","auth","dispatch","history","handleSubmit","e","title","photo_url","top","bottom","body","formInputState","setFormInputState","photoShowState","setPhotoShowState","photo","url","console","log","value","handleCheckBox","push"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Button, \n  FormHelperText, \n  TextField,\n  Checkbox,\n  FormControlLabel,\n  Box,\n} from '@material-ui/core';\nimport { \n  addNewPost,\n  editPost,\n } from '../dogfriendsPostsSlice';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nimport PostPhoto from './PostPhoto';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    border: '1px solid red',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0',\n  },\n  buttons: {\n\n  },\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px',\n  },\n  memeInput: {\n    // display: formInputState,\n  },\n  imagePreview: {\n    width: 'auto',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  image: {\n    width: '400px',\n    height: '400px',\n    borderRadius: '10px',\n    padding: '10px',\n  }\n}));\n\nconst NewPostForm = ({data}) => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  \n\n  const handleSubmit = e => {   \n    // e.preventDefault();\n    // if(title.length && description.length && body.length) {\n    //   const payload = {\n    //     id: id,\n    //     title: title, \n    //     description: description, \n    //     body: body,\n    //     username: auth.authState.userInfo.username,\n    //     token: token\n    //   }\n    //   dispatch(addNewPost(payload));    \n    //   history.push('/');\n    // } \n  }\n  \n  const title = useFormInput('');\n  const photo_url = useFormInput('');\n  const top = useFormInput('');\n  const bottom = useFormInput('');\n  const body = useFormInput('');\n  const [formInputState, setFormInputState] = useState('none');\n  const [photoShowState, setPhotoShowState] = useState('none');\n  const photo = {\n    url: '',\n    top: '',\n    bottom: ''\n  }\n  useEffect(() => {\n    console.log('useEffect photoShowState',photoShowState)\n    if(photo_url.value !== '') {\n      setPhotoShowState('flex');\n      photo = {\n        url: photo_url.value,\n        top: top.value,\n        bottom: bottom.value\n      };\n    } else {\n      setPhotoShowState('none');\n      photo = {\n        url: '',\n        top: '',\n        bottom: ''\n      };\n    }\n  }, [photo_url.value]);\n\n  const handleCheckBox = () => {\n    if(formInputState === 'none') setFormInputState('inline')\n    else setFormInputState('none')\n  }\n  return (\n    <div className={classes.root}>    \n      <Box className={classes.imagePreview} style={{display: photoShowState}}>\n        <PostPhoto photo={photo}/>\n        {/* <div className={classes.labelTop}>\n          <label style={{color: meme.textColor}}>{meme.top}</label>\n        </div>\n        <img className={classes.image} src={photo_url.value} alt='Post Photo' /> \n        <div className={classes.labelBottom}>\n          <label style={{color: meme.textColor}}>{meme.bottom}</label>\n        </div>  */}\n      </Box>\n      <form className={classes.form} noValidate autoComplete=\"off\">   \n\n        <FormInputOutlined label=\"Title\" formInput={title} />\n        <FormInputOutlined label=\"Photo URL\" formInput={photo_url} />\n        <FormControlLabel\n          control={<Checkbox onChange={handleCheckBox} />}\n          label=\"Add text to photo.\"\n      />\n        <div style={{display: formInputState}}>\n          <FormInputOutlined label=\"Top Text\" formInput={top} />\n          <FormInputOutlined label=\"Bottom Text\" formInput={bottom} />\n        </div>\n        \n        <TextField \n          multiline\n          rows={4} \n          label=\"Body\" \n          variant=\"outlined\" \n          formInput={body} />\n        {/* <FormHelperText className={classes.label}>Body:</FormHelperText> */}\n        {/* <FormControlLabel\n          control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n          label=\"Add text to photo\"\n        /> */}\n        <div className={classes.buttons}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\n            Save\n          </Button>\n          <Button onClick={() => history.push('/')} variant=\"contained\" color=\"default\" >\n            Cancel\n          </Button>\n        </div>      \n      </form>\n    </div>\n  );\n}\n\nexport default NewPostForm;"]},"metadata":{},"sourceType":"module"}