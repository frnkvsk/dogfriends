{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\n/** Login and Signup */\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // import { useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, TextField } from '@material-ui/core'; // import { useFormInput } from '../hooks/useFormInput';\n// import { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\n// import { loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    // maxWidth: '700px', \n    paddingTop: '20px'\n  },\n  formElement: {\n    width: '95%',\n    margin: '10px' // marginTop: '20px',\n    // marginBottom: '20px',\n\n  },\n  button: {// display: 'flex',\n    // width: '100%',\n    // margin: '10px',\n    // marginLeft: '40px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  },\n  completed: {\n    display: 'inline-block'\n  }\n}));\nexport default function LoginForm({\n  handleLogin\n}) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); // const auth = useContext(AuthContext);\n  // const dispatch = useDispatch();\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  useEffect(() => {\n    setErrorMessage(false);\n  }, [username, password]);\n\n  const handleSubmitLogin = async e => {\n    e.preventDefault();\n    console.log('LoginForm handleSubmitForm ', username, password);\n    const valid = handleLogin({\n      username,\n      password\n    });\n    setErrorMessage(valid);\n    if (valid) history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmitLogin,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.err,\n      component: \"span\",\n      display: errorMessage ? 'block' : 'none',\n      children: \"Error: Invalid credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.formElement,\n      label: \"Username: (required)\",\n      variant: \"outlined\",\n      value: username,\n      autoFocus: true,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.formElement,\n      type: \"password\",\n      label: \"Password: (required)\",\n      variant: \"outlined\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formElement,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"/ykYufa8SeO0HD7TqhhOVgoLxIs=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js"],"names":["React","useEffect","useState","useHistory","makeStyles","Box","Button","TextField","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","paddingTop","formElement","margin","button","err","color","fontSize","completed","LoginForm","handleLogin","classes","history","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleSubmitLogin","e","preventDefault","console","log","valid","push","target","value"],"mappings":"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","sourcesContent":["/** Login and Signup */\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// import { useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Box, \n  Button, \n  TextField, \n   } from '@material-ui/core';\n\n// import { useFormInput } from '../hooks/useFormInput';\n// import { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\n// import { loginSlice, getUserInfoSlice } from '../dogfriendsUserSlice';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  \n    // maxWidth: '700px', \n    paddingTop: '20px',\n    \n  },\n  formElement: {\n    width: '95%',\n    margin: '10px',\n    // marginTop: '20px',\n    // marginBottom: '20px',\n  },\n  button: {\n    // display: 'flex',\n    // width: '100%',\n    // margin: '10px',\n    // marginLeft: '40px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },  \n  completed: {\n    display: 'inline-block',\n  },\n\n}));\n\n\nexport default function LoginForm({handleLogin}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // const auth = useContext(AuthContext);\n  // const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(false);\n  \n  useEffect(() => {\n    setErrorMessage(false);\n  }, [username, password])\n\n  const handleSubmitLogin = async (e) => {\n    e.preventDefault();\n    console.log('LoginForm handleSubmitForm ',username,password)\n    const valid = handleLogin({username, password});\n    setErrorMessage(valid);\n    if(valid) history.push('/'); \n  }\n  \n  return (\n    <form className={classes.root} onSubmit={handleSubmitLogin}>\n      {/* {console.log(errorMessage)} */}\n       <Box className={classes.err} \n        component=\"span\" \n        display={errorMessage ? 'block' : 'none'}\n        >\n          Error: Invalid credentials\n      </Box>\n      <TextField \n        className={classes.formElement} \n        label='Username: (required)' \n        variant='outlined' \n        value={username} \n        autoFocus={true}\n        onChange={e => setUsername(e.target.value)}/>\n      <TextField \n        className={classes.formElement} \n        type='password'\n        label='Password: (required)' \n        variant='outlined' \n        value={password} \n        onChange={e => setPassword(e.target.value)}/>\n      <div className={classes.formElement}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}