{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField // Checkbox,\n// FormControlLabel,\n, Box } from '@material-ui/core';\nimport { addNewPost } from '../dogfriendsPostsSlice'; // import { useFormInput } from '../hooks/useFormInput';\n\nimport { AuthContext } from '../context/AuthContext'; // import FormInputOutlined from './FormInputOutlined';\n\nimport PostPhoto from './PostPhoto'; // import NewPhotoForm from './NewPhotoForm';\n\nimport UploadPhoto from './UploadPhoto';\nimport { v4 as uuid } from 'uuid';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    border: '1px solid red'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0'\n  },\n  buttons: {},\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px'\n  },\n  memeInput: {// display: formInputState,\n  },\n  imagePreview: {\n    width: 'auto',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  image: {\n    width: '400px',\n    height: '400px',\n    borderRadius: '10px',\n    padding: '10px'\n  }\n}));\n\nconst NewPostForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const history = useHistory(); // console.log('NewPostForm auth',auth)\n\n  const [title, setTitle] = useState('');\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState(''); // const [body, setBody] = useState('');\n  // const [color, setColor] = useState('');\n\n  const [titleValid, setTitleValid] = useState('');\n  const [topTextValid, setTopTextValid] = useState('');\n  const [bottomTextValid, setBottomTextValid] = useState(''); // const [bodyValid, setBodyValid] = useState('');\n  // const [colorValid, setColorValid] = useState(true);\n  // validate title\n\n  useEffect(() => {\n    if (title.length > 30) {\n      setTitleValid('Title must be betwen 1 and 30 characters in length.');\n    } else {\n      setTitleValid('');\n    }\n  }, [title]); // validate topText\n\n  useEffect(() => {\n    if (topText.length > 30) {\n      setTopTextValid('Top text must be betwen 1 and 30 characters in length.');\n    } else {\n      setTopTextValid('');\n    }\n  }, [topText]); // validate bottomText\n\n  useEffect(() => {\n    if (bottomText.length > 30) {\n      setBottomTextValid('Bottom text must be betwen 1 and 30 characters in length.');\n    } else {\n      setBottomTextValid('');\n    }\n  }, [bottomText]); // validate body\n  // useEffect(() => {\n  //   if([...body].filter(e => e!==' ').length > 200) {\n  //     setBodyValid('Body text must be betwen 1 and 200 characters in length.');\n  //   } else {\n  //     setBodyValid('');\n  //   }\n  // }, [body]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // if(title.length && description.length && body.length) {\n    //   const payload = {\n    //     id: 'id',\n    //     title: title, \n    //     description: 'description', \n    //     body: body,\n    //     username: auth.authState.userInfo.username,\n    //     token: auth.authState.token\n    //   }\n    //   dispatch(addNewPost(payload));    \n    //   history.push('/');\n    // } \n\n    const payload = {\n      parent_id: uuid(),\n      photo_id: uuid(),\n      title: title,\n      // description: 'description', \n      // body: uuid(),\n      // username: auth.authState.userInfo.username,\n      token: auth.authState.token\n    };\n    dispatch(addNewPost(payload));\n  }; // const title = useFormInput('');  \n  // const top = useFormInput('');\n  // const bottom = useFormInput('');\n  // const body = useFormInput('');\n\n\n  const [url, setUrl] = useState(''); // const [formInputState, setFormInputState] = useState('inline');\n\n  const [photoShowState, setPhotoShowState] = useState('none');\n  const [photo, setPhoto] = useState({\n    url: '',\n    topText: '',\n    bottom: '',\n    textColor: '#000000'\n  });\n  const [textColor, setTextColor] = useState('#000000');\n\n  const handleTextColor = e => {\n    e.preventDefault();\n    setTextColor(e.target.value);\n  };\n\n  useEffect(() => {\n    // console.log('useEffect photoShowState',photoShowState)\n    // console.log('useEffect url', url)\n    if (url !== '') {\n      setPhotoShowState('flex');\n      setPhoto({\n        url: url,\n        top: topText,\n        bottom: bottomText,\n        textcolor: textColor\n      });\n    } else {\n      setPhotoShowState('none');\n      setPhoto({\n        url: '',\n        top: '',\n        bottom: '',\n        textcolor: textColor\n      });\n    } // eslint-disable-next-line\n\n  }, [url, topText.value, bottomText.value, textColor]); // const handleCheckBox = () => {\n  // if(formInputState === 'none') setFormInputState('inline')\n  // else setFormInputState('none')\n  //   setFormInputState('inline')\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.imagePreview,\n      style: {\n        display: photoShowState\n      },\n      children: /*#__PURE__*/_jsxDEV(PostPhoto, {\n        photo: photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Title\",\n        variant: \"outlined\",\n        value: title,\n        inputRef: input => !title.length && input && input.focus(),\n        error: titleValid.length ? true : false,\n        helperText: titleValid.length ? titleValid : '',\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: formInputState\n        },\n        children: [/*#__PURE__*/_jsxDEV(UploadPhoto, {\n          token: auth.authState.token,\n          setUrl: setUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), \"Text Color\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          onChange: handleTextColor,\n          defaultValue: textColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Top Text\",\n          variant: \"outlined\",\n          value: topText,\n          error: topTextValid.length ? true : false,\n          helperText: topTextValid.length ? topTextValid : '',\n          onChange: e => setTopText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Bottom Text\",\n          variant: \"outlined\",\n          value: bottomText,\n          error: bottomTextValid.length ? true : false,\n          helperText: bottomTextValid.length ? bottomTextValid : '',\n          onChange: e => setBottomText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => history.push('/'),\n          variant: \"contained\",\n          color: \"default\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPostForm, \"CO6D30ho0G4wWA6B9tcABUEgQSo=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = NewPostForm;\nexport default NewPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js"],"names":["React","useContext","useEffect","useState","useDispatch","useHistory","makeStyles","Button","TextField","Box","addNewPost","AuthContext","PostPhoto","UploadPhoto","v4","uuid","useStyles","theme","root","display","width","border","form","flexDirection","margin","buttons","input","backgroundColor","marginRight","memeInput","imagePreview","alignItems","justifyContent","image","height","borderRadius","padding","NewPostForm","classes","auth","dispatch","history","title","setTitle","topText","setTopText","bottomText","setBottomText","titleValid","setTitleValid","topTextValid","setTopTextValid","bottomTextValid","setBottomTextValid","length","handleSubmit","e","preventDefault","payload","parent_id","photo_id","token","authState","url","setUrl","photoShowState","setPhotoShowState","photo","setPhoto","bottom","textColor","setTextColor","handleTextColor","target","value","top","textcolor","focus","formInputState","push"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Button, \n  TextField,\n  // Checkbox,\n  // FormControlLabel,\n  Box,\n} from '@material-ui/core';\nimport { \n  addNewPost,\n } from '../dogfriendsPostsSlice';\n// import { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\n// import FormInputOutlined from './FormInputOutlined';\nimport PostPhoto from './PostPhoto';\n// import NewPhotoForm from './NewPhotoForm';\nimport UploadPhoto from './UploadPhoto';\n\nimport { v4 as uuid } from 'uuid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    border: '1px solid red',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0',\n  },\n  buttons: {\n\n  },\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px',\n  },\n  memeInput: {\n    // display: formInputState,\n  },\n  imagePreview: {\n    width: 'auto',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  image: {\n    width: '400px',\n    height: '400px',\n    borderRadius: '10px',\n    padding: '10px',\n  }\n}));\n\nconst NewPostForm = () => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // console.log('NewPostForm auth',auth)\n  const [title, setTitle] = useState('');\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  // const [body, setBody] = useState('');\n  // const [color, setColor] = useState('');\n  const [titleValid, setTitleValid] = useState('');\n  const [topTextValid, setTopTextValid] = useState('');\n  const [bottomTextValid, setBottomTextValid] = useState('');\n  // const [bodyValid, setBodyValid] = useState('');\n  // const [colorValid, setColorValid] = useState(true);\n\n  // validate title\n  useEffect(() => {\n    if(title.length > 30) {\n      setTitleValid('Title must be betwen 1 and 30 characters in length.');\n    } else {\n      setTitleValid('');\n    }\n  }, [title]);\n  // validate topText\n  useEffect(() => {\n    if(topText.length > 30) {\n      setTopTextValid('Top text must be betwen 1 and 30 characters in length.');\n    } else {\n      setTopTextValid('');\n    }\n  }, [topText]);\n  // validate bottomText\n  useEffect(() => {\n    if(bottomText.length > 30) {\n      setBottomTextValid('Bottom text must be betwen 1 and 30 characters in length.');\n    } else {\n      setBottomTextValid('');\n    }\n  }, [bottomText]);\n  // validate body\n  // useEffect(() => {\n  //   if([...body].filter(e => e!==' ').length > 200) {\n  //     setBodyValid('Body text must be betwen 1 and 200 characters in length.');\n  //   } else {\n  //     setBodyValid('');\n  //   }\n  // }, [body]);\n\n  const handleSubmit = e => {   \n    e.preventDefault();\n    // if(title.length && description.length && body.length) {\n    //   const payload = {\n    //     id: 'id',\n    //     title: title, \n    //     description: 'description', \n    //     body: body,\n    //     username: auth.authState.userInfo.username,\n    //     token: auth.authState.token\n    //   }\n    //   dispatch(addNewPost(payload));    \n    //   history.push('/');\n    // } \n    const payload = {\n      parent_id: uuid(),\n      photo_id: uuid(),\n      title: title, \n      // description: 'description', \n      // body: uuid(),\n      // username: auth.authState.userInfo.username,\n      token: auth.authState.token\n    }\n    dispatch(addNewPost(payload));    \n  }\n  \n  // const title = useFormInput('');  \n  // const top = useFormInput('');\n  // const bottom = useFormInput('');\n  // const body = useFormInput('');\n\n  const [url, setUrl] = useState('');\n  // const [formInputState, setFormInputState] = useState('inline');\n  const [photoShowState, setPhotoShowState] = useState('none');\n  const [photo, setPhoto] = useState({\n    url: '',\n    topText: '',\n    bottom: '',\n    textColor: '#000000'\n  });\n  const [textColor, setTextColor] = useState('#000000');  \n  const handleTextColor = (e) => {\n    e.preventDefault();\n    setTextColor(e.target.value);\n  }\n  useEffect(() => {\n    // console.log('useEffect photoShowState',photoShowState)\n    // console.log('useEffect url', url)\n    if(url !== '') {\n      setPhotoShowState('flex');\n      setPhoto({\n        url: url,\n        top: topText,\n        bottom: bottomText,\n        textcolor: textColor\n      });\n    } else {\n      setPhotoShowState('none');\n      setPhoto({\n        url: '',\n        top: '',\n        bottom: '',\n        textcolor: textColor\n      });\n    }\n    // eslint-disable-next-line\n  }, [url, topText.value, bottomText.value, textColor]);\n\n  // const handleCheckBox = () => {\n    // if(formInputState === 'none') setFormInputState('inline')\n    // else setFormInputState('none')\n  //   setFormInputState('inline')\n  // }\n  \n  return (\n    <div className={classes.root}>    \n      <Box className={classes.imagePreview} style={{display: photoShowState}}>\n        <PostPhoto photo={photo}/>\n        \n      </Box>\n      <form className={classes.form} >   \n\n        <TextField \n          label=\"Title\" \n          variant='outlined' \n          value={title}\n          inputRef={input => !title.length && input && input.focus()}\n          error={titleValid.length ? true : false}\n          helperText={titleValid.length ? titleValid : ''}\n          onChange={e => setTitle(e.target.value)} />\n        {/* <FormControlLabel\n          control={<Checkbox onChange={handleCheckBox} />}\n          label=\"Add a photo.\"/> */}\n        <div style={{display: formInputState}}>\n          {/* <NewPhotoForm url={url} handleSetUrl={handleSetUrl} /> */}\n          <UploadPhoto token={auth.authState.token} setUrl={setUrl}/>\n          Text Color&nbsp;  \n          <input           \n            type=\"color\" \n            onChange={handleTextColor}\n            defaultValue={textColor} />\n          <TextField \n            label=\"Top Text\" \n            variant='outlined' \n            value={topText}\n            error={topTextValid.length ? true : false}\n            helperText={topTextValid.length ? topTextValid : ''}\n            onChange={e => setTopText(e.target.value)} />\n          <TextField \n            label=\"Bottom Text\" \n            variant='outlined' \n            value={bottomText}\n            error={bottomTextValid.length ? true : false}\n            helperText={bottomTextValid.length ? bottomTextValid : ''}\n            onChange={e => setBottomText(e.target.value)} />\n            \n        </div>\n        {/* <TextField \n          multiline\n          rows={3}\n          label=\"Body\" \n          variant='outlined' \n          value={body}\n          error={bodyValid.length ? true : false}\n          helperText={bodyValid.length ? bodyValid : ''}\n          onChange={e => setBody(e.target.value)} /> */}\n        \n        <div className={classes.buttons}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\n            Save\n          </Button>\n          <Button onClick={() => history.push('/')} variant=\"contained\" color=\"default\" >\n            Cancel\n          </Button>\n        </div>      \n      </form>\n    </div>\n  );\n}\n\nexport default NewPostForm;"]},"metadata":{},"sourceType":"module"}