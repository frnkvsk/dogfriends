{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js\";\n\n/** Login and Signup */\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nimport { login, getUserInfo } from '../api/DogfriendsApi';\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh'\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff'\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  }\n}));\nexport default function LoginForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const username = useFormInput();\n  const password = useFormInput('', 'password');\n  const auth = useContext(AuthContext); // const [errorMessage, setErrorMessage] = useState(false);\n  // const [usernameValue, setUsernameValue] = useState('username'); \n  // const [formState, setFormState] = useState(\"userInfo\"); \n  // const handleChange = (e, newValue) => {\n  //   setValue(newValue);\n  // }\n\n  const handleSubmitLogin = async () => {\n    // setErrorMessage(false);\n    try {\n      // verify username and password are correct\n      const resp = await login(username.value, password.value); // if logged in, use resp.token to get user information\n\n      const userInfo = await getUserInfo({\n        token: resp.data.token,\n        username: username.value\n      });\n      auth.setAuthState({\n        userInfo: userInfo.data.user,\n        token: resp.data.token\n      });\n      history.push(`/`);\n    } catch (error) {\n      // setErrorMessage(true);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Username\",\n    formInput: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormInputOutlined, {\n    label: \"Password\",\n    formInput: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmitLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/LoginForm.js"],"names":["React","useContext","makeStyles","Button","useFormInput","AuthContext","FormInputOutlined","login","getUserInfo","useHistory","useStyles","theme","root","display","flexDirection","alignItems","justifyContent","width","minHeight","maxWidth","padding","height","form","backgroundColor","button","margin","err","color","fontSize","backButton","marginRight","spacing","completed","LoginForm","classes","history","username","password","auth","handleSubmitLogin","resp","value","userInfo","token","data","setAuthState","user","push","error","console","log"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,sBAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE,YAJZ;AAKJC,IAAAA,KAAK,EAAE,MALH;AAMJC,IAAAA,SAAS,EAAE,OANP;AAOJC,IAAAA,QAAQ,EAAE,OAPN;AAQJC,IAAAA,OAAO,EAAE,KARL;AASJC,IAAAA,MAAM,EAAE;AATJ,GADiC;AAYvCC,EAAAA,IAAI,EAAE;AACJL,IAAAA,KAAK,EAAE,MADH;AAEJM,IAAAA,eAAe,EAAE;AAFb,GAZiC;AAgBvCC,EAAAA,MAAM,EAAE;AACNX,IAAAA,OAAO,EAAE,MADH;AAENG,IAAAA,cAAc,EAAE,UAFV;AAGNS,IAAAA,MAAM,EAAE;AAHF,GAhB+B;AAqBvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GArBkC;AAyBvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEnB,KAAK,CAACoB,OAAN,CAAc,CAAd;AADH,GAzB2B;AA4BvCC,EAAAA,SAAS,EAAE;AACTnB,IAAAA,OAAO,EAAE;AADA;AA5B4B,CAAZ,CAAD,CAA5B;AAmCA,eAAe,SAASoB,SAAT,GAAqB;AAClC,QAAMC,OAAO,GAAGxB,SAAS,EAAzB;AACA,QAAMyB,OAAO,GAAG1B,UAAU,EAA1B;AACA,QAAM2B,QAAQ,GAAGhC,YAAY,EAA7B;AACA,QAAMiC,QAAQ,GAAGjC,YAAY,CAAC,EAAD,EAAK,UAAL,CAA7B;AACA,QAAMkC,IAAI,GAAGrC,UAAU,CAACI,WAAD,CAAvB,CALkC,CAMlC;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMkC,iBAAiB,GAAG,YAAY;AACpC;AACA,QAAI;AACF;AACA,YAAMC,IAAI,GAAG,MAAMjC,KAAK,CAAC6B,QAAQ,CAACK,KAAV,EAAiBJ,QAAQ,CAACI,KAA1B,CAAxB,CAFE,CAGF;;AACA,YAAMC,QAAQ,GAAG,MAAMlC,WAAW,CAAC;AAACmC,QAAAA,KAAK,EAAEH,IAAI,CAACI,IAAL,CAAUD,KAAlB;AAAyBP,QAAAA,QAAQ,EAAEA,QAAQ,CAACK;AAA5C,OAAD,CAAlC;AACAH,MAAAA,IAAI,CAACO,YAAL,CAAkB;AAChBH,QAAAA,QAAQ,EAAEA,QAAQ,CAACE,IAAT,CAAcE,IADR;AAEhBH,QAAAA,KAAK,EAAEH,IAAI,CAACI,IAAL,CAAUD;AAFD,OAAlB;AAIAR,MAAAA,OAAO,CAACY,IAAR,CAAc,GAAd;AACD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAhBD;;AAkBA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACZ,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,UAAzB;AAAoC,IAAA,SAAS,EAAEc,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,UAAzB;AAAoC,IAAA,SAAS,EAAEC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACV,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEe,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAHF,CADF;AASD","sourcesContent":["/** Login and Signup */\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nimport { login, getUserInfo } from '../api/DogfriendsApi';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100vh',\n    maxWidth: '700px',\n    padding: '2px',\n    height: '100vh',\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n\n}));\n\n\nexport default function LoginForm() {\n  const classes = useStyles();\n  const history = useHistory();\n  const username = useFormInput();\n  const password = useFormInput('', 'password');\n  const auth = useContext(AuthContext);\n  // const [errorMessage, setErrorMessage] = useState(false);\n  // const [usernameValue, setUsernameValue] = useState('username'); \n  // const [formState, setFormState] = useState(\"userInfo\"); \n\n  // const handleChange = (e, newValue) => {\n  //   setValue(newValue);\n  // }\n\n  const handleSubmitLogin = async () => {\n    // setErrorMessage(false);\n    try {\n      // verify username and password are correct\n      const resp = await login(username.value, password.value);\n      // if logged in, use resp.token to get user information\n      const userInfo = await getUserInfo({token: resp.data.token, username: username.value});\n      auth.setAuthState({\n        userInfo: userInfo.data.user,\n        token: resp.data.token,\n      });\n      history.push(`/`);\n    } catch (error) {\n      // setErrorMessage(true);\n      console.log(error)\n    }     \n  }\n  \n  return (\n    <form className={classes.form}>\n      <FormInputOutlined label='Username' formInput={username}/>\n      <FormInputOutlined label='Password' formInput={password} />\n      <div className={classes.button}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmitLogin}>Submit</Button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}