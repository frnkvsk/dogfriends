{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getUserInfo } from './api/DogfriendsApi';\nexport const getUserInfoData = createAsyncThunk('getVotes', async payload => {\n  // console.log('dogfriendsUserSlice payload',payload)\n  const response = await getUserInfo(payload);\n  return response.data;\n});\nexport const dogfriendsUserSlice = createSlice({\n  name: 'userList',\n  initialState: {\n    userList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  // reducers: {\n  //   logout: (state, action) => {\n  //     state.userList = {\n  //       status: 'idle',\n  //       data: [],\n  //       error: {}\n  //     }\n  //   }\n  // },\n  extraReducers: {\n    // get user info\n    [getUserInfoData.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getUserInfoData.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getUserInfoData.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload\n      };\n    }\n  }\n}); // export const {\n//   logout,\n// } = dogfriendsUserSlice.actions;\n\nexport const selectUser = state => state.userList.userList;\nexport default dogfriendsUserSlice.reducer;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/dogfriendsUserSlice.js"],"names":["createAsyncThunk","createSlice","getUserInfo","getUserInfoData","payload","response","data","dogfriendsUserSlice","name","initialState","userList","status","error","extraReducers","pending","state","action","fulfilled","rejected","selectUser","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SACEC,WADF,QAEO,qBAFP;AAKA,OAAO,MAAMC,eAAe,GAAGH,gBAAgB,CAC7C,UAD6C,EAE7C,MAAOI,OAAP,IAAmB;AACjB;AACA,QAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACE,OAAD,CAAlC;AACA,SAAOC,QAAQ,CAACC,IAAhB;AACD,CAN4C,CAAxC;AASP,OAAO,MAAMC,mBAAmB,GAAGN,WAAW,CAAC;AAC7CO,EAAAA,IAAI,EAAE,UADuC;AAE7CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,MADA;AAERL,MAAAA,IAAI,EAAE,EAFE;AAGRM,MAAAA,KAAK,EAAE;AAHC;AADE,GAF+B;AAS7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,aAAa,EAAE;AACb;AACA,KAACV,eAAe,CAACW,OAAjB,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5CD,MAAAA,KAAK,CAACL,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,SADO;AAEfL,QAAAA,IAAI,EAAE,EAFS;AAGfM,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KARY;AASb,KAACT,eAAe,CAACc,SAAjB,GAA6B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC9CD,MAAAA,KAAK,CAACL,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,WADO;AAEfL,QAAAA,IAAI,EAAEU,MAAM,CAACZ,OAFE;AAGfQ,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD,KAfY;AAgBb,KAACT,eAAe,CAACe,QAAjB,GAA4B,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,MAAAA,KAAK,CAACL,QAAN,GAAiB;AACfC,QAAAA,MAAM,EAAE,UADO;AAEfL,QAAAA,IAAI,EAAE,EAFS;AAGfM,QAAAA,KAAK,EAAEI,MAAM,CAACZ;AAHC,OAAjB;AAKD;AAtBY;AAlB8B,CAAD,CAAvC,C,CA4CP;AACA;AACA;;AAEA,OAAO,MAAMe,UAAU,GAAGJ,KAAK,IAAIA,KAAK,CAACL,QAAN,CAAeA,QAA3C;AAEP,eAAeH,mBAAmB,CAACa,OAAnC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  getUserInfo\n} from './api/DogfriendsApi';\n\n\nexport const getUserInfoData = createAsyncThunk(\n  'getVotes',\n  async (payload) => {\n    // console.log('dogfriendsUserSlice payload',payload)\n    const response = await getUserInfo(payload);\n    return response.data;\n  }\n);\n\nexport const dogfriendsUserSlice = createSlice({\n  name: 'userList',\n  initialState: {\n    userList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  // reducers: {\n  //   logout: (state, action) => {\n  //     state.userList = {\n  //       status: 'idle',\n  //       data: [],\n  //       error: {}\n  //     }\n  //   }\n  // },\n  extraReducers: {\n    // get user info\n    [getUserInfoData.pending]: (state, action) => {\n      state.userList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [getUserInfoData.fulfilled]: (state, action) => {\n      state.userList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [getUserInfoData.rejected]: (state, action) => {\n      state.userList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    }, \n  }\n});\n\n// export const {\n//   logout,\n// } = dogfriendsUserSlice.actions;\n\nexport const selectUser = state => state.userList.userList;\n\nexport default dogfriendsUserSlice.reducer;"]},"metadata":{},"sourceType":"module"}