{"ast":null,"code":"import axios from 'axios'; // const BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\n\nconst request = async (endpoint, paramsOrData = {}, verb = 'get') => {\n  console.log('API Call:', endpoint, paramsOrData, verb);\n\n  try {\n    const res = await axios({\n      method: verb,\n      url: endpoint,\n      [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData\n    });\n    return res; // axios sends query string data via the \"params\" key,\n    // and request body data via the \"data\" key,\n    // so the key we need depends on the HTTP verb\n  } catch (err) {\n    let message = err.response ? err.response.data.message : err;\n    throw Array.isArray(message) ? message : [message];\n  }\n}; // photos\n\n\nconst postNewPhoto = async (url, formData) => {\n  console.log('postNewPhoto'); // const url = process.env.REACT_APP_CLOUDINARY_BASE_URL+'upload';\n\n  const response = await request(url, formData, 'post');\n  const data = await response.json();\n  return data; // acceptedFiles.forEach(async (acceptedFile) => {\n  //   const formData = new FormData();\n  //   formData.append('file', acceptedFile);\n  //   formData.append('upload_preset', process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET);\n  //   const response = await request(url, formData, 'post');\n  //   const data = await response.json();      \n  //   return data;\n  //   // for dev we will just return this url so we don't keep making calls to Cloudinary API\n  //   // return \"http://res.cloudinary.com/dsxlpdoea/image/upload/v1605993605/photo-1544568100-847a948585b9_evaw8c.jpg\";\n  // });\n};\n\nconst postDestroyPhoto = async (public_id, signature) => {\n  //https://api.cloudinary.com/v1_1/demo/image/destroy -X POST --data 'public_id=sample&timestamp=173719931&api_key=436464676&signature=a788d68f86a6f868af'\n  const data = {\n    public_id: public_id,\n    timestamp: Date.now(),\n    api_key: process.env.REACT_APP_CLOUDINARY_API_KEY,\n    signature: signature\n  };\n  const url = process.env.REACT_APP_CLOUDINARY_BASE_URL + 'image/destroy';\n  const response = await request(url, data, 'post');\n  return await response.json(); // for dev we will just return this url so we don't keep making calls to Cloudinary API\n  // return data \n};\n\nexport { postNewPhoto, postDestroyPhoto };","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/api/DogfriendsPhotosApi.js"],"names":["axios","request","endpoint","paramsOrData","verb","console","log","res","method","url","err","message","response","data","Array","isArray","postNewPhoto","formData","json","postDestroyPhoto","public_id","signature","timestamp","Date","now","api_key","process","env","REACT_APP_CLOUDINARY_API_KEY","REACT_APP_CLOUDINARY_BASE_URL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,OAAO,GAAG,OAAOC,QAAP,EAAiBC,YAAY,GAAG,EAAhC,EAAoCC,IAAI,GAAG,KAA3C,KAAqD;AAEnEC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,QAAzB,EAAmCC,YAAnC,EAAiDC,IAAjD;;AACA,MAAI;AACF,UAAMG,GAAG,GAAG,MAAMP,KAAK,CAAC;AACtBQ,MAAAA,MAAM,EAAEJ,IADc;AAEtBK,MAAAA,GAAG,EAAEP,QAFiB;AAGtB,OAACE,IAAI,KAAK,KAAT,GAAiB,QAAjB,GAA4B,MAA7B,GAAsCD;AAHhB,KAAD,CAAvB;AAKA,WAAOI,GAAP,CANE,CAOA;AACA;AACA;AACH,GAVD,CAUC,OAAMG,GAAN,EAAW;AACV,QAAIC,OAAO,GAAGD,GAAG,CAACE,QAAJ,GAAeF,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkBF,OAAjC,GAA2CD,GAAzD;AACA,UAAMI,KAAK,CAACC,OAAN,CAAcJ,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAAzC;AACD;AACF,CAjBD,C,CAmBA;;;AACA,MAAMK,YAAY,GAAG,OAAOP,GAAP,EAAYQ,QAAZ,KAAyB;AAC5CZ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAD4C,CAE5C;;AACA,QAAMM,QAAQ,GAAG,MAAMX,OAAO,CAACQ,GAAD,EAAMQ,QAAN,EAAgB,MAAhB,CAA9B;AACA,QAAMJ,IAAI,GAAG,MAAMD,QAAQ,CAACM,IAAT,EAAnB;AACA,SAAOL,IAAP,CAL4C,CAM5C;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACD,CAnBD;;AAoBA,MAAMM,gBAAgB,GAAG,OAAOC,SAAP,EAAkBC,SAAlB,KAAgC;AACvD;AACA,QAAMR,IAAI,GAAG;AACXO,IAAAA,SAAS,EAAEA,SADA;AAEXE,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFA;AAGXC,IAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,4BAHV;AAIXP,IAAAA,SAAS,EAAEA;AAJA,GAAb;AAMA,QAAMZ,GAAG,GAAGiB,OAAO,CAACC,GAAR,CAAYE,6BAAZ,GAA0C,eAAtD;AAEA,QAAMjB,QAAQ,GAAG,MAAMX,OAAO,CAACQ,GAAD,EAAMI,IAAN,EAAY,MAAZ,CAA9B;AACA,SAAO,MAAMD,QAAQ,CAACM,IAAT,EAAb,CAXuD,CAavD;AACA;AACD,CAfD;;AAiBA,SACEF,YADF,EAEEG,gBAFF","sourcesContent":["import axios from 'axios';\n\n// const BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\n\nconst request = async (endpoint, paramsOrData = {}, verb = 'get') => {\n\n  console.log('API Call:', endpoint, paramsOrData, verb);\n  try {\n    const res = await axios({\n      method: verb,\n      url: endpoint,\n      [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData});\n    \n    return res;\n      // axios sends query string data via the \"params\" key,\n      // and request body data via the \"data\" key,\n      // so the key we need depends on the HTTP verb\n  }catch(err) {\n    let message = err.response ? err.response.data.message : err;\n    throw Array.isArray(message) ? message : [message];\n  }\n}\n\n// photos\nconst postNewPhoto = async (url, formData) => {\n  console.log('postNewPhoto')\n  // const url = process.env.REACT_APP_CLOUDINARY_BASE_URL+'upload';\n  const response = await request(url, formData, 'post');\n  const data = await response.json();      \n  return data;\n  // acceptedFiles.forEach(async (acceptedFile) => {\n  //   const formData = new FormData();\n  //   formData.append('file', acceptedFile);\n  //   formData.append('upload_preset', process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET);\n\n  //   const response = await request(url, formData, 'post');\n  //   const data = await response.json();      \n  //   return data;\n\n  //   // for dev we will just return this url so we don't keep making calls to Cloudinary API\n  //   // return \"http://res.cloudinary.com/dsxlpdoea/image/upload/v1605993605/photo-1544568100-847a948585b9_evaw8c.jpg\";\n\n  // });\n}\nconst postDestroyPhoto = async (public_id, signature) => {\n  //https://api.cloudinary.com/v1_1/demo/image/destroy -X POST --data 'public_id=sample&timestamp=173719931&api_key=436464676&signature=a788d68f86a6f868af'\n  const data = {\n    public_id: public_id,\n    timestamp: Date.now(),\n    api_key: process.env.REACT_APP_CLOUDINARY_API_KEY,\n    signature: signature\n  }\n  const url = process.env.REACT_APP_CLOUDINARY_BASE_URL+'image/destroy';\n\n  const response = await request(url, data, 'post');\n  return await response.json();\n\n  // for dev we will just return this url so we don't keep making calls to Cloudinary API\n  // return data \n}\n\nexport {\n  postNewPhoto,\n  postDestroyPhoto\n}"]},"metadata":{},"sourceType":"module"}