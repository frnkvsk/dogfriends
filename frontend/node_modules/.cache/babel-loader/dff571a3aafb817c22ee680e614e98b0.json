{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/pages/Profile.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, FormHelperText } from '@material-ui/core';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Button, Box } from '@material-ui/core';\nimport { AuthContext } from '../context/AuthContext';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { patchUserInfo } from '../api/DogfriendsApi';\nimport UserInfoForm from '../components/UserInfoForm';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    maxWidth: '500px',\n    padding: '30px',\n    height: '100vh'\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff'\n  },\n  label: {\n    fontSize: '18px',\n    fontWeight: 'bold',\n    width: '90%',\n    margin: '10px 20px 0 20px'\n  },\n  input: {\n    width: '90%',\n    margin: '0 20px 0 20px'\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px'\n  },\n  success: {\n    color: '#4caf50',\n    fontSize: '24px'\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px'\n  }\n}));\nexport default function Profile() {\n  const auth = useContext(AuthContext);\n  const user = auth.authState.userInfo;\n  const classes = useStyles();\n  const username = useFormInput(user.username);\n  const password = useFormInput(\"\");\n  const first_name = useFormInput(user.first_name);\n  const last_name = useFormInput(user.last_name);\n  const email = useFormInput(user.email);\n  const photo_url = useFormInput(user.photo_url);\n  const [successMessage, setSuccessMessage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const handleClick = async data => {\n    try {\n      let userInfo = auth.authState.userInfo; // const userInfo = {\n      //   username: username.value,\n      //   first_name: first_name.value,\n      //   last_name: last_name.value,        \n      //   email: email.value,\n      //   photo_url: photo_url.value || first_name.value,\n      // }\n\n      console.log('userInfo', userInfo);\n      console.log('data', data); // set context state and save it to localstorage\n      // auth.setAuthState({\n      //   token: auth.authState.token,\n      //   userInfo: userInfo,\n      // });\n      // persist data to the database\n      // userInfo.password = password.value;\n      // if(Object.values(userInfo).every(e => e.length)) {\n      //   await patchUserInfo(auth.authState.token, userInfo);\n      //   setErrorMessage(false);\n      //   setSuccessMessage(true);\n      // } else {\n      //   setSuccessMessage(false);\n      //   setErrorMessage(true);\n      // }      \n    } catch (error) {\n      console.error('Profile err', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(Box, {\n    className: classes.success,\n    component: \"span\",\n    display: successMessage ? 'block' : 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Success: Profile updated\"), /*#__PURE__*/React.createElement(Box, {\n    className: classes.err,\n    component: \"span\",\n    display: errorMessage ? 'block' : 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Error: Inputs incomplete\"));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/pages/Profile.js"],"names":["React","useState","useContext","makeStyles","Container","FormHelperText","OutlinedInput","Button","Box","AuthContext","useFormInput","patchUserInfo","UserInfoForm","useStyles","theme","root","display","flexDirection","alignItems","maxWidth","padding","height","form","width","backgroundColor","label","fontSize","fontWeight","margin","input","button","justifyContent","success","color","err","Profile","auth","user","authState","userInfo","classes","username","password","first_name","last_name","email","photo_url","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleClick","data","console","log","error"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, FormHelperText, } from '@material-ui/core';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Button, Box } from '@material-ui/core';\nimport { AuthContext } from '../context/AuthContext';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { patchUserInfo } from '../api/DogfriendsApi';\nimport UserInfoForm from '../components/UserInfoForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    maxWidth: '500px',\n    padding: '30px',\n    height: '100vh',\n  },\n  form: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n  },\n  label: {\n    fontSize: '18px',\n    fontWeight: 'bold',\n    width: '90%',\n    margin: '10px 20px 0 20px',\n  },\n  input: {\n    width: '90%',\n    margin: '0 20px 0 20px',\n  },\n  button: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    margin: '10px 20px 15px',\n  },\n  success: {\n    color: '#4caf50',\n    fontSize: '24px',\n  },\n  err: {\n    color: '#ff1744',\n    fontSize: '24px',\n  }\n\n}));\n\nexport default function Profile() {\n  const auth = useContext(AuthContext);\n  const user = auth.authState.userInfo;\n  const classes = useStyles();\n  const username = useFormInput(user.username);\n  const password = useFormInput(\"\");\n  const first_name = useFormInput(user.first_name);\n  const last_name = useFormInput(user.last_name);\n  const email = useFormInput(user.email);\n  const photo_url = useFormInput(user.photo_url);  \n  const [successMessage, setSuccessMessage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const handleClick = async (data) => {\n    try {\n      let userInfo = auth.authState.userInfo;\n      // const userInfo = {\n      //   username: username.value,\n      //   first_name: first_name.value,\n      //   last_name: last_name.value,        \n      //   email: email.value,\n      //   photo_url: photo_url.value || first_name.value,\n      // }\n      console.log('userInfo',userInfo)\n      console.log('data',data)\n      // set context state and save it to localstorage\n      // auth.setAuthState({\n      //   token: auth.authState.token,\n      //   userInfo: userInfo,\n      // });\n      // persist data to the database\n      // userInfo.password = password.value;\n      // if(Object.values(userInfo).every(e => e.length)) {\n      //   await patchUserInfo(auth.authState.token, userInfo);\n      //   setErrorMessage(false);\n      //   setSuccessMessage(true);\n      // } else {\n      //   setSuccessMessage(false);\n      //   setErrorMessage(true);\n      // }      \n    } catch (error) {\n      console.error('Profile err',error);\n    }    \n  }\n\n  return (\n    \n    <Container className={classes.root}>\n      <h1>Profile</h1>  \n      <Box className={classes.success} \n        component=\"span\" \n        display={successMessage ? 'block' : 'none'}\n        >\n          Success: Profile updated\n      </Box>    \n      <Box className={classes.err} \n        component=\"span\" \n        display={errorMessage ? 'block' : 'none'}\n        >\n          Error: Inputs incomplete\n      </Box>  \n      {/* <UserInfoForm handleSubmit={handleClick} />   */}\n      {/* <form className={classes.form}>      \n        <FormHelperText className={classes.label} >Username</FormHelperText>\n        <FormHelperText className={classes.label}>{username.value}</FormHelperText>\n\n        <FormHelperText className={classes.label}>Confirm Password</FormHelperText>\n        <OutlinedInput required={true} className={classes.input} name=\"password\" type=\"password\" variant=\"outlined\" {...password} />\n\n        <FormHelperText className={classes.label}>First Name</FormHelperText>\n        <OutlinedInput className={classes.input} name=\"first_name\" variant=\"outlined\" {...first_name}/>\n\n        <FormHelperText className={classes.label}>Last Name</FormHelperText>\n        <OutlinedInput className={classes.input} name=\"last_name\" variant=\"outlined\" {...last_name}/>\n\n        <FormHelperText className={classes.label}>Email</FormHelperText>\n        <OutlinedInput className={classes.input} name=\"email\" variant=\"outlined\" {...email}/>\n\n        <FormHelperText className={classes.label}>Photo URL</FormHelperText>\n        <OutlinedInput className={classes.input} name=\"photo_url\" variant=\"outlined\" {...photo_url}/>\n        <div className={classes.button}>\n          <Button onClick={handleClick} variant=\"contained\" color=\"primary\">Update Profile</Button>\n        </div>          \n      </form> */}\n      \n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}