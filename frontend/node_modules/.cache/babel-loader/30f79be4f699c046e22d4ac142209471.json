{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react'; // import ImageUploading from 'react-images-uploading';\n\nimport photo_drop_zone from '../assets/photo_drop_zone.jpg'; // import Container from '@material-ui/core/Container';\n\nimport { makeStyles } from '@material-ui/core/styles'; // import ResizeImage from './ResizeImage';\n\nconst useStyles = makeStyles(theme => ({\n  photoDrop: {\n    backgroundImage: `url(${photo_drop_zone})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    width: '400px',\n    height: '370px',\n    border: '2px dotted salmon',\n    margin: '100px',\n    cursor: 'pointer'\n  }\n}));\nconst fileReader = new FileReader();\nexport function UploadImage({\n  handleUploadImage\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [origImage, setOrigImage] = useState('');\n  const [newImage, setNewImage] = useState('');\n\n  fileReader.onload = function (event) {\n    var image = new Image();\n\n    image.onload = function () {\n      setOrigImage(image.src);\n      var canvas = document.createElement(\"canvas\");\n      var context = canvas.getContext(\"2d\");\n      canvas.width = image.width / 4;\n      canvas.height = image.height / 4;\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      console.log('image.onload canvas.toDataURL()', canvas.toDataURL());\n      setNewImage(canvas.toDataURL());\n    };\n\n    image.src = event.target.result;\n  };\n\n  useEffect(() => {\n    const filterType = new RegExp('^(?:image//bmp|image//cis-cod|image/gif|image/ief|image/jpeg|image/jpeg|image/jpeg|image/pipeg|image/png|image/svg+xml|image/tiff|image/x-cmu-raster|image/x-cmx|image/x-icon|image/x-portable-anymap|image/x-portable-bitmap|image/x-portable-graymap|image/x-portable-pixmap|image/x-rgb|image/x-xbitmap|image/x-xpixmap|image/x-xwindowdump)$', 'i');\n    const uploadImage = document.getElementById(\"upload-Image\"); //check and retuns the length of uploded file.\n\n    if (uploadImage.files.length === 0) {\n      return;\n    } //Is Used for validate a valid file.\n\n\n    const uploadFile = document.getElementById(\"upload-Image\").files[0];\n\n    if (!filterType.test(uploadFile.type)) {\n      alert(\"Please select a valid image.\");\n      return;\n    }\n\n    fileReader.readAsDataURL(uploadFile);\n  }, [fileReader]); // var loadImageFile = function () {\n  //   var uploadImage = document.getElementById(\"upload-Image\");\n  //   //check and retuns the length of uploded file.\n  //   if (uploadImage.files.length === 0) { \n  //     return; \n  //   }\n  //   //Is Used for validate a valid file.\n  //   var uploadFile = document.getElementById(\"upload-Image\").files[0];\n  //   if (!filterType.test(uploadFile.type)) {\n  //     alert(\"Please select a valid image.\"); \n  //     return;\n  //   }\n  //   fileReader.readAsDataURL(uploadFile);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      className: classes.photoDrop,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"uploadForm\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Select Image - \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"upload-Image\",\n                  type: \"file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Origal Img - \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: \"original-Img\",\n                  src: origImage,\n                  alt: \"original limage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Compress Img - \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: \"upload-Preview\",\n                  src: newImage,\n                  alt: \"resized limage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n} // export function UploadImage({handleUploadImage}) {\n//   const classes = useStyles();\n//   // const [images, setImages] = React.useState([]);\n//   const [origImage, setOrigImage] = useState('');\n//   const [newImage, setNewImage] = useState('');\n//   const maxNumber = 1;\n//   const onChange = async (imageList, addUpdateIndex) => {\n//     // data for submit\n//     console.log(imageList, addUpdateIndex);\n//     const img = await ResizeImage(imageList, 200, 200);\n//     imageList[0].data_url = img;\n//     // console.log('UploadImage img',img)\n//     await setImages(imageList);\n//     console.log('img',img)\n//     console.log('imageList',imageList)\n//     // handleUploadImage(img)\n//   };\n//   return (\n//     <div className=\"App\">\n//       <ImageUploading\n//         multiple\n//         value={images}\n//         onChange={onChange}\n//         maxNumber={maxNumber}\n//         dataURLKey=\"data_url\"\n//       >\n//         {({\n//           imageList,\n//           onImageUpload,\n//           onImageRemoveAll,\n//           onImageUpdate,\n//           onImageRemove,\n//           isDragging,\n//           dragProps,\n//         }) => (\n//           // write your building UI\n//           <div className=\"upload__image-wrapper\">\n//             {!images.length &&\n//               <Container \n//                 className={classes.photoDrop}\n//                 onClick={onImageUpload}\n//                 {...dragProps}>\n//                   <p>Drag and drop photo or click to open.</p>\n//               </Container>\n//             }\n//             {/* <Container \n//               className={classes.photoDrop}\n//               onClick={onImageUpload}\n//               {...dragProps}>\n//                 <p>Drag and drop photo or click to open.</p>\n//             </Container> */}\n//             {/* <button\n//               style={isDragging ? { color: 'red' } : undefined}\n//               onClick={onImageUpload}\n//               {...dragProps}\n//             >\n//               Click or Drop here\n//             </button> */}\n//             &nbsp;\n//             {/* <button onClick={onImageRemoveAll}>Remove all images</button> */}\n//             {imageList.map((image, index) => (\n//               <div key={index} className=\"image-item\">\n//                 <img src={image['data_url']} alt=\"\" />\n//                 {/* {width = image['data_url'].width} */}\n//                 <div className=\"image-item__btn-wrapper\">\n//                   {/* <button onClick={() => onImageUpdate(index)}>Update</button> */}\n//                   <button onClick={() => onImageRemove(index)}>Remove</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </ImageUploading>\n//     </div>\n//   );\n// }\n\n_s(UploadImage, \"rzzhmMH8kJhQ2CSATvUiBcbSQkQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadImage.js"],"names":["React","useEffect","useMemo","useState","photo_drop_zone","makeStyles","useStyles","theme","photoDrop","backgroundImage","backgroundSize","backgroundPosition","width","height","border","margin","cursor","fileReader","FileReader","UploadImage","handleUploadImage","classes","origImage","setOrigImage","newImage","setNewImage","onload","event","image","Image","src","canvas","document","createElement","context","getContext","drawImage","console","log","toDataURL","target","result","filterType","RegExp","uploadImage","getElementById","files","length","uploadFile","test","type","alert","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\n// import ImageUploading from 'react-images-uploading';\nimport photo_drop_zone from '../assets/photo_drop_zone.jpg';\n// import Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import ResizeImage from './ResizeImage';\n\nconst useStyles = makeStyles((theme) => ({\n  photoDrop: {\n    backgroundImage: `url(${photo_drop_zone})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    width: '400px',\n    height: '370px',\n    border: '2px dotted salmon',\n    margin: '100px',\n    cursor: 'pointer',\n  }\n  \n}));\nconst fileReader = new FileReader();\nexport function UploadImage({handleUploadImage}) {\n  const classes = useStyles();\n  const [origImage, setOrigImage] = useState('');\n  const [newImage, setNewImage] = useState('');\n  \n  \n\n  fileReader.onload = function (event) {\n    var image = new Image();\n    image.onload=function(){\n        setOrigImage(image.src);\n        var canvas=document.createElement(\"canvas\");\n        var context=canvas.getContext(\"2d\");\n        canvas.width=image.width/4;\n        canvas.height=image.height/4;\n        context.drawImage(image,\n            0,\n            0,\n            image.width,\n            image.height,\n            0,\n            0,\n            canvas.width,\n            canvas.height\n        );\n        console.log('image.onload canvas.toDataURL()',canvas.toDataURL())\n        setNewImage(canvas.toDataURL());\n    }\n    image.src=event.target.result;\n  };\n\n  useEffect(() => {\n    const filterType = new RegExp('^(?:image//bmp|image//cis-cod|image/gif|image/ief|image/jpeg|image/jpeg|image/jpeg|image/pipeg|image/png|image/svg+xml|image/tiff|image/x-cmu-raster|image/x-cmx|image/x-icon|image/x-portable-anymap|image/x-portable-bitmap|image/x-portable-graymap|image/x-portable-pixmap|image/x-rgb|image/x-xbitmap|image/x-xpixmap|image/x-xwindowdump)$','i');\n    const uploadImage = document.getElementById(\"upload-Image\");\n    \n    //check and retuns the length of uploded file.\n    if (uploadImage.files.length === 0) { \n      return; \n    }\n    \n    //Is Used for validate a valid file.\n    const uploadFile = document.getElementById(\"upload-Image\").files[0];\n    if (!filterType.test(uploadFile.type)) {\n      alert(\"Please select a valid image.\"); \n      return;\n    }\n    \n    fileReader.readAsDataURL(uploadFile);\n  }, [fileReader])\n  // var loadImageFile = function () {\n  //   var uploadImage = document.getElementById(\"upload-Image\");\n    \n  //   //check and retuns the length of uploded file.\n  //   if (uploadImage.files.length === 0) { \n  //     return; \n  //   }\n    \n  //   //Is Used for validate a valid file.\n  //   var uploadFile = document.getElementById(\"upload-Image\").files[0];\n  //   if (!filterType.test(uploadFile.type)) {\n  //     alert(\"Please select a valid image.\"); \n  //     return;\n  //   }\n    \n  //   fileReader.readAsDataURL(uploadFile);\n  // }\n  return (\n    <>\n    <body className={classes.photoDrop}>\n      <form name=\"uploadForm\">\n        <table>\n          <tbody>\n            <tr>\n              <td>Select Image - <input id=\"upload-Image\" type=\"file\"/></td>\n            </tr>\n            <tr>\n              <td>Origal Img - <img id=\"original-Img\" src={origImage} alt='original limage'/></td>\n            </tr>\n            <tr>\n              <td>Compress Img - <img id=\"upload-Preview\" src={newImage} alt='resized limage'/></td>\n            </tr>\n            \n          </tbody>\n        </table>\n      </form>\n    </body>\n    </>\n  )\n}\n// export function UploadImage({handleUploadImage}) {\n//   const classes = useStyles();\n//   // const [images, setImages] = React.useState([]);\n//   const [origImage, setOrigImage] = useState('');\n//   const [newImage, setNewImage] = useState('');\n//   const maxNumber = 1;\n \n//   const onChange = async (imageList, addUpdateIndex) => {\n//     // data for submit\n    \n//     console.log(imageList, addUpdateIndex);\n    \n//     const img = await ResizeImage(imageList, 200, 200);\n//     imageList[0].data_url = img;\n//     // console.log('UploadImage img',img)\n//     await setImages(imageList);\n//     console.log('img',img)\n//     console.log('imageList',imageList)\n//     // handleUploadImage(img)\n//   };\n \n//   return (\n//     <div className=\"App\">\n//       <ImageUploading\n//         multiple\n//         value={images}\n//         onChange={onChange}\n//         maxNumber={maxNumber}\n//         dataURLKey=\"data_url\"\n//       >\n//         {({\n//           imageList,\n//           onImageUpload,\n//           onImageRemoveAll,\n//           onImageUpdate,\n//           onImageRemove,\n//           isDragging,\n//           dragProps,\n//         }) => (\n//           // write your building UI\n//           <div className=\"upload__image-wrapper\">\n//             {!images.length &&\n//               <Container \n//                 className={classes.photoDrop}\n//                 onClick={onImageUpload}\n//                 {...dragProps}>\n//                   <p>Drag and drop photo or click to open.</p>\n//               </Container>\n//             }\n//             {/* <Container \n//               className={classes.photoDrop}\n//               onClick={onImageUpload}\n//               {...dragProps}>\n//                 <p>Drag and drop photo or click to open.</p>\n//             </Container> */}\n//             {/* <button\n//               style={isDragging ? { color: 'red' } : undefined}\n//               onClick={onImageUpload}\n//               {...dragProps}\n//             >\n//               Click or Drop here\n//             </button> */}\n//             &nbsp;\n//             {/* <button onClick={onImageRemoveAll}>Remove all images</button> */}\n//             {imageList.map((image, index) => (\n//               <div key={index} className=\"image-item\">\n//                 <img src={image['data_url']} alt=\"\" />\n//                 {/* {width = image['data_url'].width} */}\n//                 <div className=\"image-item__btn-wrapper\">\n//                   {/* <button onClick={() => onImageUpdate(index)}>Update</button> */}\n//                   <button onClick={() => onImageRemove(index)}>Remove</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </ImageUploading>\n//     </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}