{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadPhoto.js\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core'; // import {\n//   postPhotoNew\n// } from '../dogfriendsPhotosSlice';\n// import axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n  dropzone: {\n    height: '8rem',\n    margin: '1rem',\n    padding: '1rem',\n    border: '2px dashed salmon',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    active: {\n      border: '2px solid rebeccapurple'\n    }\n  }\n})); // const BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\n// const request = async (endpoint, paramsOrData = {}, verb = 'get') => {\n//   console.log('API Call:', endpoint, paramsOrData, verb);\n//   try {\n//     const res = await axios({\n//       method: verb,\n//       url: endpoint,\n//       [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData});\n//     return res;\n//       // axios sends query string data via the \"params\" key,\n//       // and request body data via the \"data\" key,\n//       // so the key we need depends on the HTTP verb\n//   }catch(err) {\n//     let message = err.response ? err.response.data.message : err;\n//     throw Array.isArray(message) ? message : [message];\n//   }\n// }\n\nconst postNewPhoto = async acceptedFiles => {\n  console.log('postNewPhoto');\n  const url = process.env.REACT_APP_CLOUDINARY_BASE_URL + 'upload';\n  const formData = new FormData();\n  formData.append('file', acceptedFiles[0]);\n  formData.append('upload_preset', process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET);\n  const response = await fetch(url, {\n    method: 'post',\n    body: formData\n  });\n  const data = await response.json();\n  console.log('UploadPhoto postNewPhoto data', data);\n  return data; // acceptedFiles.forEach(async (acceptedFile) => {    \n  //   // for dev we will just return this url so we don't keep making calls to Cloudinary API\n  //   // return \"http://res.cloudinary.com/dsxlpdoea/image/upload/v1605993605/photo-1544568100-847a948585b9_evaw8c.jpg\";\n  // });\n};\n\nexport default function UploadPhoto() {\n  const classes = useStyles();\n  const onDrop = useCallback(async acceptedFiles => {\n    console.log('UploadPhoto acceptedFiles', acceptedFiles);\n    const response = await postNewPhoto(acceptedFiles); // const response = await postPhotoNew(acceptedFiles);\n    // const data = await response.json();\n\n    console.log('UploadPhoto response', response);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accepts: 'image/*',\n    multiple: false\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classes.dropzone\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), \"Drop Zone\"));\n}","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/UploadPhoto.js"],"names":["React","useCallback","useDropzone","makeStyles","useStyles","theme","dropzone","height","margin","padding","border","display","justifyContent","alignItems","fontSize","fontWeight","cursor","active","postNewPhoto","acceptedFiles","console","log","url","process","env","REACT_APP_CLOUDINARY_BASE_URL","formData","FormData","append","REACT_APP_CLOUDINARY_UPLOAD_PRESET","response","fetch","method","body","data","json","UploadPhoto","classes","onDrop","getRootProps","getInputProps","accepts","multiple"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,WAAjB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;AACA;AACA;AAEA;;AAGA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,MAAM,EAAE,MAFA;AAGRC,IAAAA,OAAO,EAAE,MAHD;AAIRC,IAAAA,MAAM,EAAE,mBAJA;AAKRC,IAAAA,OAAO,EAAE,MALD;AAMRC,IAAAA,cAAc,EAAE,QANR;AAORC,IAAAA,UAAU,EAAE,QAPJ;AAQRC,IAAAA,QAAQ,EAAE,MARF;AASRC,IAAAA,UAAU,EAAE,MATJ;AAURC,IAAAA,MAAM,EAAE,SAVA;AAWRC,IAAAA,MAAM,EAAE;AACNP,MAAAA,MAAM,EAAE;AADF;AAXA;AAD6B,CAAZ,CAAD,CAA5B,C,CAoBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMQ,YAAY,GAAG,MAAOC,aAAP,IAAyB;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,6BAAZ,GAA0C,QAAtD;AACA,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBT,aAAa,CAAC,CAAD,CAArC;AACAO,EAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCL,OAAO,CAACC,GAAR,CAAYK,kCAA7C;AAEA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAACU,IAAAA,MAAM,EAAE,MAAT;AAAiBC,IAAAA,IAAI,EAAEP;AAAvB,GAAN,CAA5B;AACA,QAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4Ca,IAA5C;AACA,SAAOA,IAAP,CAV4C,CAW5C;AAEA;AACA;AAEA;AACD,CAjBD;;AAqBA,eAAe,SAASE,WAAT,GAAuB;AACpC,QAAMC,OAAO,GAAGjC,SAAS,EAAzB;AAEA,QAAMkC,MAAM,GAAGrC,WAAW,CAAC,MAAOkB,aAAP,IAAyB;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCF,aAAxC;AACA,UAAMW,QAAQ,GAAG,MAAMZ,YAAY,CAACC,aAAD,CAAnC,CAFkD,CAGlD;AACA;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCS,QAAnC;AAED,GARyB,EAQvB,EARuB,CAA1B;AAUA,QAAM;AAACS,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCtC,WAAW,CAAC;AAChDoC,IAAAA,MADgD;AAEhDG,IAAAA,OAAO,EAAE,SAFuC;AAGhDC,IAAAA,QAAQ,EAAE;AAHsC,GAAD,CAAjD;AAMA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAAC/B;AAAxB,KAAsCiC,YAAY,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,cADF,CADF;AAQD","sourcesContent":["import React , { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core';\n// import {\n//   postPhotoNew\n// } from '../dogfriendsPhotosSlice';\n\n// import axios from 'axios';\n\n\nconst useStyles = makeStyles((theme) => ({\n  dropzone: {\n    height: '8rem',\n    margin: '1rem',\n    padding: '1rem',\n    border: '2px dashed salmon',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    active: {\n      border: '2px solid rebeccapurple',\n    },\n  },\n  \n}));\n\n\n// const BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\n\n// const request = async (endpoint, paramsOrData = {}, verb = 'get') => {\n\n//   console.log('API Call:', endpoint, paramsOrData, verb);\n//   try {\n//     const res = await axios({\n//       method: verb,\n//       url: endpoint,\n//       [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData});\n    \n//     return res;\n//       // axios sends query string data via the \"params\" key,\n//       // and request body data via the \"data\" key,\n//       // so the key we need depends on the HTTP verb\n//   }catch(err) {\n//     let message = err.response ? err.response.data.message : err;\n//     throw Array.isArray(message) ? message : [message];\n//   }\n// }\nconst postNewPhoto = async (acceptedFiles) => {\n  console.log('postNewPhoto')\n  const url = process.env.REACT_APP_CLOUDINARY_BASE_URL+'upload';\n  const formData = new FormData();\n  formData.append('file', acceptedFiles[0]);\n  formData.append('upload_preset', process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET);\n\n  const response = await fetch(url, {method: 'post', body: formData});\n  const data = await response.json();   \n  console.log('UploadPhoto postNewPhoto data',data)   \n  return data;\n  // acceptedFiles.forEach(async (acceptedFile) => {    \n\n  //   // for dev we will just return this url so we don't keep making calls to Cloudinary API\n  //   // return \"http://res.cloudinary.com/dsxlpdoea/image/upload/v1605993605/photo-1544568100-847a948585b9_evaw8c.jpg\";\n\n  // });\n}\n\n\n\nexport default function UploadPhoto() {\n  const classes = useStyles();\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    console.log('UploadPhoto acceptedFiles',acceptedFiles)\n    const response = await postNewPhoto(acceptedFiles);\n    // const response = await postPhotoNew(acceptedFiles);\n    // const data = await response.json();\n\n    console.log('UploadPhoto response',response)   \n    \n  }, []);\n\n  const {getRootProps, getInputProps} = useDropzone({\n    onDrop, \n    accepts: 'image/*',\n    multiple: false,\n  });\n\n  return (\n    <>\n      <div className={classes.dropzone} {...getRootProps()}>\n        <input {...getInputProps()} />\n        Drop Zone\n      </div>\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}