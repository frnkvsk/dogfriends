{"ast":null,"code":"var _jsxFileName = \"/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField, Checkbox, FormControlLabel, Box } from '@material-ui/core'; // import { \n//   addNewPost,\n//   editPost,\n//  } from '../dogfriendsPostsSlice';\n\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nimport PostPhoto from './PostPhoto'; // import NewPhotoForm from './NewPhotoForm';\n\nimport UploadPhoto from './UploadPhoto';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    border: '1px solid red'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0'\n  },\n  buttons: {},\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px'\n  },\n  memeInput: {// display: formInputState,\n  },\n  imagePreview: {\n    width: 'auto',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  image: {\n    width: '400px',\n    height: '400px',\n    borderRadius: '10px',\n    padding: '10px'\n  }\n}));\n\nconst NewPostForm = ({\n  data\n}) => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = e => {// e.preventDefault();\n    // if(title.length && description.length && body.length) {\n    //   const payload = {\n    //     id: id,\n    //     title: title, \n    //     description: description, \n    //     body: body,\n    //     username: auth.authState.userInfo.username,\n    //     token: token\n    //   }\n    //   dispatch(addNewPost(payload));    \n    //   history.push('/');\n    // } \n  };\n\n  const title = useFormInput('');\n  const top = useFormInput('');\n  const bottom = useFormInput('');\n  const body = useFormInput('');\n  const [url, setUrl] = useState('');\n  const [formInputState, setFormInputState] = useState('none');\n  const [photoShowState, setPhotoShowState] = useState('none');\n  const [photo, setPhoto] = useState({\n    url: '',\n    top: '',\n    bottom: '',\n    textColor: '#000000'\n  });\n  const [textColor, setTextColor] = useState('#000000');\n\n  const handleTextColor = e => {\n    e.preventDefault();\n    setTextColor(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log('useEffect photoShowState', photoShowState);\n    console.log('useEffect url', url);\n\n    if (url !== '') {\n      setPhotoShowState('flex');\n      setPhoto({\n        url: url,\n        top: top.value,\n        bottom: bottom.value,\n        textColor: textColor\n      });\n    } else {\n      setPhotoShowState('none');\n      setPhoto({\n        url: '',\n        top: '',\n        bottom: '',\n        textColor: textColor\n      });\n    }\n  }, [url, top.value, bottom.value, textColor]);\n\n  const handleCheckBox = () => {\n    if (formInputState === 'none') setFormInputState('inline');else setFormInputState('none');\n  };\n\n  const handleSetUrl = (failedImages, successImages) => {// const parts = successImages[0].split(';');\n    // const mime = parts[0].split(':')[1];\n    // const name = parts[1].split('=')[1];\n    // const data = parts[2];\n    // // const res = await axios.post(url, { mime, name, image: data });\n    // console.log('parts',parts)\n    // console.log('mime',mime)\n    // console.log('name',name)\n    // console.log('data',data)\n    // console.log('data.imageURL',data.imageURL)\n    // setUrl(data.imageURL);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.imagePreview,\n    style: {\n      display: photoShowState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PostPhoto, {\n    photo: photo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      onChange: handleCheckBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 20\n      }\n    }),\n    label: \"Add text to photo.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: formInputState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UploadPhoto, {\n    setUrl: setUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), \"Text Color\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"color\",\n    onChange: handleTextColor,\n    defaultValue: textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    multiline: true,\n    rows: 4,\n    label: \"Body\",\n    variant: \"outlined\"\n  }, body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push('/'),\n    variant: \"contained\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default NewPostForm;","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/components/NewPostForm.js"],"names":["React","useContext","useEffect","useState","useDispatch","useHistory","makeStyles","Button","TextField","Checkbox","FormControlLabel","Box","useFormInput","AuthContext","FormInputOutlined","PostPhoto","UploadPhoto","useStyles","theme","root","display","width","border","form","flexDirection","margin","buttons","input","backgroundColor","marginRight","memeInput","imagePreview","alignItems","justifyContent","image","height","borderRadius","padding","NewPostForm","data","classes","auth","dispatch","history","handleSubmit","e","title","top","bottom","body","url","setUrl","formInputState","setFormInputState","photoShowState","setPhotoShowState","photo","setPhoto","textColor","setTextColor","handleTextColor","preventDefault","target","value","console","log","handleCheckBox","handleSetUrl","failedImages","successImages","push"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Button, \n  TextField,\n  Checkbox,\n  FormControlLabel,\n  Box,\n} from '@material-ui/core';\n// import { \n//   addNewPost,\n//   editPost,\n//  } from '../dogfriendsPostsSlice';\nimport { useFormInput } from '../hooks/useFormInput';\nimport { AuthContext } from '../context/AuthContext';\nimport FormInputOutlined from './FormInputOutlined';\nimport PostPhoto from './PostPhoto';\n// import NewPhotoForm from './NewPhotoForm';\nimport UploadPhoto from './UploadPhoto';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    border: '1px solid red',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '30px 0 20px 0',\n  },\n  buttons: {\n\n  },\n  input: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    marginRight: '5px',\n  },\n  memeInput: {\n    // display: formInputState,\n  },\n  imagePreview: {\n    width: 'auto',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  image: {\n    width: '400px',\n    height: '400px',\n    borderRadius: '10px',\n    padding: '10px',\n  }\n}));\n\nconst NewPostForm = ({data}) => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  \n\n  const handleSubmit = e => {   \n    // e.preventDefault();\n    // if(title.length && description.length && body.length) {\n    //   const payload = {\n    //     id: id,\n    //     title: title, \n    //     description: description, \n    //     body: body,\n    //     username: auth.authState.userInfo.username,\n    //     token: token\n    //   }\n    //   dispatch(addNewPost(payload));    \n    //   history.push('/');\n    // } \n  }\n  \n  const title = useFormInput('');\n  \n  const top = useFormInput('');\n  const bottom = useFormInput('');\n  const body = useFormInput('');\n  const [url, setUrl] = useState('');\n  const [formInputState, setFormInputState] = useState('none');\n  const [photoShowState, setPhotoShowState] = useState('none');\n  const [photo, setPhoto] = useState({\n    url: '',\n    top: '',\n    bottom: '',\n    textColor: '#000000'\n  });\n  const [textColor, setTextColor] = useState('#000000');  \n  const handleTextColor = (e) => {\n    e.preventDefault();\n    setTextColor(e.target.value);\n  }\n  useEffect(() => {\n    console.log('useEffect photoShowState',photoShowState)\n    console.log('useEffect url', url)\n    if(url !== '') {\n      setPhotoShowState('flex');\n      setPhoto({\n        url: url,\n        top: top.value,\n        bottom: bottom.value,\n        textColor: textColor\n      });\n    } else {\n      setPhotoShowState('none');\n      setPhoto({\n        url: '',\n        top: '',\n        bottom: '',\n        textColor: textColor\n      });\n    }\n  }, [url, top.value, bottom.value, textColor]);\n\n  const handleCheckBox = () => {\n    if(formInputState === 'none') setFormInputState('inline')\n    else setFormInputState('none')\n  }\n  const handleSetUrl = (failedImages, successImages) => {\n    // const parts = successImages[0].split(';');\n    // const mime = parts[0].split(':')[1];\n    // const name = parts[1].split('=')[1];\n    // const data = parts[2];\n    // // const res = await axios.post(url, { mime, name, image: data });\n    // console.log('parts',parts)\n    // console.log('mime',mime)\n    // console.log('name',name)\n    // console.log('data',data)\n    // console.log('data.imageURL',data.imageURL)\n    // setUrl(data.imageURL);\n  }\n  return (\n    <div className={classes.root}>    \n      <Box className={classes.imagePreview} style={{display: photoShowState}}>\n        <PostPhoto photo={photo}/>\n        \n      </Box>\n      <form className={classes.form} noValidate autoComplete=\"off\">   \n\n        {/* <FormInputOutlined label=\"Title\" formInput={title} /> */}\n        <FormControlLabel\n          control={<Checkbox onChange={handleCheckBox} />}\n          label=\"Add text to photo.\"/>\n        <div style={{display: formInputState}}>\n          {/* <NewPhotoForm url={url} handleSetUrl={handleSetUrl} /> */}\n          <UploadPhoto setUrl={setUrl}/>\n          Text Color&nbsp;  \n          <input           \n            type=\"color\" \n            onChange={handleTextColor}\n            defaultValue={textColor} />\n          {/* <FormInputOutlined label=\"Top Text\" formInput={top} />\n          <FormInputOutlined label=\"Bottom Text\" formInput={bottom} /> */}\n        </div>\n        \n        <TextField \n          multiline\n          rows={4} \n          label=\"Body\" \n          variant=\"outlined\" \n          {...body} />\n        \n        <div className={classes.buttons}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\n            Save\n          </Button>\n          <Button onClick={() => history.push('/')} variant=\"contained\" color=\"default\" >\n            Cancel\n          </Button>\n        </div>      \n      </form>\n    </div>\n  );\n}\n\nexport default NewPostForm;"]},"metadata":{},"sourceType":"module"}