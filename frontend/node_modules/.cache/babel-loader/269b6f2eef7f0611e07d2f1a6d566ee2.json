{"ast":null,"code":"/*\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  postNewPhoto,\n  // postDestroyPhoto\n} from './api/DogfriendsPhotosApi';\n\nexport const postPhotoNew = createAsyncThunk(\n  'postNewPhoto',\n  async (url, formData) => {\n    const response = await postNewPhoto(url, formData);\n    return response.data;\n  }\n);\n// export const postPhotoDestroy = createAsyncThunk(\n//   'postPhotoDestroy',\n//   async (public_id, signature) => {\n//     const response = await postDestroyPhoto(public_id, signature);\n//     return response.data;\n//   }\n// );\n\n// export const getPhotoById = createAsyncThunk(\n//   'getPhotoById',\n//   async (id) => {\n//     const response = await getPhotoById(id);\n//     return response.data;\n//   }\n// );\n\nexport const dogfriendsPhotosSlice = createSlice({\n  name: 'photoList',\n  initialState: {\n    photoList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  // reducers: {\n  //   removePhoto: (state, action) => {\n  //     deletePhoto(action.payload.id, action.payload.username, action.payload.token);\n  //   },\n  // },\n  extraReducers: {\n    // post a new photo\n    [postPhotoNew.pending]: (state, action) => {\n      state.photoList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [postPhotoNew.fulfilled]: (state, action) => {\n      state.photoList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [postPhotoNew.rejected]: (state, action) => {\n      state.photoList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    },    \n    // delete a photo\n    // [postPhotoDestroy.pending]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'pending',\n    //     data: {},\n    //     error: {}\n    //   };\n    // },\n    // [postPhotoDestroy.fulfilled]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'fulfilled',\n    //     data: action.payload,\n    //     error: {}\n    //   };\n    // },\n    // [postPhotoDestroy.rejected]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'rejected',\n    //     data: {},\n    //     error: action.payload,\n    //   };\n    // },    \n  }\n});\n\n// export const {\n//   deletePhoto,\n// } = dogfriendsPhotosSlice.actions;\n\nexport const selectPosts = state => state.photoList.photoList;\n\nexport default dogfriendsPhotosSlice.reducer;\n*/","map":{"version":3,"sources":["/home/fv/js/capstone2/dogfriends/frontend/src/features/dogfriends/dogfriendsPhotosSlice.js"],"names":[],"mappingssourcesContent":["/*\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  postNewPhoto,\n  // postDestroyPhoto\n} from './api/DogfriendsPhotosApi';\n\nexport const postPhotoNew = createAsyncThunk(\n  'postNewPhoto',\n  async (url, formData) => {\n    const response = await postNewPhoto(url, formData);\n    return response.data;\n  }\n);\n// export const postPhotoDestroy = createAsyncThunk(\n//   'postPhotoDestroy',\n//   async (public_id, signature) => {\n//     const response = await postDestroyPhoto(public_id, signature);\n//     return response.data;\n//   }\n// );\n\n// export const getPhotoById = createAsyncThunk(\n//   'getPhotoById',\n//   async (id) => {\n//     const response = await getPhotoById(id);\n//     return response.data;\n//   }\n// );\n\nexport const dogfriendsPhotosSlice = createSlice({\n  name: 'photoList',\n  initialState: {\n    photoList: {\n      status: 'idle',\n      data: [],\n      error: {}\n    }\n  },\n  // reducers: {\n  //   removePhoto: (state, action) => {\n  //     deletePhoto(action.payload.id, action.payload.username, action.payload.token);\n  //   },\n  // },\n  extraReducers: {\n    // post a new photo\n    [postPhotoNew.pending]: (state, action) => {\n      state.photoList = {\n        status: 'pending',\n        data: {},\n        error: {}\n      };\n    },\n    [postPhotoNew.fulfilled]: (state, action) => {\n      state.photoList = {\n        status: 'fulfilled',\n        data: action.payload,\n        error: {}\n      };\n    },\n    [postPhotoNew.rejected]: (state, action) => {\n      state.photoList = {\n        status: 'rejected',\n        data: {},\n        error: action.payload,\n      };\n    },    \n    // delete a photo\n    // [postPhotoDestroy.pending]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'pending',\n    //     data: {},\n    //     error: {}\n    //   };\n    // },\n    // [postPhotoDestroy.fulfilled]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'fulfilled',\n    //     data: action.payload,\n    //     error: {}\n    //   };\n    // },\n    // [postPhotoDestroy.rejected]: (state, action) => {\n    //   state.photoList = {\n    //     status: 'rejected',\n    //     data: {},\n    //     error: action.payload,\n    //   };\n    // },    \n  }\n});\n\n// export const {\n//   deletePhoto,\n// } = dogfriendsPhotosSlice.actions;\n\nexport const selectPosts = state => state.photoList.photoList;\n\nexport default dogfriendsPhotosSlice.reducer;\n*/"]},"metadata":{},"sourceType":"module"}